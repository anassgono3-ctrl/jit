{"/home/runner/work/jit/jit/src/backtest/runner.ts":{"path":"/home/runner/work/jit/jit/src/backtest/runner.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":54}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":24},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":22},"end":{"line":10,"column":56}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":45}},"9":{"start":{"line":12,"column":13},"end":{"line":12,"column":26}},"10":{"start":{"line":13,"column":15},"end":{"line":13,"column":30}},"11":{"start":{"line":14,"column":14},"end":{"line":14,"column":45}},"12":{"start":{"line":16,"column":0},"end":{"line":19,"column":3}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":29}},"14":{"start":{"line":32,"column":8},"end":{"line":35,"column":11}},"15":{"start":{"line":37,"column":25},"end":{"line":37,"column":50}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":64}},"17":{"start":{"line":40,"column":24},"end":{"line":40,"column":26}},"18":{"start":{"line":41,"column":8},"end":{"line":72,"column":9}},"19":{"start":{"line":42,"column":30},"end":{"line":42,"column":40}},"20":{"start":{"line":43,"column":12},"end":{"line":71,"column":13}},"21":{"start":{"line":44,"column":31},"end":{"line":44,"column":67}},"22":{"start":{"line":45,"column":16},"end":{"line":45,"column":64}},"23":{"start":{"line":46,"column":16},"end":{"line":46,"column":37}},"24":{"start":{"line":47,"column":16},"end":{"line":54,"column":17}},"25":{"start":{"line":48,"column":20},"end":{"line":53,"column":23}},"26":{"start":{"line":57,"column":16},"end":{"line":57,"column":84}},"27":{"start":{"line":58,"column":16},"end":{"line":70,"column":19}},"28":{"start":{"line":74,"column":24},"end":{"line":74,"column":54}},"29":{"start":{"line":75,"column":29},"end":{"line":75,"column":64}},"30":{"start":{"line":77,"column":28},"end":{"line":77,"column":47}},"31":{"start":{"line":78,"column":29},"end":{"line":78,"column":98}},"32":{"start":{"line":78,"column":46},"end":{"line":78,"column":75}},"33":{"start":{"line":78,"column":92},"end":{"line":78,"column":97}},"34":{"start":{"line":79,"column":32},"end":{"line":81,"column":15}},"35":{"start":{"line":82,"column":31},"end":{"line":82,"column":86}},"36":{"start":{"line":83,"column":27},"end":{"line":83,"column":41}},"37":{"start":{"line":84,"column":30},"end":{"line":84,"column":67}},"38":{"start":{"line":84,"column":50},"end":{"line":84,"column":59}},"39":{"start":{"line":86,"column":31},"end":{"line":86,"column":68}},"40":{"start":{"line":87,"column":32},"end":{"line":98,"column":9}},"41":{"start":{"line":100,"column":8},"end":{"line":100,"column":48}},"42":{"start":{"line":101,"column":8},"end":{"line":105,"column":11}},"43":{"start":{"line":106,"column":8},"end":{"line":106,"column":31}},"44":{"start":{"line":112,"column":25},"end":{"line":112,"column":27}},"45":{"start":{"line":113,"column":8},"end":{"line":126,"column":9}},"46":{"start":{"line":114,"column":26},"end":{"line":114,"column":78}},"47":{"start":{"line":115,"column":30},"end":{"line":115,"column":68}},"48":{"start":{"line":115,"column":48},"end":{"line":115,"column":67}},"49":{"start":{"line":116,"column":12},"end":{"line":121,"column":13}},"50":{"start":{"line":117,"column":33},"end":{"line":117,"column":80}},"51":{"start":{"line":118,"column":32},"end":{"line":118,"column":78}},"52":{"start":{"line":119,"column":32},"end":{"line":119,"column":51}},"53":{"start":{"line":120,"column":16},"end":{"line":120,"column":39}},"54":{"start":{"line":124,"column":12},"end":{"line":124,"column":69}},"55":{"start":{"line":125,"column":12},"end":{"line":125,"column":24}},"56":{"start":{"line":127,"column":8},"end":{"line":127,"column":69}},"57":{"start":{"line":127,"column":39},"end":{"line":127,"column":67}},"58":{"start":{"line":133,"column":26},"end":{"line":133,"column":69}},"59":{"start":{"line":135,"column":29},"end":{"line":142,"column":9}},"60":{"start":{"line":143,"column":21},"end":{"line":143,"column":119}},"61":{"start":{"line":144,"column":23},"end":{"line":153,"column":9}},"62":{"start":{"line":155,"column":8},"end":{"line":166,"column":9}},"63":{"start":{"line":156,"column":30},"end":{"line":161,"column":13}},"64":{"start":{"line":162,"column":37},"end":{"line":162,"column":137}},"65":{"start":{"line":163,"column":12},"end":{"line":163,"column":36}},"66":{"start":{"line":164,"column":12},"end":{"line":164,"column":55}},"67":{"start":{"line":165,"column":12},"end":{"line":165,"column":67}},"68":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"69":{"start":{"line":169,"column":12},"end":{"line":169,"column":78}},"70":{"start":{"line":171,"column":8},"end":{"line":171,"column":22}},"71":{"start":{"line":177,"column":23},"end":{"line":177,"column":25}},"72":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"73":{"start":{"line":180,"column":12},"end":{"line":180,"column":107}},"74":{"start":{"line":183,"column":8},"end":{"line":189,"column":9}},"75":{"start":{"line":184,"column":33},"end":{"line":184,"column":81}},"76":{"start":{"line":185,"column":30},"end":{"line":185,"column":77}},"77":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"78":{"start":{"line":187,"column":16},"end":{"line":187,"column":103}},"79":{"start":{"line":190,"column":8},"end":{"line":196,"column":9}},"80":{"start":{"line":191,"column":33},"end":{"line":191,"column":81}},"81":{"start":{"line":192,"column":30},"end":{"line":192,"column":77}},"82":{"start":{"line":193,"column":12},"end":{"line":195,"column":13}},"83":{"start":{"line":194,"column":16},"end":{"line":194,"column":103}},"84":{"start":{"line":197,"column":8},"end":{"line":200,"column":10}},"85":{"start":{"line":206,"column":30},"end":{"line":206,"column":44}},"86":{"start":{"line":207,"column":32},"end":{"line":207,"column":69}},"87":{"start":{"line":207,"column":52},"end":{"line":207,"column":61}},"88":{"start":{"line":208,"column":37},"end":{"line":208,"column":94}},"89":{"start":{"line":208,"column":57},"end":{"line":208,"column":86}},"90":{"start":{"line":209,"column":28},"end":{"line":209,"column":144}},"91":{"start":{"line":209,"column":55},"end":{"line":209,"column":114}},"92":{"start":{"line":210,"column":30},"end":{"line":210,"column":110}},"93":{"start":{"line":211,"column":28},"end":{"line":211,"column":88}},"94":{"start":{"line":212,"column":37},"end":{"line":214,"column":15}},"95":{"start":{"line":213,"column":41},"end":{"line":213,"column":64}},"96":{"start":{"line":215,"column":8},"end":{"line":223,"column":10}},"97":{"start":{"line":229,"column":30},"end":{"line":236,"column":9}},"98":{"start":{"line":237,"column":37},"end":{"line":243,"column":9}},"99":{"start":{"line":244,"column":8},"end":{"line":271,"column":9}},"100":{"start":{"line":246,"column":27},"end":{"line":246,"column":57}},"101":{"start":{"line":247,"column":12},"end":{"line":258,"column":40}},"102":{"start":{"line":248,"column":16},"end":{"line":248,"column":40}},"103":{"start":{"line":249,"column":17},"end":{"line":258,"column":40}},"104":{"start":{"line":250,"column":16},"end":{"line":250,"column":41}},"105":{"start":{"line":251,"column":17},"end":{"line":258,"column":40}},"106":{"start":{"line":252,"column":16},"end":{"line":252,"column":41}},"107":{"start":{"line":253,"column":17},"end":{"line":258,"column":40}},"108":{"start":{"line":254,"column":16},"end":{"line":254,"column":42}},"109":{"start":{"line":255,"column":17},"end":{"line":258,"column":40}},"110":{"start":{"line":256,"column":16},"end":{"line":256,"column":43}},"111":{"start":{"line":258,"column":16},"end":{"line":258,"column":40}},"112":{"start":{"line":260,"column":25},"end":{"line":260,"column":47}},"113":{"start":{"line":261,"column":12},"end":{"line":270,"column":50}},"114":{"start":{"line":262,"column":16},"end":{"line":262,"column":50}},"115":{"start":{"line":263,"column":17},"end":{"line":270,"column":50}},"116":{"start":{"line":264,"column":16},"end":{"line":264,"column":52}},"117":{"start":{"line":265,"column":17},"end":{"line":270,"column":50}},"118":{"start":{"line":266,"column":16},"end":{"line":266,"column":53}},"119":{"start":{"line":267,"column":17},"end":{"line":270,"column":50}},"120":{"start":{"line":268,"column":16},"end":{"line":268,"column":54}},"121":{"start":{"line":270,"column":16},"end":{"line":270,"column":50}},"122":{"start":{"line":272,"column":8},"end":{"line":275,"column":10}},"123":{"start":{"line":282,"column":8},"end":{"line":282,"column":43}},"124":{"start":{"line":283,"column":8},"end":{"line":283,"column":96}},"125":{"start":{"line":284,"column":8},"end":{"line":284,"column":86}},"126":{"start":{"line":290,"column":22},"end":{"line":296,"column":9}},"127":{"start":{"line":297,"column":8},"end":{"line":321,"column":9}},"128":{"start":{"line":298,"column":12},"end":{"line":320,"column":13}},"129":{"start":{"line":300,"column":31},"end":{"line":300,"column":79}},"130":{"start":{"line":301,"column":16},"end":{"line":319,"column":17}},"131":{"start":{"line":302,"column":20},"end":{"line":302,"column":49}},"132":{"start":{"line":304,"column":21},"end":{"line":319,"column":17}},"133":{"start":{"line":305,"column":20},"end":{"line":305,"column":45}},"134":{"start":{"line":307,"column":21},"end":{"line":319,"column":17}},"135":{"start":{"line":308,"column":20},"end":{"line":308,"column":47}},"136":{"start":{"line":310,"column":21},"end":{"line":319,"column":17}},"137":{"start":{"line":311,"column":20},"end":{"line":311,"column":39}},"138":{"start":{"line":313,"column":21},"end":{"line":319,"column":17}},"139":{"start":{"line":314,"column":20},"end":{"line":314,"column":48}},"140":{"start":{"line":318,"column":20},"end":{"line":318,"column":49}},"141":{"start":{"line":322,"column":8},"end":{"line":322,"column":21}},"142":{"start":{"line":328,"column":8},"end":{"line":344,"column":9}},"143":{"start":{"line":329,"column":31},"end":{"line":329,"column":103}},"144":{"start":{"line":330,"column":31},"end":{"line":330,"column":79}},"145":{"start":{"line":331,"column":27},"end":{"line":331,"column":49}},"146":{"start":{"line":332,"column":24},"end":{"line":332,"column":43}},"147":{"start":{"line":333,"column":29},"end":{"line":333,"column":48}},"148":{"start":{"line":334,"column":26},"end":{"line":334,"column":43}},"149":{"start":{"line":335,"column":12},"end":{"line":338,"column":13}},"150":{"start":{"line":336,"column":31},"end":{"line":336,"column":138}},"151":{"start":{"line":336,"column":59},"end":{"line":336,"column":96}},"152":{"start":{"line":337,"column":16},"end":{"line":337,"column":71}},"153":{"start":{"line":339,"column":12},"end":{"line":339,"column":75}},"154":{"start":{"line":342,"column":12},"end":{"line":342,"column":70}},"155":{"start":{"line":343,"column":12},"end":{"line":343,"column":24}},"156":{"start":{"line":347,"column":0},"end":{"line":347,"column":40}},"157":{"start":{"line":352,"column":4},"end":{"line":385,"column":5}},"158":{"start":{"line":354,"column":35},"end":{"line":354,"column":108}},"159":{"start":{"line":355,"column":31},"end":{"line":355,"column":100}},"160":{"start":{"line":356,"column":23},"end":{"line":362,"column":9}},"161":{"start":{"line":363,"column":23},"end":{"line":363,"column":49}},"162":{"start":{"line":364,"column":24},"end":{"line":364,"column":42}},"163":{"start":{"line":365,"column":8},"end":{"line":365,"column":50}},"164":{"start":{"line":366,"column":8},"end":{"line":366,"column":58}},"165":{"start":{"line":367,"column":8},"end":{"line":367,"column":64}},"166":{"start":{"line":368,"column":8},"end":{"line":368,"column":80}},"167":{"start":{"line":369,"column":8},"end":{"line":369,"column":77}},"168":{"start":{"line":370,"column":8},"end":{"line":370,"column":75}},"169":{"start":{"line":371,"column":8},"end":{"line":371,"column":72}},"170":{"start":{"line":372,"column":8},"end":{"line":372,"column":76}},"171":{"start":{"line":373,"column":8},"end":{"line":373,"column":102}},"172":{"start":{"line":374,"column":8},"end":{"line":374,"column":47}},"173":{"start":{"line":375,"column":8},"end":{"line":375,"column":94}},"174":{"start":{"line":376,"column":8},"end":{"line":376,"column":88}},"175":{"start":{"line":377,"column":8},"end":{"line":377,"column":90}},"176":{"start":{"line":378,"column":8},"end":{"line":378,"column":74}},"177":{"start":{"line":379,"column":8},"end":{"line":379,"column":93}},"178":{"start":{"line":380,"column":8},"end":{"line":380,"column":50}},"179":{"start":{"line":383,"column":8},"end":{"line":383,"column":57}},"180":{"start":{"line":384,"column":8},"end":{"line":384,"column":24}},"181":{"start":{"line":387,"column":0},"end":{"line":387,"column":34}},"182":{"start":{"line":389,"column":0},"end":{"line":391,"column":1}},"183":{"start":{"line":390,"column":4},"end":{"line":390,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":24},"end":{"line":27,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":16},"end":{"line":107,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":78,"column":41},"end":{"line":78,"column":42}},"loc":{"start":{"line":78,"column":46},"end":{"line":78,"column":75}},"line":78},"4":{"name":"(anonymous_4)","decl":{"start":{"line":78,"column":82},"end":{"line":78,"column":83}},"loc":{"start":{"line":78,"column":92},"end":{"line":78,"column":97}},"line":78},"5":{"name":"(anonymous_5)","decl":{"start":{"line":84,"column":45},"end":{"line":84,"column":46}},"loc":{"start":{"line":84,"column":50},"end":{"line":84,"column":59}},"line":84},"6":{"name":"(anonymous_6)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":25},"end":{"line":128,"column":5}},"line":111},"7":{"name":"(anonymous_7)","decl":{"start":{"line":115,"column":43},"end":{"line":115,"column":44}},"loc":{"start":{"line":115,"column":48},"end":{"line":115,"column":67}},"line":115},"8":{"name":"(anonymous_8)","decl":{"start":{"line":127,"column":29},"end":{"line":127,"column":30}},"loc":{"start":{"line":127,"column":39},"end":{"line":127,"column":67}},"line":127},"9":{"name":"(anonymous_9)","decl":{"start":{"line":132,"column":4},"end":{"line":132,"column":5}},"loc":{"start":{"line":132,"column":36},"end":{"line":172,"column":5}},"line":132},"10":{"name":"(anonymous_10)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":37},"end":{"line":201,"column":5}},"line":176},"11":{"name":"(anonymous_11)","decl":{"start":{"line":205,"column":4},"end":{"line":205,"column":5}},"loc":{"start":{"line":205,"column":30},"end":{"line":224,"column":5}},"line":205},"12":{"name":"(anonymous_12)","decl":{"start":{"line":207,"column":47},"end":{"line":207,"column":48}},"loc":{"start":{"line":207,"column":52},"end":{"line":207,"column":61}},"line":207},"13":{"name":"(anonymous_13)","decl":{"start":{"line":208,"column":52},"end":{"line":208,"column":53}},"loc":{"start":{"line":208,"column":57},"end":{"line":208,"column":86}},"line":208},"14":{"name":"(anonymous_14)","decl":{"start":{"line":209,"column":43},"end":{"line":209,"column":44}},"loc":{"start":{"line":209,"column":55},"end":{"line":209,"column":114}},"line":209},"15":{"name":"(anonymous_15)","decl":{"start":{"line":213,"column":29},"end":{"line":213,"column":30}},"loc":{"start":{"line":213,"column":41},"end":{"line":213,"column":64}},"line":213},"16":{"name":"(anonymous_16)","decl":{"start":{"line":228,"column":4},"end":{"line":228,"column":5}},"loc":{"start":{"line":228,"column":35},"end":{"line":276,"column":5}},"line":228},"17":{"name":"(anonymous_17)","decl":{"start":{"line":280,"column":4},"end":{"line":280,"column":5}},"loc":{"start":{"line":280,"column":31},"end":{"line":285,"column":5}},"line":280},"18":{"name":"(anonymous_18)","decl":{"start":{"line":289,"column":4},"end":{"line":289,"column":5}},"loc":{"start":{"line":289,"column":37},"end":{"line":323,"column":5}},"line":289},"19":{"name":"(anonymous_19)","decl":{"start":{"line":327,"column":4},"end":{"line":327,"column":5}},"loc":{"start":{"line":327,"column":34},"end":{"line":345,"column":5}},"line":327},"20":{"name":"(anonymous_20)","decl":{"start":{"line":336,"column":52},"end":{"line":336,"column":53}},"loc":{"start":{"line":336,"column":59},"end":{"line":336,"column":96}},"line":336},"21":{"name":"runBacktest","decl":{"start":{"line":351,"column":15},"end":{"line":351,"column":26}},"loc":{"start":{"line":351,"column":108},"end":{"line":386,"column":1}},"line":351}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":47,"column":16},"end":{"line":54,"column":17}},"type":"if","locations":[{"start":{"line":47,"column":16},"end":{"line":54,"column":17}},{"start":{},"end":{}}],"line":47},"4":{"loc":{"start":{"line":67,"column":33},"end":{"line":67,"column":89}},"type":"cond-expr","locations":[{"start":{"line":67,"column":58},"end":{"line":67,"column":71}},{"start":{"line":67,"column":74},"end":{"line":67,"column":89}}],"line":67},"5":{"loc":{"start":{"line":79,"column":32},"end":{"line":81,"column":15}},"type":"cond-expr","locations":[{"start":{"line":80,"column":14},"end":{"line":80,"column":63}},{"start":{"line":81,"column":14},"end":{"line":81,"column":15}}],"line":79},"6":{"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":86}},"type":"cond-expr","locations":[{"start":{"line":82,"column":57},"end":{"line":82,"column":82}},{"start":{"line":82,"column":85},"end":{"line":82,"column":86}}],"line":82},"7":{"loc":{"start":{"line":155,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":166,"column":9}},{"start":{},"end":{}}],"line":155},"8":{"loc":{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},"type":"if","locations":[{"start":{"line":168,"column":8},"end":{"line":170,"column":9}},{"start":{},"end":{}}],"line":168},"9":{"loc":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},{"start":{},"end":{}}],"line":179},"10":{"loc":{"start":{"line":183,"column":8},"end":{"line":189,"column":9}},"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":189,"column":9}},{"start":{},"end":{}}],"line":183},"11":{"loc":{"start":{"line":183,"column":12},"end":{"line":183,"column":59}},"type":"binary-expr","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":33}},{"start":{"line":183,"column":37},"end":{"line":183,"column":59}}],"line":183},"12":{"loc":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},{"start":{},"end":{}}],"line":186},"13":{"loc":{"start":{"line":190,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":196,"column":9}},{"start":{},"end":{}}],"line":190},"14":{"loc":{"start":{"line":190,"column":12},"end":{"line":190,"column":59}},"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":33}},{"start":{"line":190,"column":37},"end":{"line":190,"column":59}}],"line":190},"15":{"loc":{"start":{"line":193,"column":12},"end":{"line":195,"column":13}},"type":"if","locations":[{"start":{"line":193,"column":12},"end":{"line":195,"column":13}},{"start":{},"end":{}}],"line":193},"16":{"loc":{"start":{"line":209,"column":88},"end":{"line":209,"column":112}},"type":"binary-expr","locations":[{"start":{"line":209,"column":88},"end":{"line":209,"column":105}},{"start":{"line":209,"column":109},"end":{"line":209,"column":112}}],"line":209},"17":{"loc":{"start":{"line":210,"column":30},"end":{"line":210,"column":110}},"type":"cond-expr","locations":[{"start":{"line":210,"column":50},"end":{"line":210,"column":80}},{"start":{"line":210,"column":83},"end":{"line":210,"column":110}}],"line":210},"18":{"loc":{"start":{"line":211,"column":28},"end":{"line":211,"column":88}},"type":"cond-expr","locations":[{"start":{"line":211,"column":48},"end":{"line":211,"column":84}},{"start":{"line":211,"column":87},"end":{"line":211,"column":88}}],"line":211},"19":{"loc":{"start":{"line":212,"column":37},"end":{"line":214,"column":15}},"type":"cond-expr","locations":[{"start":{"line":213,"column":14},"end":{"line":213,"column":84}},{"start":{"line":214,"column":14},"end":{"line":214,"column":15}}],"line":212},"20":{"loc":{"start":{"line":247,"column":12},"end":{"line":258,"column":40}},"type":"if","locations":[{"start":{"line":247,"column":12},"end":{"line":258,"column":40}},{"start":{"line":249,"column":17},"end":{"line":258,"column":40}}],"line":247},"21":{"loc":{"start":{"line":249,"column":17},"end":{"line":258,"column":40}},"type":"if","locations":[{"start":{"line":249,"column":17},"end":{"line":258,"column":40}},{"start":{"line":251,"column":17},"end":{"line":258,"column":40}}],"line":249},"22":{"loc":{"start":{"line":251,"column":17},"end":{"line":258,"column":40}},"type":"if","locations":[{"start":{"line":251,"column":17},"end":{"line":258,"column":40}},{"start":{"line":253,"column":17},"end":{"line":258,"column":40}}],"line":251},"23":{"loc":{"start":{"line":253,"column":17},"end":{"line":258,"column":40}},"type":"if","locations":[{"start":{"line":253,"column":17},"end":{"line":258,"column":40}},{"start":{"line":255,"column":17},"end":{"line":258,"column":40}}],"line":253},"24":{"loc":{"start":{"line":255,"column":17},"end":{"line":258,"column":40}},"type":"if","locations":[{"start":{"line":255,"column":17},"end":{"line":258,"column":40}},{"start":{"line":258,"column":16},"end":{"line":258,"column":40}}],"line":255},"25":{"loc":{"start":{"line":261,"column":12},"end":{"line":270,"column":50}},"type":"if","locations":[{"start":{"line":261,"column":12},"end":{"line":270,"column":50}},{"start":{"line":263,"column":17},"end":{"line":270,"column":50}}],"line":261},"26":{"loc":{"start":{"line":263,"column":17},"end":{"line":270,"column":50}},"type":"if","locations":[{"start":{"line":263,"column":17},"end":{"line":270,"column":50}},{"start":{"line":265,"column":17},"end":{"line":270,"column":50}}],"line":263},"27":{"loc":{"start":{"line":265,"column":17},"end":{"line":270,"column":50}},"type":"if","locations":[{"start":{"line":265,"column":17},"end":{"line":270,"column":50}},{"start":{"line":267,"column":17},"end":{"line":270,"column":50}}],"line":265},"28":{"loc":{"start":{"line":267,"column":17},"end":{"line":270,"column":50}},"type":"if","locations":[{"start":{"line":267,"column":17},"end":{"line":270,"column":50}},{"start":{"line":270,"column":16},"end":{"line":270,"column":50}}],"line":267},"29":{"loc":{"start":{"line":298,"column":12},"end":{"line":320,"column":13}},"type":"if","locations":[{"start":{"line":298,"column":12},"end":{"line":320,"column":13}},{"start":{},"end":{}}],"line":298},"30":{"loc":{"start":{"line":298,"column":16},"end":{"line":298,"column":60}},"type":"binary-expr","locations":[{"start":{"line":298,"column":16},"end":{"line":298,"column":31}},{"start":{"line":298,"column":35},"end":{"line":298,"column":60}}],"line":298},"31":{"loc":{"start":{"line":301,"column":16},"end":{"line":319,"column":17}},"type":"if","locations":[{"start":{"line":301,"column":16},"end":{"line":319,"column":17}},{"start":{"line":304,"column":21},"end":{"line":319,"column":17}}],"line":301},"32":{"loc":{"start":{"line":301,"column":20},"end":{"line":301,"column":73}},"type":"binary-expr","locations":[{"start":{"line":301,"column":20},"end":{"line":301,"column":45}},{"start":{"line":301,"column":49},"end":{"line":301,"column":73}}],"line":301},"33":{"loc":{"start":{"line":304,"column":21},"end":{"line":319,"column":17}},"type":"if","locations":[{"start":{"line":304,"column":21},"end":{"line":319,"column":17}},{"start":{"line":307,"column":21},"end":{"line":319,"column":17}}],"line":304},"34":{"loc":{"start":{"line":304,"column":25},"end":{"line":304,"column":78}},"type":"binary-expr","locations":[{"start":{"line":304,"column":25},"end":{"line":304,"column":51}},{"start":{"line":304,"column":55},"end":{"line":304,"column":78}}],"line":304},"35":{"loc":{"start":{"line":307,"column":21},"end":{"line":319,"column":17}},"type":"if","locations":[{"start":{"line":307,"column":21},"end":{"line":319,"column":17}},{"start":{"line":310,"column":21},"end":{"line":319,"column":17}}],"line":307},"36":{"loc":{"start":{"line":310,"column":21},"end":{"line":319,"column":17}},"type":"if","locations":[{"start":{"line":310,"column":21},"end":{"line":319,"column":17}},{"start":{"line":313,"column":21},"end":{"line":319,"column":17}}],"line":310},"37":{"loc":{"start":{"line":313,"column":21},"end":{"line":319,"column":17}},"type":"if","locations":[{"start":{"line":313,"column":21},"end":{"line":319,"column":17}},{"start":{"line":316,"column":21},"end":{"line":319,"column":17}}],"line":313},"38":{"loc":{"start":{"line":313,"column":25},"end":{"line":313,"column":87}},"type":"binary-expr","locations":[{"start":{"line":313,"column":25},"end":{"line":313,"column":53}},{"start":{"line":313,"column":57},"end":{"line":313,"column":87}}],"line":313},"39":{"loc":{"start":{"line":335,"column":12},"end":{"line":338,"column":13}},"type":"if","locations":[{"start":{"line":335,"column":12},"end":{"line":338,"column":13}},{"start":{},"end":{}}],"line":335},"40":{"loc":{"start":{"line":336,"column":31},"end":{"line":336,"column":138}},"type":"binary-expr","locations":[{"start":{"line":336,"column":31},"end":{"line":336,"column":108}},{"start":{"line":336,"column":112},"end":{"line":336,"column":138}}],"line":336},"41":{"loc":{"start":{"line":351,"column":27},"end":{"line":351,"column":66}},"type":"default-arg","locations":[{"start":{"line":351,"column":41},"end":{"line":351,"column":66}}],"line":351},"42":{"loc":{"start":{"line":351,"column":68},"end":{"line":351,"column":106}},"type":"default-arg","locations":[{"start":{"line":351,"column":81},"end":{"line":351,"column":106}}],"line":351},"43":{"loc":{"start":{"line":389,"column":0},"end":{"line":391,"column":1}},"type":"if","locations":[{"start":{"line":389,"column":0},"end":{"line":391,"column":1}},{"start":{},"end":{}}],"line":389}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":3,"14":3,"15":3,"16":2,"17":2,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":2,"29":2,"30":2,"31":2,"32":1,"33":0,"34":2,"35":2,"36":2,"37":2,"38":1,"39":2,"40":2,"41":2,"42":2,"43":2,"44":3,"45":3,"46":3,"47":3,"48":5,"49":3,"50":2,"51":2,"52":2,"53":1,"54":1,"55":1,"56":2,"57":0,"58":1,"59":1,"60":1,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":2,"86":2,"87":1,"88":2,"89":1,"90":2,"91":1,"92":2,"93":2,"94":2,"95":1,"96":2,"97":2,"98":2,"99":2,"100":1,"101":1,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":1,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":2,"123":2,"124":2,"125":2,"126":2,"127":2,"128":1,"129":1,"130":1,"131":0,"132":1,"133":0,"134":1,"135":0,"136":1,"137":0,"138":1,"139":0,"140":1,"141":2,"142":2,"143":2,"144":2,"145":2,"146":2,"147":2,"148":2,"149":2,"150":0,"151":0,"152":0,"153":2,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":1,"183":0},"f":{"0":2,"1":3,"2":3,"3":1,"4":0,"5":1,"6":3,"7":5,"8":0,"9":1,"10":0,"11":2,"12":1,"13":1,"14":1,"15":1,"16":2,"17":2,"18":2,"19":2,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[0,1],"4":[0,0],"5":[1,1],"6":[1,1],"7":[0,1],"8":[0,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[1,0],"17":[1,1],"18":[1,1],"19":[1,1],"20":[1,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[1,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[1,0],"30":[1,0],"31":[0,1],"32":[1,0],"33":[0,1],"34":[1,1],"35":[0,1],"36":[0,1],"37":[0,1],"38":[1,1],"39":[0,2],"40":[0,0],"41":[0],"42":[0],"43":[0,1]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/backtest/runner.ts","sources":["/home/runner/work/jit/jit/src/backtest/runner.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\nimport { PoolState, fromFixture } from '../sim/pool_state';\nimport { simulateJitAttempt, JitPlan, SwapEvent, PriceFeed, StrategyConfig } from '../sim/execution_sim';\nimport { planJit, loadStrategyConfig, StrategyConfig as PlannerConfig } from '../strategy/jit_planner';\nimport { log } from '../modules/logger';\nimport { metrics } from '../modules/metrics';\nimport { promises as fs } from 'fs';\nimport { join } from 'path';\nimport Ajv from 'ajv';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Backtest fixture\n */\nexport interface BacktestFixture {\n  /** Fixture name */\n  name: string;\n  /** Pool state snapshot */\n  pool: Record<string, unknown>;\n  /** Swap to simulate */\n  swap: SwapEvent;\n  /** Price feed data */\n  priceFeed: PriceFeed;\n  /** Expected outcome (for validation) */\n  expected?: {\n    shouldExecute: boolean;\n    minProfitUsd?: string;\n    maxProfitUsd?: string;\n  };\n}\n\n/**\n * Backtest result for a single fixture\n */\nexport interface BacktestResult {\n  /** Fixture name */\n  fixtureName: string;\n  /** Whether JIT was planned */\n  planned: boolean;\n  /** JIT plan (if planned) */\n  plan: JitPlan | null;\n  /** Whether simulation was executed */\n  simulated: boolean;\n  /** Simulation result (if executed) */\n  simulationResult: any;\n  /** Actual profit USD */\n  actualProfitUsd: string;\n  /** Expected vs actual comparison */\n  validation: {\n    passed: boolean;\n    errors: string[];\n  };\n  /** Execution time in ms */\n  executionTimeMs: number;\n}\n\n/**\n * Complete backtest results\n */\nexport interface BacktestResults {\n  /** Individual fixture results */\n  results: BacktestResult[];\n  /** Success rate as decimal (0.0 to 1.0) */\n  successRate: number;\n  /** Median profit in USD */\n  medianProfitUsd: number;\n  /** Worst (most negative) profit in USD */\n  worstProfitUsd: number;\n  /** Total number of JIT plans generated */\n  totalPlans: number;\n  /** Number of plans that were accepted for execution */\n  acceptedPlans: number;\n  /** Statistics on why plans were rejected */\n  rejectionStats: {\n    profitBelowThreshold: number;\n    minSwapUsdNotMet: number;\n    liquidityNotViable: number;\n    gasTooHigh: number;\n    inclusionProbTooLow: number;\n  };\n  /** Summary statistics (legacy compatibility) */\n  summary: {\n    totalFixtures: number;\n    successfulPlans: number;\n    profitableExecutions: number;\n    totalProfitUsd: string;\n    averageProfitUsd: string;\n    successRate: number;\n    averageExecutionTimeMs: number;\n  };\n  /** Performance distribution (legacy compatibility) */\n  distribution: {\n    profitBuckets: Record<string, number>;\n    executionTimeBuckets: Record<string, number>;\n  };\n  /** Timestamp */\n  timestamp: number;\n}\n\n/**\n * Backtest runner configuration\n */\nexport interface BacktestConfig {\n  /** Fixtures directory */\n  fixturesDir: string;\n  /** Strategy configuration */\n  strategyConfig: PlannerConfig;\n  /** Output file path */\n  outputFile: string;\n  /** Enable detailed logging */\n  verbose: boolean;\n  /** Parallel execution */\n  parallel: boolean;\n}\n\n/**\n * Main backtest runner\n */\nexport class BacktestRunner {\n  private config: BacktestConfig;\n\n  constructor(config: BacktestConfig) {\n    this.config = config;\n  }\n\n  /**\n   * Run backtest on all fixtures\n   */\n  async run(): Promise<BacktestResults> {\n    log.info('Starting backtest run', {\n      fixturesDir: this.config.fixturesDir,\n      outputFile: this.config.outputFile,\n    });\n\n    // Load fixtures\n    const fixtures = await this.loadFixtures();\n    log.info(`Loaded ${fixtures.length} fixtures`);\n\n    // Run tests\n    const results: BacktestResult[] = [];\n    \n    for (const fixture of fixtures) {\n      const startTime = Date.now();\n      \n      try {\n        const result = await this.runSingleFixture(fixture);\n        result.executionTimeMs = Date.now() - startTime;\n        results.push(result);\n\n        if (this.config.verbose) {\n          log.info('Fixture completed', {\n            name: fixture.name,\n            planned: result.planned,\n            profitable: Number(result.actualProfitUsd) > 0,\n            executionTime: result.executionTimeMs,\n          });\n        }\n      } catch (error) {\n        log.error('Fixture failed', { name: fixture.name, error });\n        results.push({\n          fixtureName: fixture.name,\n          planned: false,\n          plan: null,\n          simulated: false,\n          simulationResult: null,\n          actualProfitUsd: '0',\n          validation: {\n            passed: false,\n            errors: [error instanceof Error ? error.message : 'Unknown error'],\n          },\n          executionTimeMs: Date.now() - startTime,\n        });\n      }\n    }\n\n    // Calculate summary statistics\n    const summary = this.calculateSummary(results);\n    const distribution = this.calculateDistribution(results);\n\n    // Calculate new required fields\n    const successRate = summary.successRate;\n    const profitValues = results.map(r => parseFloat(r.actualProfitUsd)).sort((a, b) => a - b);\n    const medianProfitUsd = profitValues.length > 0 \n      ? profitValues[Math.floor(profitValues.length / 2)] \n      : 0;\n    const worstProfitUsd = profitValues.length > 0 ? Math.min(...profitValues) : 0;\n    const totalPlans = results.length; // Total fixtures attempted\n    const acceptedPlans = results.filter(r => r.planned).length;\n    \n    // Calculate rejection statistics (simplified for now)\n    const rejectionStats = this.calculateRejectionStats(results);\n\n    const backtestResults: BacktestResults = {\n      results,\n      successRate,\n      medianProfitUsd,\n      worstProfitUsd,\n      totalPlans,\n      acceptedPlans,\n      rejectionStats,\n      summary,\n      distribution,\n      timestamp: Date.now(),\n    };\n\n    // Save results\n    await this.saveResults(backtestResults);\n\n    log.info('Backtest completed', {\n      totalFixtures: summary.totalFixtures,\n      successRate: summary.successRate,\n      totalProfit: summary.totalProfitUsd,\n    });\n\n    return backtestResults;\n  }\n\n  /**\n   * Load all fixtures from directory\n   */\n  private async loadFixtures(): Promise<BacktestFixture[]> {\n    const fixtures: BacktestFixture[] = [];\n    \n    try {\n      const files = await fs.readdir(this.config.fixturesDir);\n      const jsonFiles = files.filter(f => f.endsWith('.json'));\n      \n      for (const file of jsonFiles) {\n        const filePath = join(this.config.fixturesDir, file);\n        const content = await fs.readFile(filePath, 'utf8');\n        const fixture = JSON.parse(content) as BacktestFixture;\n        fixtures.push(fixture);\n      }\n    } catch (error) {\n      log.error('Failed to load fixtures', { error });\n      throw error;\n    }\n\n    return fixtures.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Run a single fixture test\n   */\n  private async runSingleFixture(fixture: BacktestFixture): Promise<BacktestResult> {\n    const poolState = fromFixture(fixture.pool);\n    \n    // Plan JIT strategy\n    const swapEstimate = {\n      swapSizeUsd: fixture.swap.swapSizeUsd,\n      amountIn: fixture.swap.amountIn,\n      tokenIn: fixture.swap.tokenIn,\n      gasPriceGwei: 50, // Default gas price\n      priorityFeeGwei: 2, // Default priority fee\n      blockDeadline: 3, // 3 blocks\n    };\n\n    const plan = planJit(\n      poolState,\n      swapEstimate,\n      fixture.priceFeed,\n      this.config.strategyConfig\n    );\n\n    const result: BacktestResult = {\n      fixtureName: fixture.name,\n      planned: plan !== null,\n      plan,\n      simulated: false,\n      simulationResult: null,\n      actualProfitUsd: '0',\n      validation: { passed: true, errors: [] },\n      executionTimeMs: 0,\n    };\n\n    // If plan exists, simulate execution\n    if (plan) {\n      const simConfig: StrategyConfig = {\n        minNetProfitUsd: this.config.strategyConfig.minNetProfitUsd,\n        gasEstimateUsd: this.config.strategyConfig.gasEstimateUsd,\n        flashloanFeeBps: this.config.strategyConfig.flashloanFeeBps,\n        maxSlippageBps: this.config.strategyConfig.maxSlippageBps,\n      };\n\n      const simulationResult = simulateJitAttempt(\n        poolState,\n        plan,\n        fixture.swap,\n        fixture.priceFeed,\n        simConfig\n      );\n\n      result.simulated = true;\n      result.simulationResult = simulationResult;\n      result.actualProfitUsd = simulationResult.netProfitUsd;\n    }\n\n    // Validate against expected outcome\n    if (fixture.expected) {\n      result.validation = this.validateResult(result, fixture.expected);\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate result against expected outcome\n   */\n  private validateResult(\n    result: BacktestResult,\n    expected: NonNullable<BacktestFixture['expected']>\n  ): { passed: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    // Check if execution matches expectation\n    if (result.planned !== expected.shouldExecute) {\n      errors.push(\n        `Expected shouldExecute=${expected.shouldExecute}, got planned=${result.planned}`\n      );\n    }\n\n    // Check profit range if specified\n    if (expected.minProfitUsd && result.actualProfitUsd) {\n      const actualProfit = new Decimal(result.actualProfitUsd);\n      const minProfit = new Decimal(expected.minProfitUsd);\n      \n      if (actualProfit.lt(minProfit)) {\n        errors.push(\n          `Profit ${result.actualProfitUsd} below minimum ${expected.minProfitUsd}`\n        );\n      }\n    }\n\n    if (expected.maxProfitUsd && result.actualProfitUsd) {\n      const actualProfit = new Decimal(result.actualProfitUsd);\n      const maxProfit = new Decimal(expected.maxProfitUsd);\n      \n      if (actualProfit.gt(maxProfit)) {\n        errors.push(\n          `Profit ${result.actualProfitUsd} above maximum ${expected.maxProfitUsd}`\n        );\n      }\n    }\n\n    return {\n      passed: errors.length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Calculate summary statistics\n   */\n  private calculateSummary(results: BacktestResult[]): BacktestResults['summary'] {\n    const totalFixtures = results.length;\n    const successfulPlans = results.filter(r => r.planned).length;\n    const profitableExecutions = results.filter(r => Number(r.actualProfitUsd) > 0).length;\n    \n    const totalProfit = results.reduce(\n      (sum, r) => sum.add(new Decimal(r.actualProfitUsd || '0')),\n      new Decimal(0)\n    );\n    \n    const averageProfit = totalFixtures > 0 ? totalProfit.div(totalFixtures) : new Decimal(0);\n    const successRate = totalFixtures > 0 ? profitableExecutions / totalFixtures : 0;\n    \n    const averageExecutionTime = totalFixtures > 0\n      ? results.reduce((sum, r) => sum + r.executionTimeMs, 0) / totalFixtures\n      : 0;\n\n    return {\n      totalFixtures,\n      successfulPlans,\n      profitableExecutions,\n      totalProfitUsd: totalProfit.toString(),\n      averageProfitUsd: averageProfit.toString(),\n      successRate,\n      averageExecutionTimeMs: averageExecutionTime,\n    };\n  }\n\n  /**\n   * Calculate distribution statistics\n   */\n  private calculateDistribution(results: BacktestResult[]): BacktestResults['distribution'] {\n    const profitBuckets: Record<string, number> = {\n      '0-10': 0,\n      '10-25': 0,\n      '25-50': 0,\n      '50-100': 0,\n      '100-250': 0,\n      '250+': 0,\n    };\n\n    const executionTimeBuckets: Record<string, number> = {\n      '0-100ms': 0,\n      '100-500ms': 0,\n      '500-1000ms': 0,\n      '1000-5000ms': 0,\n      '5000ms+': 0,\n    };\n\n    for (const result of results) {\n      // Profit distribution\n      const profit = Number(result.actualProfitUsd);\n      if (profit <= 10) profitBuckets['0-10']++;\n      else if (profit <= 25) profitBuckets['10-25']++;\n      else if (profit <= 50) profitBuckets['25-50']++;\n      else if (profit <= 100) profitBuckets['50-100']++;\n      else if (profit <= 250) profitBuckets['100-250']++;\n      else profitBuckets['250+']++;\n\n      // Execution time distribution\n      const time = result.executionTimeMs;\n      if (time <= 100) executionTimeBuckets['0-100ms']++;\n      else if (time <= 500) executionTimeBuckets['100-500ms']++;\n      else if (time <= 1000) executionTimeBuckets['500-1000ms']++;\n      else if (time <= 5000) executionTimeBuckets['1000-5000ms']++;\n      else executionTimeBuckets['5000ms+']++;\n    }\n\n    return {\n      profitBuckets,\n      executionTimeBuckets,\n    };\n  }\n\n  /**\n   * Save results to file\n   */\n  private async saveResults(results: BacktestResults): Promise<void> {\n    // Validate against schema\n    await this.validateSchema(results);\n\n    await fs.writeFile(\n      this.config.outputFile,\n      JSON.stringify(results, null, 2)\n    );\n    \n    log.info('Backtest results saved', { file: this.config.outputFile });\n  }\n\n  /**\n   * Calculate rejection statistics based on validation errors\n   */\n  private calculateRejectionStats(results: BacktestResult[]): {\n    profitBelowThreshold: number;\n    minSwapUsdNotMet: number;\n    liquidityNotViable: number;\n    gasTooHigh: number;\n    inclusionProbTooLow: number;\n  } {\n    const stats = {\n      profitBelowThreshold: 0,\n      minSwapUsdNotMet: 0,\n      liquidityNotViable: 0,\n      gasTooHigh: 0,\n      inclusionProbTooLow: 0,\n    };\n\n    for (const result of results) {\n      if (!result.planned || !result.validation.passed) {\n        // Analyze validation errors to categorize rejections\n        const errors = result.validation.errors.join(' ').toLowerCase();\n        \n        if (errors.includes('profit') && errors.includes('below')) {\n          stats.profitBelowThreshold++;\n        } else if (errors.includes('minimum') || errors.includes('swap')) {\n          stats.minSwapUsdNotMet++;\n        } else if (errors.includes('liquidity')) {\n          stats.liquidityNotViable++;\n        } else if (errors.includes('gas')) {\n          stats.gasTooHigh++;\n        } else if (errors.includes('inclusion') || errors.includes('probability')) {\n          stats.inclusionProbTooLow++;\n        } else {\n          // Default to profit threshold for unclassified rejections\n          stats.profitBelowThreshold++;\n        }\n      }\n    }\n\n    return stats;\n  }\n\n  /**\n   * Validate results against JSON schema\n   */\n  private async validateSchema(results: BacktestResults): Promise<void> {\n    try {\n      const schemaPath = join(__dirname, '../../schema/backtest_results.schema.json');\n      const schemaData = await fs.readFile(schemaPath, 'utf8');\n      const schema = JSON.parse(schemaData);\n\n      const ajv = new Ajv();\n      const validate = ajv.compile(schema);\n      const valid = validate(results);\n\n      if (!valid) {\n        const errors = validate.errors?.map(err => \n          `${err.instancePath}: ${err.message}`\n        ).join(', ') || 'Unknown validation error';\n        \n        throw new Error(`Schema validation failed: ${errors}`);\n      }\n\n      log.info('Backtest results validated against schema');\n    } catch (error) {\n      log.error('Schema validation failed', { error });\n      throw error;\n    }\n  }\n}\n\n/**\n * CLI entry point for backtest runner\n */\nexport async function runBacktest(\n  fixturesDir: string = './src/backtest/fixtures',\n  outputFile: string = './backtest_results.json'\n): Promise<void> {\n  try {\n    // Load strategy configuration\n    const strategyConfigData = await fs.readFile('./src/config/strategy-config.json', 'utf8');\n    const strategyConfig = loadStrategyConfig(JSON.parse(strategyConfigData));\n\n    const config: BacktestConfig = {\n      fixturesDir,\n      strategyConfig,\n      outputFile,\n      verbose: true,\n      parallel: false,\n    };\n\n    const runner = new BacktestRunner(config);\n    const results = await runner.run();\n\n    console.log('\\n=== BACKTEST RESULTS ===');\n    console.log(`Total Plans: ${results.totalPlans}`);\n    console.log(`Accepted Plans: ${results.acceptedPlans}`);\n    console.log(`Success Rate: ${(results.successRate * 100).toFixed(2)}%`);\n    console.log(`Median Profit: $${results.medianProfitUsd.toFixed(2)}`);\n    console.log(`Worst Profit: $${results.worstProfitUsd.toFixed(2)}`);\n    console.log(`Total Profit: $${results.summary.totalProfitUsd}`);\n    console.log(`Average Profit: $${results.summary.averageProfitUsd}`);\n    console.log(`Average Execution Time: ${results.summary.averageExecutionTimeMs.toFixed(2)}ms`);\n    console.log('--- Rejection Stats ---');\n    console.log(`Profit Below Threshold: ${results.rejectionStats.profitBelowThreshold}`);\n    console.log(`Min Swap USD Not Met: ${results.rejectionStats.minSwapUsdNotMet}`);\n    console.log(`Liquidity Not Viable: ${results.rejectionStats.liquidityNotViable}`);\n    console.log(`Gas Too High: ${results.rejectionStats.gasTooHigh}`);\n    console.log(`Inclusion Prob Too Low: ${results.rejectionStats.inclusionProbTooLow}`);\n    console.log('========================\\n');\n\n  } catch (error) {\n    log.error('Backtest failed', { error });\n    process.exit(1);\n  }\n}\n\n// Run if called directly\nif (require.main === module) {\n  runBacktest().catch(console.error);\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5ab3cfc61561a68927cbafcd8cb3916808899c09"},"/home/runner/work/jit/jit/src/sim/pool_state.ts":{"path":"/home/runner/work/jit/jit/src/sim/pool_state.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":230}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":0},"end":{"line":12,"column":3}},"6":{"start":{"line":17,"column":4},"end":{"line":24,"column":6}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":54}},"8":{"start":{"line":31,"column":4},"end":{"line":49,"column":6}},"9":{"start":{"line":51,"column":0},"end":{"line":51,"column":42}},"10":{"start":{"line":56,"column":4},"end":{"line":69,"column":6}},"11":{"start":{"line":64,"column":79},"end":{"line":67,"column":9}},"12":{"start":{"line":71,"column":0},"end":{"line":71,"column":40}},"13":{"start":{"line":76,"column":4},"end":{"line":76,"column":60}},"14":{"start":{"line":78,"column":0},"end":{"line":78,"column":34}},"15":{"start":{"line":83,"column":4},"end":{"line":83,"column":32}},"16":{"start":{"line":85,"column":0},"end":{"line":85,"column":34}},"17":{"start":{"line":90,"column":4},"end":{"line":90,"column":57}},"18":{"start":{"line":92,"column":0},"end":{"line":92,"column":42}},"19":{"start":{"line":97,"column":4},"end":{"line":110,"column":6}},"20":{"start":{"line":105,"column":72},"end":{"line":108,"column":9}},"21":{"start":{"line":112,"column":0},"end":{"line":112,"column":30}},"22":{"start":{"line":117,"column":23},"end":{"line":117,"column":42}},"23":{"start":{"line":118,"column":18},"end":{"line":118,"column":27}},"24":{"start":{"line":119,"column":4},"end":{"line":128,"column":5}},"25":{"start":{"line":120,"column":8},"end":{"line":127,"column":11}},"26":{"start":{"line":129,"column":4},"end":{"line":139,"column":6}},"27":{"start":{"line":141,"column":0},"end":{"line":141,"column":34}},"28":{"start":{"line":146,"column":4},"end":{"line":167,"column":5}},"29":{"start":{"line":148,"column":26},"end":{"line":148,"column":76}},"30":{"start":{"line":149,"column":8},"end":{"line":150,"column":25}},"31":{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},"32":{"start":{"line":152,"column":26},"end":{"line":152,"column":67}},"33":{"start":{"line":153,"column":8},"end":{"line":154,"column":25}},"34":{"start":{"line":154,"column":12},"end":{"line":154,"column":25}},"35":{"start":{"line":156,"column":8},"end":{"line":162,"column":9}},"36":{"start":{"line":159,"column":30},"end":{"line":159,"column":83}},"37":{"start":{"line":160,"column":12},"end":{"line":161,"column":29}},"38":{"start":{"line":161,"column":16},"end":{"line":161,"column":29}},"39":{"start":{"line":163,"column":8},"end":{"line":163,"column":20}},"40":{"start":{"line":166,"column":8},"end":{"line":166,"column":21}},"41":{"start":{"line":169,"column":0},"end":{"line":169,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"createDefaultTickInfo","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":30}},"loc":{"start":{"line":16,"column":33},"end":{"line":25,"column":1}},"line":16},"2":{"name":"createPoolState","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":24}},"loc":{"start":{"line":30,"column":91},"end":{"line":50,"column":1}},"line":30},"3":{"name":"clonePoolState","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":23}},"loc":{"start":{"line":55,"column":31},"end":{"line":70,"column":1}},"line":55},"4":{"name":"(anonymous_4)","decl":{"start":{"line":64,"column":61},"end":{"line":64,"column":62}},"loc":{"start":{"line":64,"column":79},"end":{"line":67,"column":9}},"line":64},"5":{"name":"getTickInfo","decl":{"start":{"line":75,"column":9},"end":{"line":75,"column":20}},"loc":{"start":{"line":75,"column":34},"end":{"line":77,"column":1}},"line":75},"6":{"name":"setTickInfo","decl":{"start":{"line":82,"column":9},"end":{"line":82,"column":20}},"loc":{"start":{"line":82,"column":40},"end":{"line":84,"column":1}},"line":82},"7":{"name":"updateTimestamp","decl":{"start":{"line":89,"column":9},"end":{"line":89,"column":24}},"loc":{"start":{"line":89,"column":32},"end":{"line":91,"column":1}},"line":89},"8":{"name":"toFixture","decl":{"start":{"line":96,"column":9},"end":{"line":96,"column":18}},"loc":{"start":{"line":96,"column":26},"end":{"line":111,"column":1}},"line":96},"9":{"name":"(anonymous_9)","decl":{"start":{"line":105,"column":53},"end":{"line":105,"column":54}},"loc":{"start":{"line":105,"column":72},"end":{"line":108,"column":9}},"line":105},"10":{"name":"fromFixture","decl":{"start":{"line":116,"column":9},"end":{"line":116,"column":20}},"loc":{"start":{"line":116,"column":30},"end":{"line":140,"column":1}},"line":116},"11":{"name":"validatePoolState","decl":{"start":{"line":145,"column":9},"end":{"line":145,"column":26}},"loc":{"start":{"line":145,"column":34},"end":{"line":168,"column":1}},"line":145}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":30,"column":67},"end":{"line":30,"column":89}},"type":"default-arg","locations":[{"start":{"line":30,"column":86},"end":{"line":30,"column":89}}],"line":30},"4":{"loc":{"start":{"line":76,"column":11},"end":{"line":76,"column":59}},"type":"binary-expr","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":32}},{"start":{"line":76,"column":36},"end":{"line":76,"column":59}}],"line":76},"5":{"loc":{"start":{"line":117,"column":23},"end":{"line":117,"column":42}},"type":"binary-expr","locations":[{"start":{"line":117,"column":23},"end":{"line":117,"column":36}},{"start":{"line":117,"column":40},"end":{"line":117,"column":42}}],"line":117},"6":{"loc":{"start":{"line":149,"column":8},"end":{"line":150,"column":25}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":150,"column":25}},{"start":{},"end":{}}],"line":149},"7":{"loc":{"start":{"line":153,"column":8},"end":{"line":154,"column":25}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":154,"column":25}},{"start":{},"end":{}}],"line":153},"8":{"loc":{"start":{"line":156,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":162,"column":9}},{"start":{},"end":{}}],"line":156},"9":{"loc":{"start":{"line":160,"column":12},"end":{"line":161,"column":29}},"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":161,"column":29}},{"start":{},"end":{}}],"line":160}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":88722,"7":1,"8":9,"9":1,"10":0,"11":0,"12":1,"13":88722,"14":1,"15":0,"16":1,"17":6,"18":1,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"f":{"0":1,"1":88722,"2":9,"3":0,"4":0,"5":88722,"6":0,"7":6,"8":0,"9":0,"10":1,"11":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[88722,88722],"5":[1,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/sim/pool_state.ts","sources":["/home/runner/work/jit/jit/src/sim/pool_state.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Represents the current state of a Uniswap V3 pool slot0\n */\nexport interface Slot0 {\n  /** Current sqrt price as Q64.96 */\n  sqrtPriceX96: string;\n  /** Current tick */\n  tick: number;\n  /** Most recent observation index */\n  observationIndex: number;\n  /** Current observation cardinality */\n  observationCardinality: number;\n  /** Current maximum observation cardinality */\n  observationCardinalityNext: number;\n  /** Current protocol fee */\n  feeProtocol: number;\n  /** Whether the pool is unlocked */\n  unlocked: boolean;\n}\n\n/**\n * Represents liquidity tracking for a specific tick\n */\nexport interface TickInfo {\n  /** Amount of net liquidity added when tick is crossed from left to right */\n  liquidityNet: string;\n  /** Total amount of liquidity that uses the pool either as tick lower or tick upper */\n  liquidityGross: string;\n  /** Fee growth on the other side of this tick (relative to the current tick) */\n  feeGrowthOutside0X128: string;\n  feeGrowthOutside1X128: string;\n  /** Seconds spent on the other side of this tick (relative to the current tick) */\n  secondsOutside: number;\n  /** Whether the tick is initialized */\n  initialized: boolean;\n}\n\n/**\n * Pool configuration\n */\nexport interface PoolConfig {\n  /** Pool address */\n  address: string;\n  /** Token0 address */\n  token0: string;\n  /** Token1 address */\n  token1: string;\n  /** Fee tier (e.g., 3000 for 0.3%) */\n  fee: number;\n  /** Tick spacing */\n  tickSpacing: number;\n  /** Token0 decimals */\n  decimals0: number;\n  /** Token1 decimals */\n  decimals1: number;\n}\n\n/**\n * Represents the complete state of a Uniswap V3 pool for simulation\n */\nexport interface PoolState {\n  /** Pool configuration */\n  config: PoolConfig;\n  /** Current slot0 state */\n  slot0: Slot0;\n  /** Current global liquidity */\n  liquidity: string;\n  /** Global fee growth for token0 */\n  feeGrowthGlobal0X128: string;\n  /** Global fee growth for token1 */\n  feeGrowthGlobal1X128: string;\n  /** Protocol fees owed in token0 */\n  protocolFees0: string;\n  /** Protocol fees owed in token1 */\n  protocolFees1: string;\n  /** Tick data - sparse mapping of tick -> TickInfo */\n  ticks: Map<number, TickInfo>;\n  /** Block timestamp of last update */\n  blockTimestamp: number;\n}\n\n/**\n * Position information for tracking\n */\nexport interface Position {\n  /** Position ID (computed from owner, tickLower, tickUpper) */\n  id: string;\n  /** Owner address */\n  owner: string;\n  /** Lower tick of the position */\n  tickLower: number;\n  /** Upper tick of the position */\n  tickUpper: number;\n  /** Amount of liquidity */\n  liquidity: string;\n  /** Fee growth inside when position was last updated */\n  feeGrowthInside0LastX128: string;\n  feeGrowthInside1LastX128: string;\n  /** Fees owed to the position */\n  tokensOwed0: string;\n  tokensOwed1: string;\n}\n\n/**\n * Creates a default tick info\n */\nexport function createDefaultTickInfo(): TickInfo {\n  return {\n    liquidityNet: '0',\n    liquidityGross: '0',\n    feeGrowthOutside0X128: '0',\n    feeGrowthOutside1X128: '0',\n    secondsOutside: 0,\n    initialized: false,\n  };\n}\n\n/**\n * Creates a new pool state from configuration and initial parameters\n */\nexport function createPoolState(\n  config: PoolConfig,\n  initialSqrtPriceX96: string,\n  initialTick: number,\n  initialLiquidity: string = '0'\n): PoolState {\n  return {\n    config,\n    slot0: {\n      sqrtPriceX96: initialSqrtPriceX96,\n      tick: initialTick,\n      observationIndex: 0,\n      observationCardinality: 1,\n      observationCardinalityNext: 1,\n      feeProtocol: 0,\n      unlocked: true,\n    },\n    liquidity: initialLiquidity,\n    feeGrowthGlobal0X128: '0',\n    feeGrowthGlobal1X128: '0',\n    protocolFees0: '0',\n    protocolFees1: '0',\n    ticks: new Map(),\n    blockTimestamp: Math.floor(Date.now() / 1000),\n  };\n}\n\n/**\n * Deep clones a pool state for simulation purposes\n */\nexport function clonePoolState(state: PoolState): PoolState {\n  return {\n    config: { ...state.config },\n    slot0: { ...state.slot0 },\n    liquidity: state.liquidity,\n    feeGrowthGlobal0X128: state.feeGrowthGlobal0X128,\n    feeGrowthGlobal1X128: state.feeGrowthGlobal1X128,\n    protocolFees0: state.protocolFees0,\n    protocolFees1: state.protocolFees1,\n    ticks: new Map(\n      Array.from(state.ticks.entries()).map(([tick, info]) => [\n        tick,\n        { ...info },\n      ])\n    ),\n    blockTimestamp: state.blockTimestamp,\n  };\n}\n\n/**\n * Gets tick info, returning default if not initialized\n */\nexport function getTickInfo(state: PoolState, tick: number): TickInfo {\n  return state.ticks.get(tick) || createDefaultTickInfo();\n}\n\n/**\n * Sets tick info in the pool state\n */\nexport function setTickInfo(\n  state: PoolState,\n  tick: number,\n  info: TickInfo\n): void {\n  state.ticks.set(tick, info);\n}\n\n/**\n * Updates the block timestamp\n */\nexport function updateTimestamp(state: PoolState): void {\n  state.blockTimestamp = Math.floor(Date.now() / 1000);\n}\n\n/**\n * Serializes pool state to JSON for fixture storage\n */\nexport function toFixture(state: PoolState): Record<string, unknown> {\n  return {\n    config: state.config,\n    slot0: state.slot0,\n    liquidity: state.liquidity,\n    feeGrowthGlobal0X128: state.feeGrowthGlobal0X128,\n    feeGrowthGlobal1X128: state.feeGrowthGlobal1X128,\n    protocolFees0: state.protocolFees0,\n    protocolFees1: state.protocolFees1,\n    ticks: Array.from(state.ticks.entries()).map(([tick, info]) => ({\n      tick,\n      ...info,\n    })),\n    blockTimestamp: state.blockTimestamp,\n  };\n}\n\n/**\n * Deserializes pool state from JSON fixture\n */\nexport function fromFixture(fixture: Record<string, unknown>): PoolState {\n  const ticksArray = (fixture.ticks as Array<{\n    tick: number;\n    liquidityNet: string;\n    liquidityGross: string;\n    feeGrowthOutside0X128: string;\n    feeGrowthOutside1X128: string;\n    secondsOutside: number;\n    initialized: boolean;\n  }>) || [];\n\n  const ticks = new Map<number, TickInfo>();\n  for (const tickData of ticksArray) {\n    ticks.set(tickData.tick, {\n      liquidityNet: tickData.liquidityNet,\n      liquidityGross: tickData.liquidityGross,\n      feeGrowthOutside0X128: tickData.feeGrowthOutside0X128,\n      feeGrowthOutside1X128: tickData.feeGrowthOutside1X128,\n      secondsOutside: tickData.secondsOutside,\n      initialized: tickData.initialized,\n    });\n  }\n\n  return {\n    config: fixture.config as PoolConfig,\n    slot0: fixture.slot0 as Slot0,\n    liquidity: fixture.liquidity as string,\n    feeGrowthGlobal0X128: fixture.feeGrowthGlobal0X128 as string,\n    feeGrowthGlobal1X128: fixture.feeGrowthGlobal1X128 as string,\n    protocolFees0: fixture.protocolFees0 as string,\n    protocolFees1: fixture.protocolFees1 as string,\n    ticks,\n    blockTimestamp: fixture.blockTimestamp as number,\n  };\n}\n\n/**\n * Validates pool state for consistency\n */\nexport function validatePoolState(state: PoolState): boolean {\n  try {\n    // Check that sqrt price is positive\n    const sqrtPrice = new Decimal(state.slot0.sqrtPriceX96);\n    if (sqrtPrice.lte(0)) return false;\n\n    // Check that liquidity is non-negative\n    const liquidity = new Decimal(state.liquidity);\n    if (liquidity.lt(0)) return false;\n\n    // Check tick spacing alignment\n    if (state.slot0.tick % state.config.tickSpacing !== 0) {\n      // Allow small deviation for current tick (it doesn't need to be aligned)\n      // but the deviation should be less than tickSpacing\n      const deviation = Math.abs(state.slot0.tick % state.config.tickSpacing);\n      if (deviation >= state.config.tickSpacing) return false;\n    }\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5bf655bf1e1f16d316f6ac041532f40fc15df12d"},"/home/runner/work/jit/jit/src/sim/execution_sim.ts":{"path":"/home/runner/work/jit/jit/src/sim/execution_sim.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":124}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":44}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":42}},"7":{"start":{"line":10,"column":22},"end":{"line":10,"column":46}},"8":{"start":{"line":11,"column":22},"end":{"line":11,"column":52}},"9":{"start":{"line":13,"column":0},"end":{"line":16,"column":3}},"10":{"start":{"line":27,"column":4},"end":{"line":136,"column":5}},"11":{"start":{"line":29,"column":26},"end":{"line":29,"column":71}},"12":{"start":{"line":30,"column":33},"end":{"line":30,"column":52}},"13":{"start":{"line":32,"column":27},"end":{"line":33,"column":67}},"14":{"start":{"line":34,"column":8},"end":{"line":54,"column":9}},"15":{"start":{"line":35,"column":12},"end":{"line":53,"column":14}},"16":{"start":{"line":56,"column":25},"end":{"line":56,"column":103}},"17":{"start":{"line":58,"column":27},"end":{"line":58,"column":124}},"18":{"start":{"line":60,"column":35},"end":{"line":60,"column":55}},"19":{"start":{"line":61,"column":35},"end":{"line":61,"column":55}},"20":{"start":{"line":63,"column":26},"end":{"line":63,"column":44}},"21":{"start":{"line":64,"column":40},"end":{"line":64,"column":96}},"22":{"start":{"line":65,"column":34},"end":{"line":65,"column":109}},"23":{"start":{"line":67,"column":38},"end":{"line":67,"column":96}},"24":{"start":{"line":68,"column":31},"end":{"line":68,"column":102}},"25":{"start":{"line":69,"column":31},"end":{"line":69,"column":102}},"26":{"start":{"line":71,"column":24},"end":{"line":71,"column":200}},"27":{"start":{"line":73,"column":27},"end":{"line":73,"column":48}},"28":{"start":{"line":75,"column":30},"end":{"line":75,"column":214}},"29":{"start":{"line":76,"column":33},"end":{"line":79,"column":23}},"30":{"start":{"line":81,"column":29},"end":{"line":84,"column":23}},"31":{"start":{"line":86,"column":29},"end":{"line":89,"column":23}},"32":{"start":{"line":90,"column":29},"end":{"line":92,"column":17}},"33":{"start":{"line":94,"column":28},"end":{"line":94,"column":91}},"34":{"start":{"line":95,"column":27},"end":{"line":95,"column":81}},"35":{"start":{"line":96,"column":28},"end":{"line":96,"column":92}},"36":{"start":{"line":97,"column":8},"end":{"line":114,"column":10}},"37":{"start":{"line":117,"column":8},"end":{"line":135,"column":10}},"38":{"start":{"line":138,"column":0},"end":{"line":138,"column":48}},"39":{"start":{"line":147,"column":4},"end":{"line":169,"column":5}},"40":{"start":{"line":149,"column":8},"end":{"line":150,"column":25}},"41":{"start":{"line":150,"column":12},"end":{"line":150,"column":25}},"42":{"start":{"line":152,"column":8},"end":{"line":153,"column":25}},"43":{"start":{"line":153,"column":12},"end":{"line":153,"column":25}},"44":{"start":{"line":154,"column":8},"end":{"line":155,"column":25}},"45":{"start":{"line":155,"column":12},"end":{"line":155,"column":25}},"46":{"start":{"line":157,"column":8},"end":{"line":158,"column":25}},"47":{"start":{"line":158,"column":12},"end":{"line":158,"column":25}},"48":{"start":{"line":160,"column":8},"end":{"line":161,"column":25}},"49":{"start":{"line":161,"column":12},"end":{"line":161,"column":25}},"50":{"start":{"line":163,"column":8},"end":{"line":164,"column":25}},"51":{"start":{"line":164,"column":12},"end":{"line":164,"column":25}},"52":{"start":{"line":165,"column":8},"end":{"line":165,"column":20}},"53":{"start":{"line":168,"column":8},"end":{"line":168,"column":21}},"54":{"start":{"line":171,"column":0},"end":{"line":171,"column":42}},"55":{"start":{"line":184,"column":25},"end":{"line":184,"column":31}},"56":{"start":{"line":185,"column":23},"end":{"line":188,"column":19}},"57":{"start":{"line":189,"column":4},"end":{"line":189,"column":76}},"58":{"start":{"line":191,"column":0},"end":{"line":191,"column":42}},"59":{"start":{"line":200,"column":29},"end":{"line":200,"column":74}},"60":{"start":{"line":201,"column":24},"end":{"line":201,"column":68}},"61":{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},"62":{"start":{"line":206,"column":8},"end":{"line":206,"column":68}},"63":{"start":{"line":208,"column":29},"end":{"line":210,"column":58}},"64":{"start":{"line":211,"column":4},"end":{"line":211,"column":39}},"65":{"start":{"line":213,"column":0},"end":{"line":213,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"simulateJitAttempt","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":27}},"loc":{"start":{"line":26,"column":77},"end":{"line":137,"column":1}},"line":26},"2":{"name":"validateJitPlan","decl":{"start":{"line":146,"column":9},"end":{"line":146,"column":24}},"loc":{"start":{"line":146,"column":50},"end":{"line":170,"column":1}},"line":146},"3":{"name":"estimateGasCost","decl":{"start":{"line":179,"column":9},"end":{"line":179,"column":24}},"loc":{"start":{"line":179,"column":54},"end":{"line":190,"column":1}},"line":179},"4":{"name":"calculateOptimalLiquidity","decl":{"start":{"line":199,"column":9},"end":{"line":199,"column":34}},"loc":{"start":{"line":199,"column":78},"end":{"line":212,"column":1}},"line":199}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":34,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":54,"column":9}},{"start":{},"end":{}}],"line":34},"4":{"loc":{"start":{"line":68,"column":31},"end":{"line":68,"column":102}},"type":"cond-expr","locations":[{"start":{"line":68,"column":64},"end":{"line":68,"column":96}},{"start":{"line":68,"column":99},"end":{"line":68,"column":102}}],"line":68},"5":{"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":102}},"type":"cond-expr","locations":[{"start":{"line":69,"column":64},"end":{"line":69,"column":96}},{"start":{"line":69,"column":99},"end":{"line":69,"column":102}}],"line":69},"6":{"loc":{"start":{"line":90,"column":29},"end":{"line":92,"column":17}},"type":"cond-expr","locations":[{"start":{"line":91,"column":14},"end":{"line":91,"column":85}},{"start":{"line":92,"column":14},"end":{"line":92,"column":17}}],"line":90},"7":{"loc":{"start":{"line":119,"column":19},"end":{"line":119,"column":75}},"type":"cond-expr","locations":[{"start":{"line":119,"column":44},"end":{"line":119,"column":57}},{"start":{"line":119,"column":60},"end":{"line":119,"column":75}}],"line":119},"8":{"loc":{"start":{"line":149,"column":8},"end":{"line":150,"column":25}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":150,"column":25}},{"start":{},"end":{}}],"line":149},"9":{"loc":{"start":{"line":152,"column":8},"end":{"line":153,"column":25}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":153,"column":25}},{"start":{},"end":{}}],"line":152},"10":{"loc":{"start":{"line":154,"column":8},"end":{"line":155,"column":25}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":155,"column":25}},{"start":{},"end":{}}],"line":154},"11":{"loc":{"start":{"line":157,"column":8},"end":{"line":158,"column":25}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":158,"column":25}},{"start":{},"end":{}}],"line":157},"12":{"loc":{"start":{"line":157,"column":12},"end":{"line":157,"column":104}},"type":"binary-expr","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":56}},{"start":{"line":157,"column":60},"end":{"line":157,"column":104}}],"line":157},"13":{"loc":{"start":{"line":160,"column":8},"end":{"line":161,"column":25}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":161,"column":25}},{"start":{},"end":{}}],"line":160},"14":{"loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":104}},"type":"binary-expr","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":56}},{"start":{"line":160,"column":60},"end":{"line":160,"column":104}}],"line":160},"15":{"loc":{"start":{"line":163,"column":8},"end":{"line":164,"column":25}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":164,"column":25}},{"start":{},"end":{}}],"line":163},"16":{"loc":{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},{"start":{},"end":{}}],"line":205}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/sim/execution_sim.ts","sources":["/home/runner/work/jit/jit/src/sim/execution_sim.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAiC;AACjC,6CAAyD;AACzD,2CAAiE;AACjE,+CAAsD;AACtD,qDAA2E;AAE3E,0CAA0C;AAC1C,oBAAO,CAAC,MAAM,CAAC;IACb,SAAS,EAAE,EAAE;IACb,QAAQ,EAAE,oBAAO,CAAC,UAAU;CAC7B,CAAC,CAAC;AAuGH;;;;;;;;GAQG;AACH,SAAgB,kBAAkB,CAChC,WAAsB,EACtB,IAAa,EACb,SAAoB,EACpB,SAAoB,EACpB,MAAsB;IAEtB,IAAI,CAAC;QACH,kCAAkC;QAClC,MAAM,SAAS,GAAG,IAAA,2BAAc,EAAC,WAAW,CAAC,CAAC;QAC9C,MAAM,gBAAgB,GAAG,SAAS,CAAC,SAAS,CAAC;QAE7C,4BAA4B;QAC5B,MAAM,UAAU,GAAG,IAAA,gBAAI,EACrB,SAAS,EACT,SAAS,EAAE,wBAAwB;QACnC,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,OAAO,CACb,CAAC;QAEF,IAAI,IAAI,oBAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7C,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,0BAA0B;gBACjC,kBAAkB,EAAE,GAAG;gBACvB,kBAAkB,EAAE,GAAG;gBACvB,YAAY,EAAE,GAAG;gBACjB,UAAU,EAAE,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE;gBAC5C,gBAAgB,EAAE,GAAG;gBACrB,WAAW,EAAE,GAAG;gBAChB,YAAY,EAAE,GAAG;gBACjB,KAAK,EAAE;oBACL,gBAAgB;oBAChB,cAAc,EAAE,SAAS,CAAC,SAAS;oBACnC,YAAY,EAAE,GAAG;oBACjB,QAAQ,EAAE,EAAgB;oBAC1B,UAAU;oBACV,UAAU,EAAE,EAAgB;iBAC7B;aACF,CAAC;QACJ,CAAC;QAED,0BAA0B;QAC1B,MAAM,QAAQ,GAAG,IAAA,uBAAS,EACxB,SAAS,EACT,SAAS,CAAC,QAAQ,EAClB,SAAS,CAAC,OAAO,CAClB,CAAC;QAEF,6CAA6C;QAC7C,MAAM,UAAU,GAAG,IAAA,gBAAI,EACrB,SAAS,EACT,SAAS,EACT,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,EACd,UAAU,CAAC,SAAS,CACrB,CAAC;QAEF,0BAA0B;QAC1B,MAAM,kBAAkB,GAAG,UAAU,CAAC,SAAS,CAAC;QAChD,MAAM,kBAAkB,GAAG,UAAU,CAAC,SAAS,CAAC;QAEhD,2EAA2E;QAC3E,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACrC,MAAM,uBAAuB,GAAG,IAAI,oBAAO,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC5E,MAAM,iBAAiB,GAAG,IAAI,oBAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAEzF,gDAAgD;QAChD,MAAM,qBAAqB,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC5E,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/F,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QAE/F,uBAAuB;QACvB,MAAM,OAAO,GAAG,IAAA,+BAAiB,EAC/B,cAAc,EACd,cAAc,EACd,SAAS,CAAC,MAAM,CAAC,SAAS,EAC1B,SAAS,CAAC,MAAM,CAAC,SAAS,EAC1B,SAAS,CAAC,cAAc,EACxB,SAAS,CAAC,cAAc,CACzB,CAAC;QAEF,kBAAkB;QAClB,MAAM,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC;QAEzC,uCAAuC;QACvC,MAAM,aAAa,GAAG,IAAA,+BAAiB,EACrC,UAAU,CAAC,OAAO,EAClB,UAAU,CAAC,OAAO,EAClB,SAAS,CAAC,MAAM,CAAC,SAAS,EAC1B,SAAS,CAAC,MAAM,CAAC,SAAS,EAC1B,SAAS,CAAC,cAAc,EACxB,SAAS,CAAC,cAAc,CACzB,CAAC;QAEF,MAAM,gBAAgB,GAAG,IAAI,oBAAO,CAAC,aAAa,CAAC;aAChD,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC;aAC3B,GAAG,CAAC,KAAK,CAAC;aACV,QAAQ,EAAE,CAAC;QAEd,uBAAuB;QACvB,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,OAAO,CAAC;aACtC,GAAG,CAAC,UAAU,CAAC;aACf,GAAG,CAAC,gBAAgB,CAAC;aACrB,QAAQ,EAAE,CAAC;QAEd,0BAA0B;QAC1B,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC;aACxC,GAAG,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,0CAA0C;aACxE,GAAG,CAAC,IAAI,oBAAO,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACpD,QAAQ,EAAE,CAAC;QAEd,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,CAAC,CAAC,IAAI,oBAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;YAC5D,CAAC,CAAC,GAAG,CAAC;QAER,yBAAyB;QACzB,MAAM,WAAW,GAAG,IAAI,oBAAO,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM,UAAU,GAAG,IAAI,oBAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAErF,OAAO;YACL,OAAO,EAAE,IAAI;YACb,kBAAkB,EAAE,cAAc;YAClC,kBAAkB,EAAE,cAAc;YAClC,YAAY;YACZ,UAAU,EAAE,UAAU,CAAC,QAAQ,EAAE;YACjC,gBAAgB;YAChB,WAAW;YACX,YAAY;YACZ,KAAK,EAAE;gBACL,gBAAgB;gBAChB,cAAc,EAAE,SAAS,CAAC,SAAS;gBACnC,YAAY,EAAE,UAAU,CAAC,SAAS;gBAClC,QAAQ;gBACR,UAAU;gBACV,UAAU;aACX;SACF,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;YAC/D,kBAAkB,EAAE,GAAG;YACvB,kBAAkB,EAAE,GAAG;YACvB,YAAY,EAAE,GAAG;YACjB,UAAU,EAAE,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE;YAC5C,gBAAgB,EAAE,GAAG;YACrB,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,KAAK,EAAE;gBACL,gBAAgB,EAAE,WAAW,CAAC,SAAS;gBACvC,cAAc,EAAE,WAAW,CAAC,SAAS;gBACrC,YAAY,EAAE,GAAG;gBACjB,QAAQ,EAAE,EAAgB;gBAC1B,UAAU,EAAE,EAAgB;gBAC5B,UAAU,EAAE,EAAgB;aAC7B;SACF,CAAC;IACJ,CAAC;AACH,CAAC;AAlKD,gDAkKC;AAED;;;;;;GAMG;AACH,SAAgB,eAAe,CAC7B,IAAa,EACb,SAAoB,EACpB,MAAsB;IAEtB,IAAI,CAAC;QACH,4BAA4B;QAC5B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS;YAAE,OAAO,KAAK,CAAC;QAEnD,uBAAuB;QACvB,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QACtE,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAEtE,6BAA6B;QAC7B,IAAI,IAAI,oBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QAErF,wCAAwC;QACxC,IAAI,IAAI,oBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,oBAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAC;QAErF,sCAAsC;QACtC,IAAI,IAAI,oBAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC;YAAE,OAAO,KAAK,CAAC;QAE9E,OAAO,IAAI,CAAC;IACd,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AA1BD,0CA0BC;AAED;;;;;;GAMG;AACH,SAAgB,eAAe,CAC7B,IAAa,EACb,QAAgB,EAChB,WAAmB;IAEnB,wCAAwC;IACxC,oBAAoB;IACpB,sBAAsB;IACtB,iCAAiC;IACjC,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,wBAAwB;IAErD,MAAM,UAAU,GAAG,IAAI,oBAAO,CAAC,YAAY,CAAC;SACzC,GAAG,CAAC,QAAQ,CAAC;SACb,GAAG,CAAC,UAAU,CAAC,CAAC,sBAAsB;SACtC,QAAQ,EAAE,CAAC;IAEd,OAAO,IAAI,oBAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7D,CAAC;AAjBD,0CAiBC;AAED;;;;;;GAMG;AACH,SAAgB,yBAAyB,CACvC,SAAoB,EACpB,UAAkB,EAClB,kBAA0B;IAE1B,MAAM,gBAAgB,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1D,MAAM,WAAW,GAAG,IAAI,oBAAO,CAAC,kBAAkB,CAAC,CAAC;IAEpD,0DAA0D;IAC1D,8DAA8D;IAC9D,6DAA6D;IAE7D,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACvB,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,gBAAgB,GAAG,gBAAgB;SACtC,GAAG,CAAC,WAAW,CAAC;SAChB,GAAG,CAAC,IAAI,oBAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IAExC,OAAO,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AACrC,CAAC;AArBD,8DAqBC","sourcesContent":["import Decimal from 'decimal.js';\nimport { PoolState, clonePoolState } from './pool_state';\nimport { mint, burn, MintResult, BurnResult } from './mint_burn';\nimport { applySwap, SwapResult } from './swap_engine';\nimport { calculateUsdValue, formatTokenAmount } from '../math/price_utils';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * JIT strategy plan parameters\n */\nexport interface JitPlan {\n  /** Lower tick of the position */\n  lowerTick: number;\n  /** Upper tick of the position */\n  upperTick: number;\n  /** Amount of token0 to provide */\n  amount0: string;\n  /** Amount of token1 to provide */\n  amount1: string;\n  /** Expected liquidity to be added */\n  liquidity: string;\n  /** Expected fee capture (USD) */\n  expectedFeeUsd: string;\n  /** Expected net profit (USD) after costs */\n  expectedNetUsd: string;\n  /** Strategy score */\n  score: number;\n}\n\n/**\n * Swap event to simulate\n */\nexport interface SwapEvent {\n  /** Amount being swapped in */\n  amountIn: string;\n  /** Token being swapped in ('token0' or 'token1') */\n  tokenIn: 'token0' | 'token1';\n  /** Estimated USD size of the swap */\n  swapSizeUsd: string;\n  /** Current price of token1 per token0 */\n  priceToken1PerToken0: string;\n}\n\n/**\n * Price feed for USD conversion\n */\nexport interface PriceFeed {\n  /** Price of token0 in USD */\n  token0PriceUsd: string;\n  /** Price of token1 in USD */\n  token1PriceUsd: string;\n  /** Timestamp of price data */\n  timestamp: number;\n}\n\n/**\n * Result of a JIT simulation\n */\nexport interface SimulationResult {\n  /** Whether the simulation was successful */\n  success: boolean;\n  /** Error message if simulation failed */\n  error?: string;\n  /** Fees captured in token0 */\n  feesCapturedToken0: string;\n  /** Fees captured in token1 */\n  feesCapturedToken1: string;\n  /** Net profit in USD */\n  netProfitUsd: string;\n  /** Gas cost in USD */\n  gasCostUsd: string;\n  /** Flashloan cost in USD (if applicable) */\n  flashloanCostUsd: string;\n  /** Price impact of the user swap (%) */\n  priceImpact: string;\n  /** Share of fees captured (%) */\n  captureShare: string;\n  /** Debug information */\n  debug: {\n    /** Initial pool liquidity */\n    initialLiquidity: string;\n    /** Final pool liquidity */\n    finalLiquidity: string;\n    /** JIT liquidity added */\n    jitLiquidity: string;\n    /** User swap details */\n    userSwap: SwapResult;\n    /** Mint operation result */\n    mintResult: MintResult;\n    /** Burn operation result */\n    burnResult: BurnResult;\n  };\n}\n\n/**\n * Strategy configuration\n */\nexport interface StrategyConfig {\n  /** Minimum net profit in USD to consider viable */\n  minNetProfitUsd: number;\n  /** Gas estimate in USD */\n  gasEstimateUsd: number;\n  /** Flashloan fee in basis points */\n  flashloanFeeBps: number;\n  /** Maximum slippage tolerance in basis points */\n  maxSlippageBps: number;\n}\n\n/**\n * Simulates a JIT liquidity strategy attempt\n * @param poolFixture Initial pool state\n * @param plan JIT strategy plan\n * @param swapEvent User swap to front-run\n * @param priceFeed Current token prices\n * @param config Strategy configuration\n * @returns Simulation result with profit/loss analysis\n */\nexport function simulateJitAttempt(\n  poolFixture: PoolState,\n  plan: JitPlan,\n  swapEvent: SwapEvent,\n  priceFeed: PriceFeed,\n  config: StrategyConfig\n): SimulationResult {\n  try {\n    // Clone pool state for simulation\n    const poolState = clonePoolState(poolFixture);\n    const initialLiquidity = poolState.liquidity;\n\n    // Step 1: Mint JIT position\n    const mintResult = mint(\n      poolState,\n      'jit-bot', // Simulated bot address\n      plan.lowerTick,\n      plan.upperTick,\n      plan.amount0,\n      plan.amount1\n    );\n\n    if (new Decimal(mintResult.liquidity).lte(0)) {\n      return {\n        success: false,\n        error: 'Failed to mint liquidity',\n        feesCapturedToken0: '0',\n        feesCapturedToken1: '0',\n        netProfitUsd: '0',\n        gasCostUsd: config.gasEstimateUsd.toString(),\n        flashloanCostUsd: '0',\n        priceImpact: '0',\n        captureShare: '0',\n        debug: {\n          initialLiquidity,\n          finalLiquidity: poolState.liquidity,\n          jitLiquidity: '0',\n          userSwap: {} as SwapResult,\n          mintResult,\n          burnResult: {} as BurnResult,\n        },\n      };\n    }\n\n    // Step 2: Apply user swap\n    const userSwap = applySwap(\n      poolState,\n      swapEvent.amountIn,\n      swapEvent.tokenIn\n    );\n\n    // Step 3: Burn JIT position and collect fees\n    const burnResult = burn(\n      poolState,\n      'jit-bot',\n      plan.lowerTick,\n      plan.upperTick,\n      mintResult.liquidity\n    );\n\n    // Calculate fees captured\n    const feesCapturedToken0 = burnResult.feesOwed0;\n    const feesCapturedToken1 = burnResult.feesOwed1;\n\n    // For simplification, estimate fees based on swap fees and liquidity share\n    const totalFees = userSwap.feeAmount;\n    const poolLiquidityBeforeSwap = new Decimal(mintResult.poolState.liquidity);\n    const jitLiquidityShare = new Decimal(mintResult.liquidity).div(poolLiquidityBeforeSwap);\n    \n    // Estimate fees captured as share of total fees\n    const estimatedFeesCaptured = new Decimal(totalFees).mul(jitLiquidityShare);\n    const estimatedFees0 = swapEvent.tokenIn === 'token0' ? estimatedFeesCaptured.toString() : '0';\n    const estimatedFees1 = swapEvent.tokenIn === 'token1' ? estimatedFeesCaptured.toString() : '0';\n\n    // Calculate USD values\n    const feesUsd = calculateUsdValue(\n      estimatedFees0,\n      estimatedFees1,\n      poolState.config.decimals0,\n      poolState.config.decimals1,\n      priceFeed.token0PriceUsd,\n      priceFeed.token1PriceUsd\n    );\n\n    // Calculate costs\n    const gasCostUsd = config.gasEstimateUsd;\n    \n    // Calculate flashloan cost (if needed)\n    const providedValue = calculateUsdValue(\n      mintResult.amount0,\n      mintResult.amount1,\n      poolState.config.decimals0,\n      poolState.config.decimals1,\n      priceFeed.token0PriceUsd,\n      priceFeed.token1PriceUsd\n    );\n    \n    const flashloanCostUsd = new Decimal(providedValue)\n      .mul(config.flashloanFeeBps)\n      .div(10000)\n      .toString();\n\n    // Calculate net profit\n    const netProfitUsd = new Decimal(feesUsd)\n      .sub(gasCostUsd)\n      .sub(flashloanCostUsd)\n      .toString();\n\n    // Calculate capture share\n    const totalFeesUsd = new Decimal(totalFees)\n      .mul(priceFeed.token0PriceUsd) // Simplified - assumes fees are in token0\n      .div(new Decimal(10).pow(poolState.config.decimals0))\n      .toString();\n    \n    const captureShare = new Decimal(totalFeesUsd).gt(0)\n      ? new Decimal(feesUsd).div(totalFeesUsd).mul(100).toString()\n      : '0';\n\n    // Calculate price impact\n    const priceBefore = new Decimal(poolFixture.slot0.sqrtPriceX96).pow(2);\n    const priceAfter = new Decimal(userSwap.sqrtPriceX96).pow(2);\n    const priceImpact = priceAfter.sub(priceBefore).div(priceBefore).mul(100).toString();\n\n    return {\n      success: true,\n      feesCapturedToken0: estimatedFees0,\n      feesCapturedToken1: estimatedFees1,\n      netProfitUsd,\n      gasCostUsd: gasCostUsd.toString(),\n      flashloanCostUsd,\n      priceImpact,\n      captureShare,\n      debug: {\n        initialLiquidity,\n        finalLiquidity: poolState.liquidity,\n        jitLiquidity: mintResult.liquidity,\n        userSwap,\n        mintResult,\n        burnResult,\n      },\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error',\n      feesCapturedToken0: '0',\n      feesCapturedToken1: '0',\n      netProfitUsd: '0',\n      gasCostUsd: config.gasEstimateUsd.toString(),\n      flashloanCostUsd: '0',\n      priceImpact: '0',\n      captureShare: '0',\n      debug: {\n        initialLiquidity: poolFixture.liquidity,\n        finalLiquidity: poolFixture.liquidity,\n        jitLiquidity: '0',\n        userSwap: {} as SwapResult,\n        mintResult: {} as MintResult,\n        burnResult: {} as BurnResult,\n      },\n    };\n  }\n}\n\n/**\n * Validates a JIT plan for feasibility\n * @param plan JIT plan to validate\n * @param poolState Current pool state\n * @param config Strategy configuration\n * @returns True if plan is feasible\n */\nexport function validateJitPlan(\n  plan: JitPlan,\n  poolState: PoolState,\n  config: StrategyConfig\n): boolean {\n  try {\n    // Check tick range validity\n    if (plan.lowerTick >= plan.upperTick) return false;\n    \n    // Check tick alignment\n    if (plan.lowerTick % poolState.config.tickSpacing !== 0) return false;\n    if (plan.upperTick % poolState.config.tickSpacing !== 0) return false;\n    \n    // Check amounts are positive\n    if (new Decimal(plan.amount0).lt(0) || new Decimal(plan.amount1).lt(0)) return false;\n    \n    // Check at least one amount is positive\n    if (new Decimal(plan.amount0).eq(0) && new Decimal(plan.amount1).eq(0)) return false;\n    \n    // Check expected profit meets minimum\n    if (new Decimal(plan.expectedNetUsd).lt(config.minNetProfitUsd)) return false;\n    \n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Estimates the gas cost for JIT operations\n * @param plan JIT plan\n * @param gasPrice Gas price in gwei\n * @param ethPriceUsd ETH price in USD\n * @returns Estimated gas cost in USD\n */\nexport function estimateGasCost(\n  plan: JitPlan,\n  gasPrice: number,\n  ethPriceUsd: string\n): string {\n  // Estimated gas usage for JIT strategy:\n  // - Mint: ~150k gas\n  // - Burn: ~100k gas  \n  // - Flashloan overhead: ~50k gas\n  const estimatedGas = 300000; // Conservative estimate\n  \n  const gasCostEth = new Decimal(estimatedGas)\n    .mul(gasPrice)\n    .div(1000000000) // Convert gwei to ETH\n    .toString();\n  \n  return new Decimal(gasCostEth).mul(ethPriceUsd).toString();\n}\n\n/**\n * Calculates the optimal liquidity amount for maximum fee capture\n * @param poolState Current pool state\n * @param swapAmount Size of incoming swap\n * @param targetCaptureRatio Desired share of fees to capture (0-1)\n * @returns Optimal liquidity to add\n */\nexport function calculateOptimalLiquidity(\n  poolState: PoolState,\n  swapAmount: string,\n  targetCaptureRatio: number\n): string {\n  const currentLiquidity = new Decimal(poolState.liquidity);\n  const targetRatio = new Decimal(targetCaptureRatio);\n  \n  // To capture X% of fees, need to add liquidity such that:\n  // added_liquidity / (current_liquidity + added_liquidity) = X\n  // Solving: added_liquidity = X * current_liquidity / (1 - X)\n  \n  if (targetRatio.gte(1)) {\n    throw new Error('Target capture ratio must be less than 1');\n  }\n  \n  const optimalLiquidity = currentLiquidity\n    .mul(targetRatio)\n    .div(new Decimal(1).sub(targetRatio));\n  \n  return optimalLiquidity.toString();\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"30534203217439e695b2e46e6df581cd7b60be8d"},"/home/runner/work/jit/jit/src/sim/mint_burn.ts":{"path":"/home/runner/work/jit/jit/src/sim/mint_burn.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":118}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":44}},"6":{"start":{"line":9,"column":25},"end":{"line":9,"column":58}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":48}},"8":{"start":{"line":12,"column":0},"end":{"line":15,"column":3}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":48}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"11":{"start":{"line":27,"column":21},"end":{"line":27,"column":63}},"12":{"start":{"line":28,"column":33},"end":{"line":28,"column":82}},"13":{"start":{"line":29,"column":31},"end":{"line":29,"column":71}},"14":{"start":{"line":30,"column":32},"end":{"line":30,"column":76}},"15":{"start":{"line":31,"column":20},"end":{"line":31,"column":82}},"16":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":36}},"18":{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":72}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":72}},"21":{"start":{"line":41,"column":4},"end":{"line":41,"column":61}},"22":{"start":{"line":43,"column":25},"end":{"line":43,"column":72}},"23":{"start":{"line":44,"column":4},"end":{"line":46,"column":58}},"24":{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":37}},"26":{"start":{"line":50,"column":8},"end":{"line":50,"column":45}},"27":{"start":{"line":51,"column":8},"end":{"line":51,"column":45}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":36}},"29":{"start":{"line":54,"column":4},"end":{"line":54,"column":57}},"30":{"start":{"line":60,"column":22},"end":{"line":60,"column":69}},"31":{"start":{"line":61,"column":22},"end":{"line":61,"column":69}},"32":{"start":{"line":62,"column":24},"end":{"line":62,"column":40}},"33":{"start":{"line":63,"column":20},"end":{"line":63,"column":72}},"34":{"start":{"line":64,"column":20},"end":{"line":64,"column":72}},"35":{"start":{"line":65,"column":26},"end":{"line":65,"column":53}},"36":{"start":{"line":66,"column":26},"end":{"line":66,"column":53}},"37":{"start":{"line":67,"column":4},"end":{"line":74,"column":5}},"38":{"start":{"line":68,"column":8},"end":{"line":68,"column":84}},"39":{"start":{"line":69,"column":8},"end":{"line":69,"column":84}},"40":{"start":{"line":72,"column":8},"end":{"line":72,"column":97}},"41":{"start":{"line":73,"column":8},"end":{"line":73,"column":97}},"42":{"start":{"line":75,"column":26},"end":{"line":75,"column":53}},"43":{"start":{"line":76,"column":26},"end":{"line":76,"column":53}},"44":{"start":{"line":77,"column":4},"end":{"line":84,"column":5}},"45":{"start":{"line":78,"column":8},"end":{"line":78,"column":84}},"46":{"start":{"line":79,"column":8},"end":{"line":79,"column":84}},"47":{"start":{"line":82,"column":8},"end":{"line":82,"column":97}},"48":{"start":{"line":83,"column":8},"end":{"line":83,"column":97}},"49":{"start":{"line":85,"column":4},"end":{"line":88,"column":6}},"50":{"start":{"line":102,"column":25},"end":{"line":102,"column":96}},"51":{"start":{"line":103,"column":25},"end":{"line":103,"column":96}},"52":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"53":{"start":{"line":105,"column":8},"end":{"line":105,"column":46}},"54":{"start":{"line":108,"column":27},"end":{"line":108,"column":178}},"55":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"56":{"start":{"line":110,"column":8},"end":{"line":110,"column":47}},"57":{"start":{"line":113,"column":33},"end":{"line":113,"column":172}},"58":{"start":{"line":115,"column":4},"end":{"line":115,"column":59}},"59":{"start":{"line":116,"column":4},"end":{"line":116,"column":58}},"60":{"start":{"line":118,"column":24},"end":{"line":118,"column":40}},"61":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"62":{"start":{"line":120,"column":8},"end":{"line":120,"column":94}},"63":{"start":{"line":123,"column":23},"end":{"line":123,"column":76}},"64":{"start":{"line":124,"column":28},"end":{"line":124,"column":81}},"65":{"start":{"line":126,"column":4},"end":{"line":126,"column":45}},"66":{"start":{"line":127,"column":4},"end":{"line":133,"column":6}},"67":{"start":{"line":135,"column":0},"end":{"line":135,"column":20}},"68":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"69":{"start":{"line":147,"column":8},"end":{"line":147,"column":52}},"70":{"start":{"line":149,"column":23},"end":{"line":149,"column":70}},"71":{"start":{"line":151,"column":33},"end":{"line":151,"column":173}},"72":{"start":{"line":153,"column":28},"end":{"line":153,"column":75}},"73":{"start":{"line":155,"column":22},"end":{"line":155,"column":25}},"74":{"start":{"line":156,"column":22},"end":{"line":156,"column":25}},"75":{"start":{"line":158,"column":4},"end":{"line":158,"column":63}},"76":{"start":{"line":159,"column":4},"end":{"line":159,"column":62}},"77":{"start":{"line":161,"column":24},"end":{"line":161,"column":40}},"78":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"79":{"start":{"line":163,"column":8},"end":{"line":163,"column":100}},"80":{"start":{"line":166,"column":4},"end":{"line":166,"column":45}},"81":{"start":{"line":167,"column":4},"end":{"line":175,"column":6}},"82":{"start":{"line":177,"column":0},"end":{"line":177,"column":20}},"83":{"start":{"line":189,"column":4},"end":{"line":192,"column":6}},"84":{"start":{"line":194,"column":0},"end":{"line":194,"column":34}},"85":{"start":{"line":203,"column":24},"end":{"line":203,"column":40}},"86":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"87":{"start":{"line":205,"column":8},"end":{"line":205,"column":31}},"88":{"start":{"line":209,"column":4},"end":{"line":209,"column":15}},"89":{"start":{"line":211,"column":0},"end":{"line":211,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"generatePositionId","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":27}},"loc":{"start":{"line":19,"column":57},"end":{"line":21,"column":1}},"line":19},"2":{"name":"updateTick","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":19}},"loc":{"start":{"line":26,"column":56},"end":{"line":55,"column":1}},"line":26},"3":{"name":"getFeeGrowthInside","decl":{"start":{"line":59,"column":9},"end":{"line":59,"column":27}},"loc":{"start":{"line":59,"column":57},"end":{"line":89,"column":1}},"line":59},"4":{"name":"mint","decl":{"start":{"line":100,"column":9},"end":{"line":100,"column":13}},"loc":{"start":{"line":100,"column":82},"end":{"line":134,"column":1}},"line":100},"5":{"name":"burn","decl":{"start":{"line":145,"column":9},"end":{"line":145,"column":13}},"loc":{"start":{"line":145,"column":67},"end":{"line":176,"column":1}},"line":145},"6":{"name":"collectFees","decl":{"start":{"line":186,"column":9},"end":{"line":186,"column":20}},"loc":{"start":{"line":186,"column":57},"end":{"line":193,"column":1}},"line":186},"7":{"name":"getLiquidityInRange","decl":{"start":{"line":202,"column":9},"end":{"line":202,"column":28}},"loc":{"start":{"line":202,"column":58},"end":{"line":210,"column":1}},"line":202}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":32},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":39,"column":9}},{"start":{},"end":{}}],"line":36},"5":{"loc":{"start":{"line":44,"column":28},"end":{"line":46,"column":57}},"type":"cond-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":57}},{"start":{"line":46,"column":10},"end":{"line":46,"column":57}}],"line":44},"6":{"loc":{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":47},"7":{"loc":{"start":{"line":47,"column":8},"end":{"line":47,"column":47}},"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":15}},{"start":{"line":47,"column":19},"end":{"line":47,"column":47}}],"line":47},"8":{"loc":{"start":{"line":67,"column":4},"end":{"line":74,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":74,"column":5}},{"start":{"line":71,"column":9},"end":{"line":74,"column":5}}],"line":67},"9":{"loc":{"start":{"line":77,"column":4},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":84,"column":5}},{"start":{"line":81,"column":9},"end":{"line":84,"column":5}}],"line":77},"10":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"11":{"loc":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},{"start":{},"end":{}}],"line":109},"12":{"loc":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},{"start":{},"end":{}}],"line":119},"13":{"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":65}},"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":35}},{"start":{"line":119,"column":39},"end":{"line":119,"column":65}}],"line":119},"14":{"loc":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},{"start":{},"end":{}}],"line":146},"15":{"loc":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},{"start":{},"end":{}}],"line":162},"16":{"loc":{"start":{"line":162,"column":8},"end":{"line":162,"column":59}},"type":"binary-expr","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":32}},{"start":{"line":162,"column":36},"end":{"line":162,"column":59}}],"line":162},"17":{"loc":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},{"start":{},"end":{}}],"line":204},"18":{"loc":{"start":{"line":204,"column":8},"end":{"line":204,"column":59}},"type":"binary-expr","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":32}},{"start":{"line":204,"column":36},"end":{"line":204,"column":59}}],"line":204}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/sim/mint_burn.ts","sources":["/home/runner/work/jit/jit/src/sim/mint_burn.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\nimport {\n  PoolState,\n  TickInfo,\n  Position,\n  getTickInfo,\n  setTickInfo,\n  updateTimestamp,\n} from './pool_state';\nimport {\n  liquidityForAmounts,\n  getAmountsFromLiquidity,\n  addLiquidity,\n  subtractLiquidity,\n} from '../math/liquidity_math';\nimport { nearestUsableTick } from '../math/tick_math';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Result of a mint operation\n */\nexport interface MintResult {\n  /** Position ID */\n  positionId: string;\n  /** Actual liquidity added */\n  liquidity: string;\n  /** Actual amount0 used */\n  amount0: string;\n  /** Actual amount1 used */\n  amount1: string;\n  /** Updated pool state */\n  poolState: PoolState;\n}\n\n/**\n * Result of a burn operation\n */\nexport interface BurnResult {\n  /** Position ID that was burned */\n  positionId: string;\n  /** Liquidity removed */\n  liquidity: string;\n  /** Amount0 returned */\n  amount0: string;\n  /** Amount1 returned */\n  amount1: string;\n  /** Fees collected in token0 */\n  feesOwed0: string;\n  /** Fees collected in token1 */\n  feesOwed1: string;\n  /** Updated pool state */\n  poolState: PoolState;\n}\n\n/**\n * Generates a position ID from owner and tick range\n */\nexport function generatePositionId(\n  owner: string,\n  tickLower: number,\n  tickUpper: number\n): string {\n  return `${owner}_${tickLower}_${tickUpper}`;\n}\n\n/**\n * Updates tick state when crossing during liquidity operations\n */\nfunction updateTick(\n  state: PoolState,\n  tick: number,\n  liquidityDelta: string,\n  upper: boolean\n): void {\n  const tickInfo = getTickInfo(state, tick);\n  \n  const liquidityGrossBefore = new Decimal(tickInfo.liquidityGross);\n  const liquidityDelta_dec = new Decimal(liquidityDelta);\n  \n  const liquidityGrossAfter = liquidityGrossBefore.add(liquidityDelta_dec);\n  \n  const flipped = liquidityGrossAfter.isZero() !== liquidityGrossBefore.isZero();\n  \n  if (liquidityGrossBefore.isZero()) {\n    // Initialize tick if it was previously uninitialized\n    tickInfo.initialized = true;\n    \n    // If we're above the current tick, we need to record fee growth\n    if (tick <= state.slot0.tick) {\n      tickInfo.feeGrowthOutside0X128 = state.feeGrowthGlobal0X128;\n      tickInfo.feeGrowthOutside1X128 = state.feeGrowthGlobal1X128;\n    }\n  }\n  \n  tickInfo.liquidityGross = liquidityGrossAfter.toString();\n  \n  // Update net liquidity\n  const liquidityNet = new Decimal(tickInfo.liquidityNet);\n  tickInfo.liquidityNet = upper\n    ? liquidityNet.sub(liquidityDelta_dec).toString()\n    : liquidityNet.add(liquidityDelta_dec).toString();\n  \n  if (flipped && liquidityGrossAfter.isZero()) {\n    // Clear tick if no liquidity remains\n    tickInfo.initialized = false;\n    tickInfo.feeGrowthOutside0X128 = '0';\n    tickInfo.feeGrowthOutside1X128 = '0';\n    tickInfo.secondsOutside = 0;\n  }\n  \n  setTickInfo(state, tick, tickInfo);\n}\n\n/**\n * Calculates fee growth inside a position's range\n */\nfunction getFeeGrowthInside(\n  state: PoolState,\n  tickLower: number,\n  tickUpper: number\n): { feeGrowthInside0X128: string; feeGrowthInside1X128: string } {\n  const lowerTick = getTickInfo(state, tickLower);\n  const upperTick = getTickInfo(state, tickUpper);\n  \n  const currentTick = state.slot0.tick;\n  const global0 = new Decimal(state.feeGrowthGlobal0X128);\n  const global1 = new Decimal(state.feeGrowthGlobal1X128);\n  \n  let feeGrowthBelow0 = new Decimal(0);\n  let feeGrowthBelow1 = new Decimal(0);\n  \n  if (currentTick >= tickLower) {\n    feeGrowthBelow0 = new Decimal(lowerTick.feeGrowthOutside0X128);\n    feeGrowthBelow1 = new Decimal(lowerTick.feeGrowthOutside1X128);\n  } else {\n    feeGrowthBelow0 = global0.sub(new Decimal(lowerTick.feeGrowthOutside0X128));\n    feeGrowthBelow1 = global1.sub(new Decimal(lowerTick.feeGrowthOutside1X128));\n  }\n  \n  let feeGrowthAbove0 = new Decimal(0);\n  let feeGrowthAbove1 = new Decimal(0);\n  \n  if (currentTick < tickUpper) {\n    feeGrowthAbove0 = new Decimal(upperTick.feeGrowthOutside0X128);\n    feeGrowthAbove1 = new Decimal(upperTick.feeGrowthOutside1X128);\n  } else {\n    feeGrowthAbove0 = global0.sub(new Decimal(upperTick.feeGrowthOutside0X128));\n    feeGrowthAbove1 = global1.sub(new Decimal(upperTick.feeGrowthOutside1X128));\n  }\n  \n  return {\n    feeGrowthInside0X128: global0.sub(feeGrowthBelow0).sub(feeGrowthAbove0).toString(),\n    feeGrowthInside1X128: global1.sub(feeGrowthBelow1).sub(feeGrowthAbove1).toString(),\n  };\n}\n\n/**\n * Mints liquidity to a position\n * @param state Pool state (will be modified)\n * @param owner Position owner address\n * @param tickLower Lower tick (must be aligned to tickSpacing)\n * @param tickUpper Upper tick (must be aligned to tickSpacing)\n * @param amount0Desired Desired amount of token0 to add\n * @param amount1Desired Desired amount of token1 to add\n * @returns MintResult with actual amounts used and liquidity added\n */\nexport function mint(\n  state: PoolState,\n  owner: string,\n  tickLower: number,\n  tickUpper: number,\n  amount0Desired: string,\n  amount1Desired: string\n): MintResult {\n  // Validate and align ticks\n  const alignedLower = nearestUsableTick(tickLower, state.config.tickSpacing);\n  const alignedUpper = nearestUsableTick(tickUpper, state.config.tickSpacing);\n  \n  if (alignedLower >= alignedUpper) {\n    throw new Error('Invalid tick range');\n  }\n  \n  // Calculate liquidity for the given amounts\n  const liquidityToAdd = liquidityForAmounts(\n    amount0Desired,\n    amount1Desired,\n    state.slot0.sqrtPriceX96,\n    state.slot0.sqrtPriceX96,\n    state.slot0.sqrtPriceX96\n  );\n  \n  if (new Decimal(liquidityToAdd).isZero()) {\n    throw new Error('No liquidity to add');\n  }\n  \n  // Calculate actual amounts that will be used\n  const { amount0, amount1 } = getAmountsFromLiquidity(\n    liquidityToAdd,\n    state.slot0.sqrtPriceX96,\n    state.slot0.sqrtPriceX96,\n    state.slot0.sqrtPriceX96\n  );\n  \n  // Update tick states\n  updateTick(state, alignedLower, liquidityToAdd, false);\n  updateTick(state, alignedUpper, liquidityToAdd, true);\n  \n  // If current tick is in range, update global liquidity\n  const currentTick = state.slot0.tick;\n  if (currentTick >= alignedLower && currentTick < alignedUpper) {\n    state.liquidity = addLiquidity(state.liquidity, liquidityToAdd);\n  }\n  \n  // Create position\n  const positionId = generatePositionId(owner, alignedLower, alignedUpper);\n  const feeGrowthInside = getFeeGrowthInside(state, alignedLower, alignedUpper);\n  \n  // Update timestamp\n  updateTimestamp(state);\n  \n  return {\n    positionId,\n    liquidity: liquidityToAdd,\n    amount0,\n    amount1,\n    poolState: state,\n  };\n}\n\n/**\n * Burns liquidity from a position\n * @param state Pool state (will be modified)\n * @param owner Position owner address\n * @param tickLower Lower tick of position\n * @param tickUpper Upper tick of position\n * @param liquidityToBurn Amount of liquidity to burn\n * @returns BurnResult with amounts returned and fees collected\n */\nexport function burn(\n  state: PoolState,\n  owner: string,\n  tickLower: number,\n  tickUpper: number,\n  liquidityToBurn: string\n): BurnResult {\n  if (new Decimal(liquidityToBurn).lte(0)) {\n    throw new Error('Invalid liquidity amount');\n  }\n  \n  const positionId = generatePositionId(owner, tickLower, tickUpper);\n  \n  // Calculate amounts to return\n  const { amount0, amount1 } = getAmountsFromLiquidity(\n    liquidityToBurn,\n    state.slot0.sqrtPriceX96,\n    state.slot0.sqrtPriceX96,\n    state.slot0.sqrtPriceX96\n  );\n  \n  // Calculate fees owed (simplified - in real implementation would track position state)\n  const feeGrowthInside = getFeeGrowthInside(state, tickLower, tickUpper);\n  \n  // For simplicity, assume no fees accumulated (would need position tracking for accurate fees)\n  const feesOwed0 = '0';\n  const feesOwed1 = '0';\n  \n  // Update tick states\n  updateTick(state, tickLower, `-${liquidityToBurn}`, false);\n  updateTick(state, tickUpper, `-${liquidityToBurn}`, true);\n  \n  // If current tick is in range, update global liquidity\n  const currentTick = state.slot0.tick;\n  if (currentTick >= tickLower && currentTick < tickUpper) {\n    state.liquidity = subtractLiquidity(state.liquidity, liquidityToBurn);\n  }\n  \n  // Update timestamp\n  updateTimestamp(state);\n  \n  return {\n    positionId,\n    liquidity: liquidityToBurn,\n    amount0,\n    amount1,\n    feesOwed0,\n    feesOwed1,\n    poolState: state,\n  };\n}\n\n/**\n * Collects fees from a position\n * @param state Pool state\n * @param owner Position owner\n * @param tickLower Lower tick of position\n * @param tickUpper Upper tick of position\n * @returns Fees available for collection\n */\nexport function collectFees(\n  state: PoolState,\n  owner: string,\n  tickLower: number,\n  tickUpper: number\n): { amount0: string; amount1: string } {\n  // In a full implementation, this would calculate fees based on position state\n  // and fee growth inside the range. For now, return zero fees.\n  return {\n    amount0: '0',\n    amount1: '0',\n  };\n}\n\n/**\n * Gets the current liquidity in a specific tick range\n * @param state Pool state\n * @param tickLower Lower tick\n * @param tickUpper Upper tick\n * @returns Current liquidity in the range\n */\nexport function getLiquidityInRange(\n  state: PoolState,\n  tickLower: number,\n  tickUpper: number\n): string {\n  const currentTick = state.slot0.tick;\n  \n  if (currentTick >= tickLower && currentTick < tickUpper) {\n    return state.liquidity;\n  }\n  \n  // If current tick is outside range, need to calculate available liquidity\n  // This is a simplified version - real implementation would sum tick liquidity\n  return '0';\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b24e6c5ea7d48d132776a4ca8841efc5481e6d04"},"/home/runner/work/jit/jit/src/math/liquidity_math.ts":{"path":"/home/runner/work/jit/jit/src/math/liquidity_math.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":250}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":0},"end":{"line":14,"column":3}},"6":{"start":{"line":16,"column":20},"end":{"line":16,"column":55}},"7":{"start":{"line":26,"column":23},"end":{"line":26,"column":56}},"8":{"start":{"line":27,"column":21},"end":{"line":27,"column":52}},"9":{"start":{"line":28,"column":25},"end":{"line":28,"column":60}},"10":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"11":{"start":{"line":30,"column":8},"end":{"line":30,"column":71}},"12":{"start":{"line":34,"column":22},"end":{"line":34,"column":64}},"13":{"start":{"line":35,"column":24},"end":{"line":35,"column":50}},"14":{"start":{"line":37,"column":22},"end":{"line":37,"column":65}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"16":{"start":{"line":40,"column":0},"end":{"line":40,"column":50}},"17":{"start":{"line":50,"column":23},"end":{"line":50,"column":56}},"18":{"start":{"line":51,"column":21},"end":{"line":51,"column":52}},"19":{"start":{"line":52,"column":25},"end":{"line":52,"column":60}},"20":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"21":{"start":{"line":54,"column":8},"end":{"line":54,"column":74}},"22":{"start":{"line":58,"column":24},"end":{"line":58,"column":50}},"23":{"start":{"line":59,"column":22},"end":{"line":59,"column":66}},"24":{"start":{"line":60,"column":4},"end":{"line":60,"column":32}},"25":{"start":{"line":62,"column":0},"end":{"line":62,"column":50}},"26":{"start":{"line":73,"column":21},"end":{"line":73,"column":52}},"27":{"start":{"line":74,"column":25},"end":{"line":74,"column":60}},"28":{"start":{"line":75,"column":25},"end":{"line":75,"column":60}},"29":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"30":{"start":{"line":77,"column":8},"end":{"line":77,"column":69}},"31":{"start":{"line":80,"column":4},"end":{"line":94,"column":5}},"32":{"start":{"line":82,"column":8},"end":{"line":82,"column":125}},"33":{"start":{"line":84,"column":9},"end":{"line":94,"column":5}},"34":{"start":{"line":86,"column":27},"end":{"line":86,"column":127}},"35":{"start":{"line":87,"column":27},"end":{"line":87,"column":127}},"36":{"start":{"line":89,"column":8},"end":{"line":89,"column":69}},"37":{"start":{"line":93,"column":8},"end":{"line":93,"column":125}},"38":{"start":{"line":95,"column":4},"end":{"line":95,"column":32}},"39":{"start":{"line":97,"column":0},"end":{"line":97,"column":50}},"40":{"start":{"line":107,"column":25},"end":{"line":107,"column":60}},"41":{"start":{"line":108,"column":21},"end":{"line":108,"column":52}},"42":{"start":{"line":109,"column":25},"end":{"line":109,"column":60}},"43":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"44":{"start":{"line":111,"column":8},"end":{"line":111,"column":19}},"45":{"start":{"line":115,"column":22},"end":{"line":115,"column":66}},"46":{"start":{"line":116,"column":24},"end":{"line":116,"column":50}},"47":{"start":{"line":117,"column":4},"end":{"line":117,"column":66}},"48":{"start":{"line":119,"column":0},"end":{"line":119,"column":58}},"49":{"start":{"line":129,"column":25},"end":{"line":129,"column":60}},"50":{"start":{"line":130,"column":21},"end":{"line":130,"column":52}},"51":{"start":{"line":131,"column":25},"end":{"line":131,"column":60}},"52":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"53":{"start":{"line":133,"column":8},"end":{"line":133,"column":19}},"54":{"start":{"line":137,"column":4},"end":{"line":137,"column":84}},"55":{"start":{"line":139,"column":0},"end":{"line":139,"column":58}},"56":{"start":{"line":149,"column":4},"end":{"line":152,"column":6}},"57":{"start":{"line":154,"column":0},"end":{"line":154,"column":58}},"58":{"start":{"line":162,"column":4},"end":{"line":162,"column":101}},"59":{"start":{"line":164,"column":0},"end":{"line":164,"column":36}},"60":{"start":{"line":172,"column":19},"end":{"line":172,"column":97}},"61":{"start":{"line":173,"column":4},"end":{"line":173,"column":57}},"62":{"start":{"line":175,"column":0},"end":{"line":175,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"liquidityFromToken0","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":28}},"loc":{"start":{"line":25,"column":56},"end":{"line":39,"column":1}},"line":25},"2":{"name":"liquidityFromToken1","decl":{"start":{"line":49,"column":9},"end":{"line":49,"column":28}},"loc":{"start":{"line":49,"column":56},"end":{"line":61,"column":1}},"line":49},"3":{"name":"liquidityForAmounts","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":28}},"loc":{"start":{"line":72,"column":76},"end":{"line":96,"column":1}},"line":72},"4":{"name":"getAmount0FromLiquidity","decl":{"start":{"line":106,"column":9},"end":{"line":106,"column":32}},"loc":{"start":{"line":106,"column":62},"end":{"line":118,"column":1}},"line":106},"5":{"name":"getAmount1FromLiquidity","decl":{"start":{"line":128,"column":9},"end":{"line":128,"column":32}},"loc":{"start":{"line":128,"column":62},"end":{"line":138,"column":1}},"line":128},"6":{"name":"getAmountsFromLiquidity","decl":{"start":{"line":148,"column":9},"end":{"line":148,"column":32}},"loc":{"start":{"line":148,"column":73},"end":{"line":153,"column":1}},"line":148},"7":{"name":"addLiquidity","decl":{"start":{"line":161,"column":9},"end":{"line":161,"column":21}},"loc":{"start":{"line":161,"column":46},"end":{"line":163,"column":1}},"line":161},"8":{"name":"subtractLiquidity","decl":{"start":{"line":171,"column":9},"end":{"line":171,"column":26}},"loc":{"start":{"line":171,"column":51},"end":{"line":174,"column":1}},"line":171}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{},"end":{}}],"line":29},"4":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{},"end":{}}],"line":53},"5":{"loc":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},{"start":{},"end":{}}],"line":76},"6":{"loc":{"start":{"line":80,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":94,"column":5}},{"start":{"line":84,"column":9},"end":{"line":94,"column":5}}],"line":80},"7":{"loc":{"start":{"line":84,"column":9},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":9},"end":{"line":94,"column":5}},{"start":{"line":91,"column":9},"end":{"line":94,"column":5}}],"line":84},"8":{"loc":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":110},"9":{"loc":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},{"start":{},"end":{}}],"line":132},"10":{"loc":{"start":{"line":173,"column":11},"end":{"line":173,"column":56}},"type":"cond-expr","locations":[{"start":{"line":173,"column":33},"end":{"line":173,"column":36}},{"start":{"line":173,"column":39},"end":{"line":173,"column":56}}],"line":173}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":9,"8":9,"9":9,"10":9,"11":1,"12":8,"13":8,"14":8,"15":8,"16":1,"17":9,"18":9,"19":9,"20":9,"21":1,"22":8,"23":8,"24":8,"25":1,"26":5,"27":5,"28":5,"29":5,"30":1,"31":4,"32":1,"33":3,"34":2,"35":2,"36":2,"37":1,"38":4,"39":1,"40":7,"41":7,"42":7,"43":7,"44":1,"45":6,"46":6,"47":6,"48":1,"49":7,"50":7,"51":7,"52":7,"53":1,"54":6,"55":1,"56":2,"57":1,"58":3,"59":1,"60":4,"61":4,"62":1},"f":{"0":1,"1":9,"2":9,"3":5,"4":7,"5":7,"6":2,"7":3,"8":4},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,8],"4":[1,8],"5":[1,4],"6":[1,3],"7":[2,1],"8":[1,6],"9":[1,6],"10":[2,2]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/math/liquidity_math.ts","sources":["/home/runner/work/jit/jit/src/math/liquidity_math.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAiC;AAEjC,0CAA0C;AAC1C,oBAAO,CAAC,MAAM,CAAC;IACb,SAAS,EAAE,EAAE;IACb,QAAQ,EAAE,oBAAO,CAAC,UAAU;IAC5B,QAAQ,EAAE,CAAC,EAAE;IACb,QAAQ,EAAE,EAAE;CACb,CAAC,CAAC;AAEH,2BAA2B;AAC3B,MAAM,WAAW,GAAG,IAAI,oBAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAE3C;;;;;;;GAOG;AACH,SAAgB,mBAAmB,CACjC,OAAe,EACf,KAAa,EACb,SAAiB;IAEjB,MAAM,UAAU,GAAG,IAAI,oBAAO,CAAC,OAAO,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,IAAI,oBAAO,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAE5C,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;IACjE,CAAC;IAED,8EAA8E;IAC9E,yEAAyE;IACzE,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7D,MAAM,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAE/C,0FAA0F;IAC1F,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAE9D,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;AAtBD,kDAsBC;AAED;;;;;;;GAOG;AACH,SAAgB,mBAAmB,CACjC,OAAe,EACf,KAAa,EACb,SAAiB;IAEjB,MAAM,UAAU,GAAG,IAAI,oBAAO,CAAC,OAAO,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,IAAI,oBAAO,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAE5C,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;QAC/B,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IACpE,CAAC;IAED,8CAA8C;IAC9C,sEAAsE;IACtE,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;AAnBD,kDAmBC;AAED;;;;;;;;GAQG;AACH,SAAgB,mBAAmB,CACjC,OAAe,EACf,OAAe,EACf,SAAiB,EACjB,KAAa,EACb,SAAiB;IAEjB,MAAM,QAAQ,GAAG,IAAI,oBAAO,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAC5C,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAE5C,IAAI,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;QACnC,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAC/D,CAAC;IAED,IAAI,SAAkB,CAAC;IAEvB,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;QAC/B,0DAA0D;QAC1D,SAAS,GAAG,IAAI,oBAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1G,CAAC;SAAM,IAAI,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC;QACrC,uDAAuD;QACvD,MAAM,UAAU,GAAG,IAAI,oBAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC3G,MAAM,UAAU,GAAG,IAAI,oBAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAE3G,+DAA+D;QAC/D,SAAS,GAAG,oBAAO,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAClD,CAAC;SAAM,CAAC;QACN,0DAA0D;QAC1D,SAAS,GAAG,IAAI,oBAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1G,CAAC;IAED,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC;AAjCD,kDAiCC;AAED;;;;;;;GAOG;AACH,SAAgB,uBAAuB,CACrC,SAAiB,EACjB,KAAa,EACb,SAAiB;IAEjB,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAC5C,MAAM,QAAQ,GAAG,IAAI,oBAAO,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAE5C,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;QAC/B,OAAO,GAAG,CAAC;IACb,CAAC;IAED,8EAA8E;IAC9E,0CAA0C;IAC1C,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC/D,MAAM,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAE/C,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC;AAnBD,0DAmBC;AAED;;;;;;;GAOG;AACH,SAAgB,uBAAuB,CACrC,SAAiB,EACjB,KAAa,EACb,SAAiB;IAEjB,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAC5C,MAAM,QAAQ,GAAG,IAAI,oBAAO,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,IAAI,oBAAO,CAAC,SAAS,CAAC,CAAC;IAE5C,IAAI,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;QAC/B,OAAO,GAAG,CAAC;IACb,CAAC;IAED,8CAA8C;IAC9C,2BAA2B;IAC3B,OAAO,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC;AAhBD,0DAgBC;AAED;;;;;;;GAOG;AACH,SAAgB,uBAAuB,CACrC,SAAiB,EACjB,SAAiB,EACjB,KAAa,EACb,SAAiB;IAEjB,OAAO;QACL,OAAO,EAAE,uBAAuB,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;QAC7D,OAAO,EAAE,uBAAuB,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;KAC9D,CAAC;AACJ,CAAC;AAVD,0DAUC;AAED;;;;;GAKG;AACH,SAAgB,YAAY,CAAC,UAAkB,EAAE,UAAkB;IACjE,OAAO,IAAI,oBAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,oBAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AAFD,oCAEC;AAED;;;;;GAKG;AACH,SAAgB,iBAAiB,CAAC,UAAkB,EAAE,UAAkB;IACtE,MAAM,MAAM,GAAG,IAAI,oBAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,oBAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACpE,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC;AAHD,8CAGC","sourcesContent":["import Decimal from 'decimal.js';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n  toExpNeg: -50,\n  toExpPos: 50,\n});\n\n// Q96 constant for scaling\nconst Q96_DECIMAL = new Decimal(2).pow(96);\n\n/**\n * Computes liquidity from token0 amount for a given price range\n * Formula: L = amount0 * (sqrt(upper) * sqrt(current)) / (sqrt(upper) - sqrt(current))\n * @param amount0 The amount of token0 (string to avoid precision loss)\n * @param sqrtP The current sqrt price (Q64.96)\n * @param sqrtUpper The upper sqrt price (Q64.96)\n * @returns The liquidity as a string\n */\nexport function liquidityFromToken0(\n  amount0: string,\n  sqrtP: string,\n  sqrtUpper: string\n): string {\n  const amount0Dec = new Decimal(amount0);\n  const sqrtPDec = new Decimal(sqrtP);\n  const sqrtUpperDec = new Decimal(sqrtUpper);\n\n  if (sqrtPDec.gte(sqrtUpperDec)) {\n    throw new Error('Current price must be less than upper price');\n  }\n\n  // L = amount0 * (sqrt(upper) * sqrt(current)) / (sqrt(upper) - sqrt(current))\n  // Since sqrtP and sqrtUpper are in Q96 format, we need to adjust scaling\n  const numerator = amount0Dec.mul(sqrtUpperDec).mul(sqrtPDec);\n  const denominator = sqrtUpperDec.sub(sqrtPDec);\n\n  // The result needs to be scaled properly - multiply by Q96 to get correct liquidity scale\n  const liquidity = numerator.div(denominator).div(Q96_DECIMAL);\n\n  return liquidity.toFixed(0);\n}\n\n/**\n * Computes liquidity from token1 amount for a given price range\n * Formula: L = amount1 / (sqrt(current) - sqrt(lower))\n * @param amount1 The amount of token1 (string to avoid precision loss)\n * @param sqrtP The current sqrt price (Q64.96)\n * @param sqrtLower The lower sqrt price (Q64.96)\n * @returns The liquidity as a string\n */\nexport function liquidityFromToken1(\n  amount1: string,\n  sqrtP: string,\n  sqrtLower: string\n): string {\n  const amount1Dec = new Decimal(amount1);\n  const sqrtPDec = new Decimal(sqrtP);\n  const sqrtLowerDec = new Decimal(sqrtLower);\n\n  if (sqrtPDec.lte(sqrtLowerDec)) {\n    throw new Error('Current price must be greater than lower price');\n  }\n\n  // L = amount1 / (sqrt(current) - sqrt(lower))\n  // Since sqrtP values are in Q96, we need to scale the result properly\n  const denominator = sqrtPDec.sub(sqrtLowerDec);\n  const liquidity = amount1Dec.mul(Q96_DECIMAL).div(denominator);\n\n  return liquidity.toFixed(0);\n}\n\n/**\n * Computes the maximum liquidity that can be provided given token amounts and price range\n * @param amount0 The amount of token0 available\n * @param amount1 The amount of token1 available\n * @param sqrtLower The lower sqrt price\n * @param sqrtP The current sqrt price\n * @param sqrtUpper The upper sqrt price\n * @returns The maximum liquidity as a string\n */\nexport function liquidityForAmounts(\n  amount0: string,\n  amount1: string,\n  sqrtLower: string,\n  sqrtP: string,\n  sqrtUpper: string\n): string {\n  const sqrtPDec = new Decimal(sqrtP);\n  const sqrtLowerDec = new Decimal(sqrtLower);\n  const sqrtUpperDec = new Decimal(sqrtUpper);\n\n  if (sqrtLowerDec.gte(sqrtUpperDec)) {\n    throw new Error('Lower price must be less than upper price');\n  }\n\n  let liquidity: Decimal;\n\n  if (sqrtPDec.lte(sqrtLowerDec)) {\n    // Current price is below range - only token0 will be used\n    liquidity = new Decimal(liquidityFromToken0(amount0, sqrtLowerDec.toString(), sqrtUpperDec.toString()));\n  } else if (sqrtPDec.lt(sqrtUpperDec)) {\n    // Current price is in range - both tokens will be used\n    const liquidity0 = new Decimal(liquidityFromToken0(amount0, sqrtPDec.toString(), sqrtUpperDec.toString()));\n    const liquidity1 = new Decimal(liquidityFromToken1(amount1, sqrtPDec.toString(), sqrtLowerDec.toString()));\n    \n    // Take the minimum to ensure we don't exceed available amounts\n    liquidity = Decimal.min(liquidity0, liquidity1);\n  } else {\n    // Current price is above range - only token1 will be used\n    liquidity = new Decimal(liquidityFromToken1(amount1, sqrtUpperDec.toString(), sqrtLowerDec.toString()));\n  }\n\n  return liquidity.toFixed(0);\n}\n\n/**\n * Computes the token0 amount for a given liquidity and price range\n * Formula: amount0 = L * (sqrt(upper) - sqrt(current)) / (sqrt(upper) * sqrt(current))\n * @param liquidity The liquidity amount\n * @param sqrtP The current sqrt price\n * @param sqrtUpper The upper sqrt price\n * @returns The token0 amount as a string\n */\nexport function getAmount0FromLiquidity(\n  liquidity: string,\n  sqrtP: string,\n  sqrtUpper: string\n): string {\n  const liquidityDec = new Decimal(liquidity);\n  const sqrtPDec = new Decimal(sqrtP);\n  const sqrtUpperDec = new Decimal(sqrtUpper);\n\n  if (sqrtPDec.gte(sqrtUpperDec)) {\n    return '0';\n  }\n\n  // amount0 = L * (sqrt(upper) - sqrt(current)) / (sqrt(upper) * sqrt(current))\n  // Account for Q96 scaling in sqrtP values\n  const numerator = liquidityDec.mul(sqrtUpperDec.sub(sqrtPDec));\n  const denominator = sqrtUpperDec.mul(sqrtPDec);\n\n  return numerator.mul(Q96_DECIMAL).div(denominator).toFixed(0);\n}\n\n/**\n * Computes the token1 amount for a given liquidity and price range\n * Formula: amount1 = L * (sqrt(current) - sqrt(lower))\n * @param liquidity The liquidity amount\n * @param sqrtP The current sqrt price\n * @param sqrtLower The lower sqrt price\n * @returns The token1 amount as a string\n */\nexport function getAmount1FromLiquidity(\n  liquidity: string,\n  sqrtP: string,\n  sqrtLower: string\n): string {\n  const liquidityDec = new Decimal(liquidity);\n  const sqrtPDec = new Decimal(sqrtP);\n  const sqrtLowerDec = new Decimal(sqrtLower);\n\n  if (sqrtPDec.lte(sqrtLowerDec)) {\n    return '0';\n  }\n\n  // amount1 = L * (sqrt(current) - sqrt(lower))\n  // Account for Q96 scaling \n  return liquidityDec.mul(sqrtPDec.sub(sqrtLowerDec)).div(Q96_DECIMAL).toFixed(0);\n}\n\n/**\n * Computes both token amounts for a given liquidity and price range\n * @param liquidity The liquidity amount\n * @param sqrtLower The lower sqrt price\n * @param sqrtP The current sqrt price\n * @param sqrtUpper The upper sqrt price\n * @returns Object containing amount0 and amount1 as strings\n */\nexport function getAmountsFromLiquidity(\n  liquidity: string,\n  sqrtLower: string,\n  sqrtP: string,\n  sqrtUpper: string\n): { amount0: string; amount1: string } {\n  return {\n    amount0: getAmount0FromLiquidity(liquidity, sqrtP, sqrtUpper),\n    amount1: getAmount1FromLiquidity(liquidity, sqrtP, sqrtLower),\n  };\n}\n\n/**\n * Adds liquidity amounts (helper for accumulating liquidity across ticks)\n * @param liquidity1 First liquidity amount\n * @param liquidity2 Second liquidity amount\n * @returns Sum of liquidities as string\n */\nexport function addLiquidity(liquidity1: string, liquidity2: string): string {\n  return new Decimal(liquidity1).add(new Decimal(liquidity2)).toFixed(0);\n}\n\n/**\n * Subtracts liquidity amounts (helper for removing liquidity)\n * @param liquidity1 First liquidity amount\n * @param liquidity2 Amount to subtract\n * @returns Difference of liquidities as string\n */\nexport function subtractLiquidity(liquidity1: string, liquidity2: string): string {\n  const result = new Decimal(liquidity1).sub(new Decimal(liquidity2));\n  return result.isNegative() ? '0' : result.toFixed(0);\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6bf6bb25040920a3e1ddad39c27e1e3ba7ed3ab2"},"/home/runner/work/jit/jit/src/math/tick_math.ts":{"path":"/home/runner/work/jit/jit/src/math/tick_math.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":181}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":0},"end":{"line":14,"column":3}},"6":{"start":{"line":16,"column":17},"end":{"line":16,"column":24}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"8":{"start":{"line":18,"column":17},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"10":{"start":{"line":20,"column":23},"end":{"line":20,"column":34}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"12":{"start":{"line":22,"column":23},"end":{"line":22,"column":73}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":40}},"14":{"start":{"line":25,"column":12},"end":{"line":25,"column":21}},"15":{"start":{"line":26,"column":20},"end":{"line":26,"column":55}},"16":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":84}},"18":{"start":{"line":38,"column":17},"end":{"line":38,"column":49}},"19":{"start":{"line":39,"column":18},"end":{"line":39,"column":32}},"20":{"start":{"line":40,"column":22},"end":{"line":40,"column":34}},"21":{"start":{"line":41,"column":25},"end":{"line":41,"column":51}},"22":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}},"23":{"start":{"line":45,"column":0},"end":{"line":45,"column":48}},"24":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"25":{"start":{"line":54,"column":8},"end":{"line":54,"column":52}},"26":{"start":{"line":59,"column":28},"end":{"line":59,"column":77}},"27":{"start":{"line":60,"column":22},"end":{"line":60,"column":54}},"28":{"start":{"line":61,"column":18},"end":{"line":61,"column":34}},"29":{"start":{"line":62,"column":17},"end":{"line":62,"column":49}},"30":{"start":{"line":63,"column":17},"end":{"line":63,"column":42}},"31":{"start":{"line":65,"column":4},"end":{"line":65,"column":35}},"32":{"start":{"line":67,"column":0},"end":{"line":67,"column":48}},"33":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"34":{"start":{"line":76,"column":8},"end":{"line":76,"column":62}},"35":{"start":{"line":79,"column":20},"end":{"line":79,"column":64}},"36":{"start":{"line":81,"column":4},"end":{"line":93,"column":5}},"37":{"start":{"line":83,"column":26},"end":{"line":83,"column":48}},"38":{"start":{"line":84,"column":8},"end":{"line":84,"column":81}},"39":{"start":{"line":86,"column":9},"end":{"line":93,"column":5}},"40":{"start":{"line":88,"column":26},"end":{"line":88,"column":48}},"41":{"start":{"line":89,"column":8},"end":{"line":89,"column":36}},"42":{"start":{"line":92,"column":8},"end":{"line":92,"column":23}},"43":{"start":{"line":95,"column":0},"end":{"line":95,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getSqrtRatioAtTick","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":27}},"loc":{"start":{"line":33,"column":34},"end":{"line":44,"column":1}},"line":33},"2":{"name":"getTickAtSqrtRatio","decl":{"start":{"line":52,"column":9},"end":{"line":52,"column":27}},"loc":{"start":{"line":52,"column":42},"end":{"line":66,"column":1}},"line":52},"3":{"name":"nearestUsableTick","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":26}},"loc":{"start":{"line":74,"column":46},"end":{"line":94,"column":1}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":34},"4":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":42}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":23}},{"start":{"line":34,"column":27},"end":{"line":34,"column":42}}],"line":34},"5":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{},"end":{}}],"line":53},"6":{"loc":{"start":{"line":53,"column":8},"end":{"line":53,"column":71}},"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":37}},{"start":{"line":53,"column":41},"end":{"line":53,"column":71}}],"line":53},"7":{"loc":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},{"start":{},"end":{}}],"line":75},"8":{"loc":{"start":{"line":81,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":93,"column":5}},{"start":{"line":86,"column":9},"end":{"line":93,"column":5}}],"line":81},"9":{"loc":{"start":{"line":84,"column":15},"end":{"line":84,"column":80}},"type":"cond-expr","locations":[{"start":{"line":84,"column":33},"end":{"line":84,"column":41}},{"start":{"line":84,"column":44},"end":{"line":84,"column":80}}],"line":84},"10":{"loc":{"start":{"line":86,"column":9},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":9},"end":{"line":93,"column":5}},{"start":{"line":91,"column":9},"end":{"line":93,"column":5}}],"line":86}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":149,"17":4,"18":145,"19":145,"20":145,"21":145,"22":145,"23":1,"24":61,"25":8,"26":53,"27":53,"28":53,"29":53,"30":53,"31":53,"32":1,"33":13,"34":2,"35":11,"36":11,"37":1,"38":1,"39":10,"40":1,"41":1,"42":9,"43":1},"f":{"0":1,"1":149,"2":61,"3":13},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[4,145],"4":[149,147],"5":[8,53],"6":[61,57],"7":[2,11],"8":[1,10],"9":[0,1],"10":[1,9]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/math/tick_math.ts","sources":["/home/runner/work/jit/jit/src/math/tick_math.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAiC;AAEjC,0CAA0C;AAC1C,oBAAO,CAAC,MAAM,CAAC;IACb,SAAS,EAAE,EAAE;IACb,QAAQ,EAAE,oBAAO,CAAC,UAAU;IAC5B,QAAQ,EAAE,CAAC,EAAE;IACb,QAAQ,EAAE,EAAE;CACb,CAAC,CAAC;AAEH,qCAAqC;AACrC,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC;AAsFhB,4BAAQ;AArFjB,MAAM,QAAQ,GAAG,MAAM,CAAC;AAqFL,4BAAQ;AAnF3B,MAAM,cAAc,GAAG,WAAW,CAAC;AAmFN,wCAAc;AAlF3C,MAAM,cAAc,GAAG,kDAAkD,CAAC;AAkF7B,wCAAc;AAhF3D,sBAAsB;AACtB,MAAM,GAAG,GAAG,EAAE,IAAI,GAAG,CAAC;AACtB,MAAM,WAAW,GAAG,IAAI,oBAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAE3C;;;;;GAKG;AACH,SAAgB,kBAAkB,CAAC,IAAY;IAC7C,IAAI,IAAI,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,EAAE,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,QAAQ,IAAI,sBAAsB,QAAQ,KAAK,QAAQ,GAAG,CAAC,CAAC;IAC9E,CAAC;IAED,2DAA2D;IAC3D,MAAM,IAAI,GAAG,IAAI,oBAAO,CAAC,MAAM,CAAC,CAAC;IACjC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;IAC/B,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAEhD,mCAAmC;IACnC,OAAO,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AAbD,gDAaC;AAED;;;;;GAKG;AACH,SAAgB,kBAAkB,CAAC,YAAoB;IACrD,IAAI,YAAY,GAAG,cAAc,IAAI,YAAY,IAAI,cAAc,EAAE,CAAC;QACpE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC9C,CAAC;IAED,sDAAsD;IACtD,kCAAkC;IAClC,kCAAkC;IAElC,MAAM,eAAe,GAAG,IAAI,oBAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7D,MAAM,SAAS,GAAG,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACnD,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/B,MAAM,IAAI,GAAG,IAAI,oBAAO,CAAC,MAAM,CAAC,CAAC;IACjC,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAEvC,oFAAoF;IACpF,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;AACjC,CAAC;AAlBD,gDAkBC;AAED;;;;;GAKG;AACH,SAAgB,iBAAiB,CAAC,IAAY,EAAE,WAAmB;IACjE,IAAI,WAAW,IAAI,CAAC,EAAE,CAAC;QACrB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACxD,CAAC;IAED,2CAA2C;IAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,WAAW,CAAC;IAE7D,4BAA4B;IAC5B,IAAI,OAAO,GAAG,QAAQ,EAAE,CAAC;QACvB,2CAA2C;QAC3C,MAAM,SAAS,GAAG,QAAQ,GAAG,WAAW,CAAC;QACzC,OAAO,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC;IAC3E,CAAC;SAAM,IAAI,OAAO,GAAG,QAAQ,EAAE,CAAC;QAC9B,0CAA0C;QAC1C,MAAM,SAAS,GAAG,QAAQ,GAAG,WAAW,CAAC;QACzC,OAAO,QAAQ,GAAG,SAAS,CAAC;IAC9B,CAAC;SAAM,CAAC;QACN,OAAO,OAAO,CAAC;IACjB,CAAC;AACH,CAAC;AApBD,8CAoBC","sourcesContent":["import Decimal from 'decimal.js';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n  toExpNeg: -40,\n  toExpPos: 40,\n});\n\n// Constants from Uniswap V3 TickMath\nconst MIN_TICK = -887272;\nconst MAX_TICK = 887272;\n\nconst MIN_SQRT_RATIO = 4295128739n;\nconst MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342n;\n\n// Q96 constant (2^96)\nconst Q96 = 2n ** 96n;\nconst Q96_DECIMAL = new Decimal(2).pow(96);\n\n/**\n * Returns the sqrt ratio as a Q64.96 for the given tick.\n * The sqrt ratio is sqrt(1.0001^tick) * 2^96\n * @param tick The tick for which to compute the sqrt ratio\n * @returns The sqrt ratio\n */\nexport function getSqrtRatioAtTick(tick: number): bigint {\n  if (tick < MIN_TICK || tick > MAX_TICK) {\n    throw new Error(`Tick ${tick} is out of bounds [${MIN_TICK}, ${MAX_TICK}]`);\n  }\n\n  // Use precise decimal arithmetic: sqrt(1.0001^tick) * 2^96\n  const base = new Decimal(1.0001);\n  const price = base.pow(tick);\n  const sqrtPrice = price.sqrt();\n  const sqrtPriceX96 = sqrtPrice.mul(Q96_DECIMAL);\n  \n  // Convert to bigint, rounding down\n  return BigInt(sqrtPriceX96.toFixed(0));\n}\n\n/**\n * Returns the tick corresponding to a given sqrt ratio, such that #getSqrtRatioAtTick(tick) <= sqrtRatioX96\n * and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96\n * @param sqrtRatioX96 The sqrt ratio as a Q64.96 for which to compute the tick\n * @returns The tick\n */\nexport function getTickAtSqrtRatio(sqrtRatioX96: bigint): number {\n  if (sqrtRatioX96 < MIN_SQRT_RATIO || sqrtRatioX96 >= MAX_SQRT_RATIO) {\n    throw new Error('sqrt ratio out of bounds');\n  }\n\n  // Convert sqrtRatioX96 back to price and then to tick\n  // price = (sqrtRatioX96 / 2^96)^2\n  // tick = log(price) / log(1.0001)\n  \n  const sqrtPriceX96Dec = new Decimal(sqrtRatioX96.toString());\n  const sqrtPrice = sqrtPriceX96Dec.div(Q96_DECIMAL);\n  const price = sqrtPrice.pow(2);\n  \n  const base = new Decimal(1.0001);\n  const tick = price.ln().div(base.ln());\n  \n  // Round down to get the floor tick - use decimal floor instead of Number conversion\n  return tick.floor().toNumber();\n}\n\n/**\n * Returns the nearest usable tick given a tick and the tick spacing\n * @param tick The tick to round\n * @param tickSpacing The tick spacing\n * @returns The nearest usable tick\n */\nexport function nearestUsableTick(tick: number, tickSpacing: number): number {\n  if (tickSpacing <= 0) {\n    throw new Error('tickSpacing must be greater than 0');\n  }\n\n  // Round to nearest multiple of tickSpacing\n  const rounded = Math.round(tick / tickSpacing) * tickSpacing;\n  \n  // Ensure it's within bounds\n  if (rounded < MIN_TICK) {\n    // Find the smallest valid tick >= MIN_TICK\n    const remainder = MIN_TICK % tickSpacing;\n    return remainder === 0 ? MIN_TICK : MIN_TICK + (tickSpacing - remainder);\n  } else if (rounded > MAX_TICK) {\n    // Find the largest valid tick <= MAX_TICK\n    const remainder = MAX_TICK % tickSpacing;\n    return MAX_TICK - remainder;\n  } else {\n    return rounded;\n  }\n}\n\n// Export constants for use in other modules\nexport { MIN_TICK, MAX_TICK, MIN_SQRT_RATIO, MAX_SQRT_RATIO };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f66b79e2a607442edf0110c685d55726f28ea417"},"/home/runner/work/jit/jit/src/sim/swap_engine.ts":{"path":"/home/runner/work/jit/jit/src/sim/swap_engine.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":111}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":44}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":48}},"7":{"start":{"line":11,"column":0},"end":{"line":14,"column":3}},"8":{"start":{"line":19,"column":0},"end":{"line":24,"column":66}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":51}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":51}},"11":{"start":{"line":29,"column":24},"end":{"line":29,"column":48}},"12":{"start":{"line":30,"column":4},"end":{"line":55,"column":5}},"13":{"start":{"line":32,"column":23},"end":{"line":32,"column":48}},"14":{"start":{"line":34,"column":8},"end":{"line":40,"column":9}},"15":{"start":{"line":35,"column":29},"end":{"line":35,"column":75}},"16":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"17":{"start":{"line":37,"column":16},"end":{"line":37,"column":61}},"18":{"start":{"line":39,"column":12},"end":{"line":39,"column":36}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":53}},"20":{"start":{"line":45,"column":23},"end":{"line":45,"column":48}},"21":{"start":{"line":47,"column":8},"end":{"line":53,"column":9}},"22":{"start":{"line":48,"column":29},"end":{"line":48,"column":75}},"23":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"24":{"start":{"line":50,"column":16},"end":{"line":50,"column":61}},"25":{"start":{"line":52,"column":12},"end":{"line":52,"column":36}},"26":{"start":{"line":54,"column":8},"end":{"line":54,"column":52}},"27":{"start":{"line":61,"column":29},"end":{"line":61,"column":74}},"28":{"start":{"line":62,"column":28},"end":{"line":62,"column":72}},"29":{"start":{"line":63,"column":25},"end":{"line":63,"column":60}},"30":{"start":{"line":64,"column":24},"end":{"line":64,"column":58}},"31":{"start":{"line":65,"column":20},"end":{"line":65,"column":24}},"32":{"start":{"line":66,"column":20},"end":{"line":66,"column":23}},"33":{"start":{"line":67,"column":26},"end":{"line":67,"column":29}},"34":{"start":{"line":68,"column":20},"end":{"line":68,"column":23}},"35":{"start":{"line":69,"column":4},"end":{"line":88,"column":5}},"36":{"start":{"line":71,"column":20},"end":{"line":71,"column":57}},"37":{"start":{"line":72,"column":8},"end":{"line":72,"column":35}},"38":{"start":{"line":73,"column":8},"end":{"line":73,"column":58}},"39":{"start":{"line":74,"column":8},"end":{"line":87,"column":9}},"40":{"start":{"line":77,"column":30},"end":{"line":77,"column":85}},"41":{"start":{"line":78,"column":32},"end":{"line":78,"column":69}},"42":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"43":{"start":{"line":80,"column":16},"end":{"line":80,"column":66}},"44":{"start":{"line":86,"column":12},"end":{"line":86,"column":91}},"45":{"start":{"line":89,"column":4},"end":{"line":97,"column":6}},"46":{"start":{"line":103,"column":21},"end":{"line":103,"column":63}},"47":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"48":{"start":{"line":105,"column":8},"end":{"line":105,"column":31}},"49":{"start":{"line":108,"column":4},"end":{"line":110,"column":20}},"50":{"start":{"line":111,"column":4},"end":{"line":113,"column":20}},"51":{"start":{"line":114,"column":4},"end":{"line":114,"column":57}},"52":{"start":{"line":116,"column":25},"end":{"line":116,"column":72}},"53":{"start":{"line":117,"column":29},"end":{"line":117,"column":70}},"54":{"start":{"line":118,"column":4},"end":{"line":118,"column":57}},"55":{"start":{"line":129,"column":23},"end":{"line":129,"column":43}},"56":{"start":{"line":130,"column":20},"end":{"line":130,"column":36}},"57":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"58":{"start":{"line":132,"column":8},"end":{"line":132,"column":47}},"59":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"60":{"start":{"line":135,"column":8},"end":{"line":135,"column":50}},"61":{"start":{"line":138,"column":22},"end":{"line":146,"column":5}},"62":{"start":{"line":147,"column":24},"end":{"line":147,"column":27}},"63":{"start":{"line":148,"column":25},"end":{"line":148,"column":28}},"64":{"start":{"line":149,"column":20},"end":{"line":149,"column":23}},"65":{"start":{"line":151,"column":4},"end":{"line":203,"column":5}},"66":{"start":{"line":153,"column":48},"end":{"line":153,"column":94}},"67":{"start":{"line":155,"column":8},"end":{"line":161,"column":9}},"68":{"start":{"line":156,"column":12},"end":{"line":156,"column":88}},"69":{"start":{"line":160,"column":12},"end":{"line":160,"column":18}},"70":{"start":{"line":163,"column":8},"end":{"line":172,"column":9}},"71":{"start":{"line":164,"column":31},"end":{"line":164,"column":74}},"72":{"start":{"line":165,"column":30},"end":{"line":165,"column":72}},"73":{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},"74":{"start":{"line":167,"column":16},"end":{"line":167,"column":53}},"75":{"start":{"line":169,"column":17},"end":{"line":171,"column":13}},"76":{"start":{"line":170,"column":16},"end":{"line":170,"column":53}},"77":{"start":{"line":174,"column":21},"end":{"line":174,"column":156}},"78":{"start":{"line":176,"column":8},"end":{"line":176,"column":94}},"79":{"start":{"line":177,"column":8},"end":{"line":177,"column":97}},"80":{"start":{"line":178,"column":8},"end":{"line":178,"column":87}},"81":{"start":{"line":180,"column":8},"end":{"line":182,"column":24}},"82":{"start":{"line":183,"column":8},"end":{"line":185,"column":24}},"83":{"start":{"line":186,"column":8},"end":{"line":186,"column":50}},"84":{"start":{"line":188,"column":8},"end":{"line":198,"column":9}},"85":{"start":{"line":189,"column":12},"end":{"line":189,"column":38}},"86":{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},"87":{"start":{"line":192,"column":16},"end":{"line":192,"column":121}},"88":{"start":{"line":197,"column":12},"end":{"line":197,"column":97}},"89":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"90":{"start":{"line":201,"column":12},"end":{"line":201,"column":18}},"91":{"start":{"line":205,"column":4},"end":{"line":205,"column":54}},"92":{"start":{"line":206,"column":4},"end":{"line":206,"column":38}},"93":{"start":{"line":207,"column":4},"end":{"line":207,"column":42}},"94":{"start":{"line":209,"column":4},"end":{"line":224,"column":5}},"95":{"start":{"line":210,"column":31},"end":{"line":213,"column":23}},"96":{"start":{"line":214,"column":8},"end":{"line":223,"column":9}},"97":{"start":{"line":215,"column":12},"end":{"line":217,"column":28}},"98":{"start":{"line":220,"column":12},"end":{"line":222,"column":28}},"99":{"start":{"line":226,"column":4},"end":{"line":226,"column":45}},"100":{"start":{"line":227,"column":4},"end":{"line":236,"column":6}},"101":{"start":{"line":238,"column":0},"end":{"line":238,"column":30}},"102":{"start":{"line":248,"column":22},"end":{"line":248,"column":55}},"103":{"start":{"line":249,"column":4},"end":{"line":249,"column":43}},"104":{"start":{"line":250,"column":4},"end":{"line":256,"column":5}},"105":{"start":{"line":251,"column":23},"end":{"line":251,"column":62}},"106":{"start":{"line":252,"column":8},"end":{"line":252,"column":32}},"107":{"start":{"line":255,"column":8},"end":{"line":255,"column":19}},"108":{"start":{"line":258,"column":0},"end":{"line":258,"column":48}},"109":{"start":{"line":267,"column":24},"end":{"line":267,"column":81}},"110":{"start":{"line":268,"column":22},"end":{"line":268,"column":55}},"111":{"start":{"line":269,"column":4},"end":{"line":269,"column":43}},"112":{"start":{"line":270,"column":4},"end":{"line":278,"column":5}},"113":{"start":{"line":271,"column":23},"end":{"line":271,"column":62}},"114":{"start":{"line":272,"column":27},"end":{"line":272,"column":79}},"115":{"start":{"line":273,"column":23},"end":{"line":273,"column":76}},"116":{"start":{"line":274,"column":8},"end":{"line":274,"column":33}},"117":{"start":{"line":277,"column":8},"end":{"line":277,"column":19}},"118":{"start":{"line":280,"column":0},"end":{"line":280,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":1},"end":{"line":19,"column":2}},"loc":{"start":{"line":19,"column":26},"end":{"line":24,"column":1}},"line":19},"2":{"name":"getNextTick","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":20}},"loc":{"start":{"line":28,"column":53},"end":{"line":56,"column":1}},"line":28},"3":{"name":"computeSwapStep","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":24}},"loc":{"start":{"line":60,"column":108},"end":{"line":98,"column":1}},"line":60},"4":{"name":"crossTick","decl":{"start":{"line":102,"column":9},"end":{"line":102,"column":18}},"loc":{"start":{"line":102,"column":76},"end":{"line":119,"column":1}},"line":102},"5":{"name":"applySwap","decl":{"start":{"line":128,"column":9},"end":{"line":128,"column":18}},"loc":{"start":{"line":128,"column":64},"end":{"line":237,"column":1}},"line":128},"6":{"name":"estimateSwapOutput","decl":{"start":{"line":246,"column":9},"end":{"line":246,"column":27}},"loc":{"start":{"line":246,"column":54},"end":{"line":257,"column":1}},"line":246},"7":{"name":"calculatePriceImpact","decl":{"start":{"line":266,"column":9},"end":{"line":266,"column":29}},"loc":{"start":{"line":266,"column":56},"end":{"line":279,"column":1}},"line":266}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":64}},"type":"binary-expr","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":16}},{"start":{"line":24,"column":21},"end":{"line":24,"column":63}}],"line":24},"4":{"loc":{"start":{"line":30,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":55,"column":5}},{"start":{"line":43,"column":9},"end":{"line":55,"column":5}}],"line":30},"5":{"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},{"start":{},"end":{}}],"line":36},"6":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{},"end":{}}],"line":49},"7":{"loc":{"start":{"line":69,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":88,"column":5}},{"start":{},"end":{}}],"line":69},"8":{"loc":{"start":{"line":74,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":87,"column":9}},{"start":{"line":83,"column":13},"end":{"line":87,"column":9}}],"line":74},"9":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{},"end":{}}],"line":79},"10":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"11":{"loc":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},{"start":{},"end":{}}],"line":131},"12":{"loc":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},{"start":{},"end":{}}],"line":134},"13":{"loc":{"start":{"line":143,"column":29},"end":{"line":143,"column":97}},"type":"cond-expr","locations":[{"start":{"line":143,"column":42},"end":{"line":143,"column":68}},{"start":{"line":143,"column":71},"end":{"line":143,"column":97}}],"line":143},"14":{"loc":{"start":{"line":163,"column":8},"end":{"line":172,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":172,"column":9}},{"start":{},"end":{}}],"line":163},"15":{"loc":{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":171,"column":13}},{"start":{"line":169,"column":17},"end":{"line":171,"column":13}}],"line":166},"16":{"loc":{"start":{"line":166,"column":16},"end":{"line":166,"column":54}},"type":"binary-expr","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":26}},{"start":{"line":166,"column":30},"end":{"line":166,"column":54}}],"line":166},"17":{"loc":{"start":{"line":169,"column":17},"end":{"line":171,"column":13}},"type":"if","locations":[{"start":{"line":169,"column":17},"end":{"line":171,"column":13}},{"start":{},"end":{}}],"line":169},"18":{"loc":{"start":{"line":169,"column":21},"end":{"line":169,"column":60}},"type":"binary-expr","locations":[{"start":{"line":169,"column":21},"end":{"line":169,"column":32}},{"start":{"line":169,"column":36},"end":{"line":169,"column":60}}],"line":169},"19":{"loc":{"start":{"line":188,"column":8},"end":{"line":198,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":198,"column":9}},{"start":{"line":195,"column":13},"end":{"line":198,"column":9}}],"line":188},"20":{"loc":{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},"type":"if","locations":[{"start":{"line":191,"column":12},"end":{"line":193,"column":13}},{"start":{},"end":{}}],"line":191},"21":{"loc":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},{"start":{},"end":{}}],"line":200},"22":{"loc":{"start":{"line":209,"column":4},"end":{"line":224,"column":5}},"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":224,"column":5}},{"start":{},"end":{}}],"line":209},"23":{"loc":{"start":{"line":214,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":223,"column":9}},{"start":{"line":219,"column":13},"end":{"line":223,"column":9}}],"line":214}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":6,"12":6,"13":5,"14":5,"15":73935,"16":73935,"17":0,"18":73935,"19":5,"20":1,"21":1,"22":14787,"23":14787,"24":0,"25":14787,"26":1,"27":6,"28":6,"29":6,"30":6,"31":6,"32":6,"33":6,"34":6,"35":6,"36":6,"37":6,"38":6,"39":6,"40":5,"41":5,"42":5,"43":5,"44":1,"45":6,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":9,"56":9,"57":9,"58":1,"59":8,"60":2,"61":6,"62":6,"63":6,"64":6,"65":6,"66":6,"67":6,"68":6,"69":0,"70":6,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":6,"78":6,"79":6,"80":6,"81":6,"82":6,"83":6,"84":6,"85":6,"86":6,"87":0,"88":0,"89":6,"90":0,"91":6,"92":6,"93":6,"94":6,"95":6,"96":6,"97":5,"98":1,"99":6,"100":6,"101":1,"102":2,"103":2,"104":2,"105":2,"106":1,"107":1,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1},"f":{"0":1,"1":1,"2":6,"3":6,"4":0,"5":9,"6":2,"7":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[5,1],"5":[0,73935],"6":[0,14787],"7":[6,0],"8":[5,1],"9":[5,0],"10":[0,0],"11":[1,8],"12":[2,6],"13":[5,1],"14":[0,6],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[6,0],"20":[0,6],"21":[0,6],"22":[6,0],"23":[5,1]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/sim/swap_engine.ts","sources":["/home/runner/work/jit/jit/src/sim/swap_engine.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\nimport { PoolState, getTickInfo, setTickInfo, updateTimestamp } from './pool_state';\nimport { getSqrtRatioAtTick, getTickAtSqrtRatio } from '../math/tick_math';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Direction of swap\n */\nexport enum SwapDirection {\n  /** Swapping token0 for token1 (price increases) */\n  ZERO_FOR_ONE = 'ZERO_FOR_ONE',\n  /** Swapping token1 for token0 (price decreases) */\n  ONE_FOR_ZERO = 'ONE_FOR_ZERO',\n}\n\n/**\n * Result of a swap operation\n */\nexport interface SwapResult {\n  /** Amount of input token consumed */\n  amountIn: string;\n  /** Amount of output token produced */\n  amountOut: string;\n  /** New sqrt price after swap */\n  sqrtPriceX96: string;\n  /** New tick after swap */\n  tick: number;\n  /** Total fees paid */\n  feeAmount: string;\n  /** Protocol fees generated */\n  protocolFeeAmount: string;\n  /** New liquidity (if tick crossed) */\n  liquidity: string;\n  /** Updated pool state */\n  poolState: PoolState;\n}\n\n/**\n * Step state during swap computation\n */\ninterface SwapStep {\n  /** Target sqrt price for this step */\n  sqrtPriceStartX96: string;\n  /** Target tick for this step */\n  tickNext: number;\n  /** Whether tickNext is initialized */\n  initialized: boolean;\n  /** Target sqrt price for tickNext */\n  sqrtPriceNextX96: string;\n  /** Amount in for this step */\n  amountIn: string;\n  /** Amount out for this step */\n  amountOut: string;\n  /** Fee amount for this step */\n  feeAmount: string;\n}\n\n/**\n * Current state during swap execution\n */\ninterface SwapState {\n  /** Remaining amount to swap */\n  amountSpecifiedRemaining: string;\n  /** Amount already calculated */\n  amountCalculated: string;\n  /** Current sqrt price */\n  sqrtPriceX96: string;\n  /** Current tick */\n  tick: number;\n  /** Current fee growth global (token being swapped in) */\n  feeGrowthGlobalX128: string;\n  /** Protocol fee amount */\n  protocolFee: string;\n  /** Current liquidity */\n  liquidity: string;\n}\n\n/**\n * Computes the sqrt price for the next tick in the swap direction\n */\nfunction getNextTick(\n  state: PoolState,\n  currentTick: number,\n  zeroForOne: boolean\n): { tick: number; initialized: boolean } {\n  const tickSpacing = state.config.tickSpacing;\n  \n  if (zeroForOne) {\n    // Moving down (price decreasing)\n    let nextTick = currentTick - tickSpacing;\n    \n    // Find the next initialized tick below current tick\n    while (nextTick >= -887272) {\n      const tickInfo = getTickInfo(state, nextTick);\n      if (tickInfo.initialized) {\n        return { tick: nextTick, initialized: true };\n      }\n      nextTick -= tickSpacing;\n    }\n    \n    return { tick: -887272, initialized: false };\n  } else {\n    // Moving up (price increasing)\n    let nextTick = currentTick + tickSpacing;\n    \n    // Find the next initialized tick above current tick\n    while (nextTick <= 887272) {\n      const tickInfo = getTickInfo(state, nextTick);\n      if (tickInfo.initialized) {\n        return { tick: nextTick, initialized: true };\n      }\n      nextTick += tickSpacing;\n    }\n    \n    return { tick: 887272, initialized: false };\n  }\n}\n\n/**\n * Computes the amount out for a given amount in and price range\n */\nfunction computeSwapStep(\n  sqrtRatioCurrentX96: string,\n  sqrtRatioTargetX96: string,\n  liquidity: string,\n  amountIn: string,\n  feePips: number,\n  zeroForOne: boolean\n): SwapStep {\n  const sqrtRatioCurrent = new Decimal(sqrtRatioCurrentX96);\n  const sqrtRatioTarget = new Decimal(sqrtRatioTargetX96);\n  const liquidityDec = new Decimal(liquidity);\n  const amountInDec = new Decimal(amountIn);\n  \n  const exactIn = true; // For simplicity, assume exact input swaps\n  \n  let amountOut = '0';\n  let amountInWithFee = '0';\n  let feeAmount = '0';\n  \n  if (exactIn) {\n    // Calculate fee\n    const fee = amountInDec.mul(feePips).div(1000000);\n    feeAmount = fee.toString();\n    amountInWithFee = amountInDec.sub(fee).toString();\n    \n    if (zeroForOne) {\n      // Swapping token0 for token1\n      // amountOut = liquidity * (sqrtP - sqrtP_target) / (sqrtP * sqrtP_target)\n      const numerator = liquidityDec.mul(sqrtRatioCurrent.sub(sqrtRatioTarget));\n      const denominator = sqrtRatioCurrent.mul(sqrtRatioTarget);\n      \n      if (!denominator.isZero()) {\n        amountOut = numerator.div(denominator).toString();\n      }\n    } else {\n      // Swapping token1 for token0\n      // amountOut = liquidity * (sqrtP_target - sqrtP)\n      amountOut = liquidityDec.mul(sqrtRatioTarget.sub(sqrtRatioCurrent)).toString();\n    }\n  }\n  \n  return {\n    sqrtPriceStartX96: sqrtRatioCurrentX96,\n    tickNext: 0, // Will be set by caller\n    initialized: false, // Will be set by caller\n    sqrtPriceNextX96: sqrtRatioTargetX96,\n    amountIn: amountInWithFee,\n    amountOut,\n    feeAmount,\n  };\n}\n\n/**\n * Crosses a tick and updates liquidity\n */\nfunction crossTick(\n  state: PoolState,\n  tick: number,\n  feeGrowthGlobal0X128: string,\n  feeGrowthGlobal1X128: string\n): string {\n  const tickInfo = getTickInfo(state, tick);\n  \n  if (!tickInfo.initialized) {\n    return state.liquidity;\n  }\n  \n  // Update fee growth outside\n  tickInfo.feeGrowthOutside0X128 = new Decimal(feeGrowthGlobal0X128)\n    .sub(new Decimal(tickInfo.feeGrowthOutside0X128))\n    .toString();\n  tickInfo.feeGrowthOutside1X128 = new Decimal(feeGrowthGlobal1X128)\n    .sub(new Decimal(tickInfo.feeGrowthOutside1X128))\n    .toString();\n  \n  setTickInfo(state, tick, tickInfo);\n  \n  // Update liquidity by net amount\n  const liquidityNet = new Decimal(tickInfo.liquidityNet);\n  const currentLiquidity = new Decimal(state.liquidity);\n  \n  return currentLiquidity.add(liquidityNet).toString();\n}\n\n/**\n * Executes a swap on the pool\n * @param state Pool state (will be modified)\n * @param amountIn Amount of input token\n * @param tokenIn Token being swapped in ('token0' or 'token1')\n * @param sqrtPriceLimitX96 Price limit for the swap (optional)\n * @returns SwapResult with amounts and updated state\n */\nexport function applySwap(\n  state: PoolState,\n  amountIn: string,\n  tokenIn: 'token0' | 'token1',\n  sqrtPriceLimitX96?: string\n): SwapResult {\n  const zeroForOne = tokenIn === 'token0';\n  const feePips = state.config.fee; // fee in pips (e.g., 3000 for 0.3%)\n  \n  if (new Decimal(amountIn).lte(0)) {\n    throw new Error('Invalid swap amount');\n  }\n  \n  if (new Decimal(state.liquidity).lte(0)) {\n    throw new Error('No liquidity available');\n  }\n  \n  // Initialize swap state\n  const swapState: SwapState = {\n    amountSpecifiedRemaining: amountIn,\n    amountCalculated: '0',\n    sqrtPriceX96: state.slot0.sqrtPriceX96,\n    tick: state.slot0.tick,\n    feeGrowthGlobalX128: zeroForOne ? state.feeGrowthGlobal0X128 : state.feeGrowthGlobal1X128,\n    protocolFee: '0',\n    liquidity: state.liquidity,\n  };\n  \n  let totalAmountIn = '0';\n  let totalAmountOut = '0';\n  let totalFees = '0';\n  \n  // Continue swapping until amount is exhausted or price limit is reached\n  while (new Decimal(swapState.amountSpecifiedRemaining).gt(0)) {\n    // Find next tick to swap to\n    const { tick: tickNext, initialized } = getNextTick(\n      state,\n      swapState.tick,\n      zeroForOne\n    );\n    \n    let sqrtPriceNextX96: string;\n    try {\n      sqrtPriceNextX96 = getSqrtRatioAtTick(tickNext).toString();\n    } catch {\n      // If we can't get sqrt ratio, we've hit a boundary\n      break;\n    }\n    \n    // Check price limit\n    if (sqrtPriceLimitX96) {\n      const limitPrice = new Decimal(sqrtPriceLimitX96);\n      const nextPrice = new Decimal(sqrtPriceNextX96);\n      \n      if (zeroForOne && nextPrice.lt(limitPrice)) {\n        sqrtPriceNextX96 = sqrtPriceLimitX96;\n      } else if (!zeroForOne && nextPrice.gt(limitPrice)) {\n        sqrtPriceNextX96 = sqrtPriceLimitX96;\n      }\n    }\n    \n    // Compute swap step\n    const step = computeSwapStep(\n      swapState.sqrtPriceX96,\n      sqrtPriceNextX96,\n      swapState.liquidity,\n      swapState.amountSpecifiedRemaining,\n      feePips,\n      zeroForOne\n    );\n    \n    // Update running totals\n    totalAmountIn = new Decimal(totalAmountIn).add(step.amountIn).toString();\n    totalAmountOut = new Decimal(totalAmountOut).add(step.amountOut).toString();\n    totalFees = new Decimal(totalFees).add(step.feeAmount).toString();\n    \n    // Update swap state\n    swapState.amountSpecifiedRemaining = new Decimal(swapState.amountSpecifiedRemaining)\n      .sub(new Decimal(step.amountIn).add(step.feeAmount))\n      .toString();\n    swapState.amountCalculated = new Decimal(swapState.amountCalculated)\n      .add(step.amountOut)\n      .toString();\n    swapState.sqrtPriceX96 = sqrtPriceNextX96;\n    \n    // Update tick if we've moved to next initialized tick\n    if (new Decimal(swapState.sqrtPriceX96).eq(new Decimal(getSqrtRatioAtTick(tickNext).toString()))) {\n      swapState.tick = tickNext;\n      \n      // Cross the tick if it's initialized\n      if (initialized) {\n        swapState.liquidity = crossTick(\n          state,\n          tickNext,\n          state.feeGrowthGlobal0X128,\n          state.feeGrowthGlobal1X128\n        );\n      }\n    } else {\n      // Update tick based on current price\n      swapState.tick = getTickAtSqrtRatio(BigInt(swapState.sqrtPriceX96));\n    }\n    \n    // Break if we've hit price limit or run out of liquidity\n    if (new Decimal(swapState.liquidity).lte(0)) {\n      break;\n    }\n  }\n  \n  // Update pool state\n  state.slot0.sqrtPriceX96 = swapState.sqrtPriceX96;\n  state.slot0.tick = swapState.tick;\n  state.liquidity = swapState.liquidity;\n  \n  // Update fee growth global\n  if (new Decimal(totalFees).gt(0)) {\n    const feeGrowthDelta = new Decimal(totalFees)\n      .mul(new Decimal(2).pow(128))\n      .div(new Decimal(state.liquidity))\n      .toString();\n    \n    if (zeroForOne) {\n      state.feeGrowthGlobal0X128 = new Decimal(state.feeGrowthGlobal0X128)\n        .add(feeGrowthDelta)\n        .toString();\n    } else {\n      state.feeGrowthGlobal1X128 = new Decimal(state.feeGrowthGlobal1X128)\n        .add(feeGrowthDelta)\n        .toString();\n    }\n  }\n  \n  // Update timestamp\n  updateTimestamp(state);\n  \n  return {\n    amountIn: totalAmountIn,\n    amountOut: totalAmountOut,\n    sqrtPriceX96: state.slot0.sqrtPriceX96,\n    tick: state.slot0.tick,\n    feeAmount: totalFees,\n    protocolFeeAmount: '0', // Simplified - no protocol fees for now\n    liquidity: state.liquidity,\n    poolState: state,\n  };\n}\n\n/**\n * Estimates the output amount for a given input amount (read-only)\n * @param state Pool state (not modified)\n * @param amountIn Amount of input token\n * @param tokenIn Token being swapped in\n * @returns Estimated output amount\n */\nexport function estimateSwapOutput(\n  state: PoolState,\n  amountIn: string,\n  tokenIn: 'token0' | 'token1'\n): string {\n  // Clone state to avoid modifying original\n  const stateCopy = JSON.parse(JSON.stringify(state));\n  stateCopy.ticks = new Map(state.ticks);\n  \n  try {\n    const result = applySwap(stateCopy, amountIn, tokenIn);\n    return result.amountOut;\n  } catch {\n    return '0';\n  }\n}\n\n/**\n * Calculates price impact of a swap\n * @param state Pool state\n * @param amountIn Amount of input token\n * @param tokenIn Token being swapped in\n * @returns Price impact as percentage (string)\n */\nexport function calculatePriceImpact(\n  state: PoolState,\n  amountIn: string,\n  tokenIn: 'token0' | 'token1'\n): string {\n  const priceBefore = new Decimal(state.slot0.sqrtPriceX96).pow(2);\n  \n  const stateCopy = JSON.parse(JSON.stringify(state));\n  stateCopy.ticks = new Map(state.ticks);\n  \n  try {\n    const result = applySwap(stateCopy, amountIn, tokenIn);\n    const priceAfter = new Decimal(result.sqrtPriceX96).pow(2);\n    \n    const impact = priceAfter.sub(priceBefore).div(priceBefore).mul(100);\n    return impact.toString();\n  } catch {\n    return '0';\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d28bffa2fc75036c848430b8b091b16327e56c9e"},"/home/runner/work/jit/jit/src/math/price_utils.ts":{"path":"/home/runner/work/jit/jit/src/math/price_utils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":303}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":0},"end":{"line":14,"column":3}},"6":{"start":{"line":16,"column":20},"end":{"line":16,"column":55}},"7":{"start":{"line":25,"column":22},"end":{"line":25,"column":66}},"8":{"start":{"line":27,"column":18},"end":{"line":27,"column":51}},"9":{"start":{"line":29,"column":30},"end":{"line":29,"column":122}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":51}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":50}},"12":{"start":{"line":41,"column":21},"end":{"line":41,"column":63}},"13":{"start":{"line":43,"column":30},"end":{"line":43,"column":122}},"14":{"start":{"line":44,"column":26},"end":{"line":44,"column":57}},"15":{"start":{"line":46,"column":22},"end":{"line":46,"column":59}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":40}},"17":{"start":{"line":49,"column":0},"end":{"line":49,"column":50}},"18":{"start":{"line":59,"column":24},"end":{"line":59,"column":108}},"19":{"start":{"line":60,"column":23},"end":{"line":60,"column":106}},"20":{"start":{"line":61,"column":19},"end":{"line":61,"column":72}},"21":{"start":{"line":62,"column":4},"end":{"line":62,"column":29}},"22":{"start":{"line":64,"column":0},"end":{"line":64,"column":52}},"23":{"start":{"line":74,"column":18},"end":{"line":74,"column":60}},"24":{"start":{"line":76,"column":30},"end":{"line":76,"column":122}},"25":{"start":{"line":77,"column":4},"end":{"line":77,"column":51}},"26":{"start":{"line":79,"column":0},"end":{"line":79,"column":40}},"27":{"start":{"line":88,"column":21},"end":{"line":88,"column":63}},"28":{"start":{"line":90,"column":30},"end":{"line":90,"column":122}},"29":{"start":{"line":91,"column":26},"end":{"line":91,"column":57}},"30":{"start":{"line":93,"column":17},"end":{"line":93,"column":78}},"31":{"start":{"line":95,"column":4},"end":{"line":95,"column":35}},"32":{"start":{"line":97,"column":0},"end":{"line":97,"column":40}},"33":{"start":{"line":106,"column":22},"end":{"line":106,"column":54}},"34":{"start":{"line":107,"column":20},"end":{"line":107,"column":62}},"35":{"start":{"line":108,"column":22},"end":{"line":108,"column":44}},"36":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"37":{"start":{"line":110,"column":8},"end":{"line":110,"column":50}},"38":{"start":{"line":112,"column":4},"end":{"line":112,"column":32}},"39":{"start":{"line":114,"column":0},"end":{"line":114,"column":46}},"40":{"start":{"line":122,"column":22},"end":{"line":122,"column":54}},"41":{"start":{"line":123,"column":23},"end":{"line":123,"column":65}},"42":{"start":{"line":124,"column":4},"end":{"line":124,"column":48}},"43":{"start":{"line":126,"column":0},"end":{"line":126,"column":44}},"44":{"start":{"line":138,"column":29},"end":{"line":138,"column":92}},"45":{"start":{"line":139,"column":29},"end":{"line":139,"column":92}},"46":{"start":{"line":140,"column":19},"end":{"line":140,"column":76}},"47":{"start":{"line":141,"column":19},"end":{"line":141,"column":76}},"48":{"start":{"line":142,"column":4},"end":{"line":142,"column":41}},"49":{"start":{"line":144,"column":0},"end":{"line":144,"column":46}},"50":{"start":{"line":154,"column":18},"end":{"line":154,"column":73}},"51":{"start":{"line":155,"column":29},"end":{"line":155,"column":66}},"52":{"start":{"line":156,"column":29},"end":{"line":156,"column":108}},"53":{"start":{"line":157,"column":4},"end":{"line":157,"column":68}},"54":{"start":{"line":159,"column":0},"end":{"line":159,"column":62}},"55":{"start":{"line":169,"column":18},"end":{"line":169,"column":73}},"56":{"start":{"line":170,"column":29},"end":{"line":170,"column":66}},"57":{"start":{"line":171,"column":29},"end":{"line":171,"column":108}},"58":{"start":{"line":172,"column":4},"end":{"line":172,"column":68}},"59":{"start":{"line":174,"column":0},"end":{"line":174,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"sqrtPriceX96ToPrice","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":28}},"loc":{"start":{"line":24,"column":60},"end":{"line":31,"column":1}},"line":24},"2":{"name":"priceToSqrtPriceX96","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":28}},"loc":{"start":{"line":40,"column":68},"end":{"line":48,"column":1}},"line":40},"3":{"name":"calculatePriceImpact","decl":{"start":{"line":58,"column":9},"end":{"line":58,"column":29}},"loc":{"start":{"line":58,"column":85},"end":{"line":63,"column":1}},"line":58},"4":{"name":"getPriceAtTick","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":23}},"loc":{"start":{"line":72,"column":52},"end":{"line":78,"column":1}},"line":72},"5":{"name":"getTickAtPrice","decl":{"start":{"line":87,"column":9},"end":{"line":87,"column":23}},"loc":{"start":{"line":87,"column":53},"end":{"line":96,"column":1}},"line":87},"6":{"name":"formatTokenAmount","decl":{"start":{"line":105,"column":9},"end":{"line":105,"column":26}},"loc":{"start":{"line":105,"column":62},"end":{"line":113,"column":1}},"line":105},"7":{"name":"parseTokenAmount","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":25}},"loc":{"start":{"line":121,"column":44},"end":{"line":125,"column":1}},"line":121},"8":{"name":"calculateUsdValue","decl":{"start":{"line":137,"column":9},"end":{"line":137,"column":26}},"loc":{"start":{"line":137,"column":89},"end":{"line":143,"column":1}},"line":137},"9":{"name":"getEquivalentToken1Amount","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":34}},"loc":{"start":{"line":153,"column":80},"end":{"line":158,"column":1}},"line":153},"10":{"name":"getEquivalentToken0Amount","decl":{"start":{"line":168,"column":9},"end":{"line":168,"column":34}},"loc":{"start":{"line":168,"column":80},"end":{"line":173,"column":1}},"line":168}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":40,"column":36},"end":{"line":40,"column":50}},"type":"default-arg","locations":[{"start":{"line":40,"column":48},"end":{"line":40,"column":50}}],"line":40},"4":{"loc":{"start":{"line":40,"column":52},"end":{"line":40,"column":66}},"type":"default-arg","locations":[{"start":{"line":40,"column":64},"end":{"line":40,"column":66}}],"line":40},"5":{"loc":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},{"start":{},"end":{}}],"line":109}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/math/price_utils.ts","sources":["/home/runner/work/jit/jit/src/math/price_utils.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 40,\n  rounding: Decimal.ROUND_HALF_UP,\n  toExpNeg: -40,\n  toExpPos: 40,\n});\n\n// Q96 constant (2^96)\nconst Q96_DECIMAL = new Decimal(2).pow(96);\n\n/**\n * Converts sqrtPriceX96 to human readable price (token1 per token0)\n * @param sqrtX96 The sqrt price as Q64.96 format (string or bigint)\n * @param decimals0 Number of decimals for token0\n * @param decimals1 Number of decimals for token1\n * @returns Human readable price as string\n */\nexport function sqrtPriceX96ToPrice(\n  sqrtX96: string | bigint,\n  decimals0: number,\n  decimals1: number\n): string {\n  const sqrtPrice = new Decimal(sqrtX96.toString());\n  \n  // Convert Q64.96 to decimal: (sqrtPrice / 2^96)^2\n  const price = sqrtPrice.div(Q96_DECIMAL).pow(2);\n  \n  // Adjust for token decimals: price * (10^decimals0 / 10^decimals1)\n  const decimalAdjustment = new Decimal(10).pow(decimals0).div(new Decimal(10).pow(decimals1));\n  \n  return price.mul(decimalAdjustment).toString();\n}\n\n/**\n * Converts human readable price to sqrtPriceX96\n * @param price The price as string or number (token1 per token0)\n * @param decimals0 Number of decimals for token0  \n * @param decimals1 Number of decimals for token1\n * @returns The sqrt price in Q64.96 format as bigint\n */\nexport function priceToSqrtPriceX96(\n  price: string | number,\n  decimals0: number = 18,\n  decimals1: number = 18\n): bigint {\n  const priceDec = new Decimal(price.toString());\n  \n  // Adjust for token decimals: price * (10^decimals1 / 10^decimals0)\n  const decimalAdjustment = new Decimal(10).pow(decimals1).div(new Decimal(10).pow(decimals0));\n  const adjustedPrice = priceDec.mul(decimalAdjustment);\n  \n  // Convert to sqrt price: sqrt(price) * 2^96\n  const sqrtPrice = adjustedPrice.sqrt().mul(Q96_DECIMAL);\n  \n  return BigInt(sqrtPrice.toFixed(0));\n}\n\n/**\n * Calculates the price impact of a swap\n * @param sqrtPriceBefore The sqrt price before swap\n * @param sqrtPriceAfter The sqrt price after swap  \n * @param decimals0 Token0 decimals\n * @param decimals1 Token1 decimals\n * @returns Price impact as percentage (positive for price increase)\n */\nexport function calculatePriceImpact(\n  sqrtPriceBefore: string,\n  sqrtPriceAfter: string,\n  decimals0: number,\n  decimals1: number\n): string {\n  const priceBefore = new Decimal(sqrtPriceX96ToPrice(sqrtPriceBefore, decimals0, decimals1));\n  const priceAfter = new Decimal(sqrtPriceX96ToPrice(sqrtPriceAfter, decimals0, decimals1));\n  \n  const impact = priceAfter.sub(priceBefore).div(priceBefore).mul(100);\n  \n  return impact.toString();\n}\n\n/**\n * Gets the price at a specific tick\n * @param tick The tick\n * @param decimals0 Token0 decimals\n * @param decimals1 Token1 decimals\n * @returns The price as string\n */\nexport function getPriceAtTick(\n  tick: number,\n  decimals0: number,\n  decimals1: number\n): string {\n  // price = 1.0001^tick\n  const price = new Decimal(1.0001).pow(tick);\n  \n  // Adjust for token decimals\n  const decimalAdjustment = new Decimal(10).pow(decimals0).div(new Decimal(10).pow(decimals1));\n  \n  return price.mul(decimalAdjustment).toString();\n}\n\n/**\n * Gets the tick at a specific price\n * @param price The price (token1 per token0)\n * @param decimals0 Token0 decimals\n * @param decimals1 Token1 decimals\n * @returns The tick (rounded down)\n */\nexport function getTickAtPrice(\n  price: string | number,\n  decimals0: number,\n  decimals1: number\n): number {\n  const priceDec = new Decimal(price.toString());\n  \n  // Adjust for token decimals: price * (10^decimals1 / 10^decimals0)\n  const decimalAdjustment = new Decimal(10).pow(decimals1).div(new Decimal(10).pow(decimals0));\n  const adjustedPrice = priceDec.mul(decimalAdjustment);\n  \n  // tick = log(price) / log(1.0001)\n  const tick = adjustedPrice.ln().div(new Decimal(1.0001).ln());\n  \n  // Round down to get the floor tick - use decimal floor instead of Number conversion\n  return tick.floor().toNumber();\n}\n\n/**\n * Formats token amount with proper decimals\n * @param amount Raw token amount (string)\n * @param decimals Number of decimals\n * @param displayDecimals Number of decimals to display (optional)\n * @returns Formatted amount string\n */\nexport function formatTokenAmount(\n  amount: string,\n  decimals: number,\n  displayDecimals?: number\n): string {\n  const amountDec = new Decimal(amount);\n  const divisor = new Decimal(10).pow(decimals);\n  const formatted = amountDec.div(divisor);\n  \n  if (displayDecimals !== undefined) {\n    return formatted.toFixed(displayDecimals);\n  }\n  \n  return formatted.toString();\n}\n\n/**\n * Parses formatted token amount to raw amount\n * @param amount Formatted amount (string)\n * @param decimals Number of decimals\n * @returns Raw amount string\n */\nexport function parseTokenAmount(amount: string, decimals: number): string {\n  const amountDec = new Decimal(amount);\n  const multiplier = new Decimal(10).pow(decimals);\n  \n  return amountDec.mul(multiplier).toFixed(0);\n}\n\n/**\n * Calculates USD value of token amounts\n * @param amount0 Token0 amount (raw)\n * @param amount1 Token1 amount (raw)\n * @param decimals0 Token0 decimals\n * @param decimals1 Token1 decimals\n * @param price0Usd Token0 price in USD\n * @param price1Usd Token1 price in USD\n * @returns Total USD value as string\n */\nexport function calculateUsdValue(\n  amount0: string,\n  amount1: string,\n  decimals0: number,\n  decimals1: number,\n  price0Usd: string,\n  price1Usd: string\n): string {\n  const amount0Formatted = new Decimal(formatTokenAmount(amount0, decimals0));\n  const amount1Formatted = new Decimal(formatTokenAmount(amount1, decimals1));\n  \n  const value0 = amount0Formatted.mul(new Decimal(price0Usd));\n  const value1 = amount1Formatted.mul(new Decimal(price1Usd));\n  \n  return value0.add(value1).toString();\n}\n\n/**\n * Computes the equivalent token1 amount for a given token0 amount at current price\n * @param amount0 Token0 amount (raw)\n * @param sqrtPriceX96 Current sqrt price\n * @param decimals0 Token0 decimals\n * @param decimals1 Token1 decimals\n * @returns Equivalent token1 amount (raw) as string\n */\nexport function getEquivalentToken1Amount(\n  amount0: string,\n  sqrtPriceX96: string,\n  decimals0: number,\n  decimals1: number\n): string {\n  const price = sqrtPriceX96ToPrice(sqrtPriceX96, decimals0, decimals1);\n  const amount0Formatted = formatTokenAmount(amount0, decimals0);\n  const amount1Formatted = new Decimal(amount0Formatted).mul(new Decimal(price));\n  \n  return parseTokenAmount(amount1Formatted.toString(), decimals1);\n}\n\n/**\n * Computes the equivalent token0 amount for a given token1 amount at current price\n * @param amount1 Token1 amount (raw) \n * @param sqrtPriceX96 Current sqrt price\n * @param decimals0 Token0 decimals\n * @param decimals1 Token1 decimals\n * @returns Equivalent token0 amount (raw) as string\n */\nexport function getEquivalentToken0Amount(\n  amount1: string,\n  sqrtPriceX96: string,\n  decimals0: number,\n  decimals1: number\n): string {\n  const price = sqrtPriceX96ToPrice(sqrtPriceX96, decimals0, decimals1);\n  const amount1Formatted = formatTokenAmount(amount1, decimals1);\n  const amount0Formatted = new Decimal(amount1Formatted).div(new Decimal(price));\n  \n  return parseTokenAmount(amount0Formatted.toString(), decimals0);\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0b722634456ec9121f7b66c9f14ee1485f99b493"},"/home/runner/work/jit/jit/src/strategy/jit_planner.ts":{"path":"/home/runner/work/jit/jit/src/strategy/jit_planner.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":146}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":38}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":22},"end":{"line":11,"column":52}},"9":{"start":{"line":13,"column":0},"end":{"line":16,"column":3}},"10":{"start":{"line":26,"column":4},"end":{"line":99,"column":5}},"11":{"start":{"line":28,"column":28},"end":{"line":28,"column":78}},"12":{"start":{"line":29,"column":27},"end":{"line":29,"column":68}},"13":{"start":{"line":30,"column":28},"end":{"line":30,"column":93}},"14":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"15":{"start":{"line":32,"column":12},"end":{"line":32,"column":24}},"16":{"start":{"line":35,"column":28},"end":{"line":35,"column":48}},"17":{"start":{"line":36,"column":30},"end":{"line":36,"column":79}},"18":{"start":{"line":37,"column":41},"end":{"line":37,"column":178}},"19":{"start":{"line":39,"column":30},"end":{"line":39,"column":59}},"20":{"start":{"line":40,"column":33},"end":{"line":40,"column":78}},"21":{"start":{"line":43,"column":34},"end":{"line":45,"column":64}},"22":{"start":{"line":47,"column":37},"end":{"line":47,"column":202}},"23":{"start":{"line":49,"column":28},"end":{"line":49,"column":190}},"24":{"start":{"line":50,"column":27},"end":{"line":50,"column":48}},"25":{"start":{"line":51,"column":33},"end":{"line":53,"column":23}},"26":{"start":{"line":54,"column":29},"end":{"line":54,"column":87}},"27":{"start":{"line":56,"column":24},"end":{"line":56,"column":83}},"28":{"start":{"line":57,"column":33},"end":{"line":57,"column":76}},"29":{"start":{"line":58,"column":29},"end":{"line":58,"column":63}},"30":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"31":{"start":{"line":61,"column":12},"end":{"line":61,"column":24}},"32":{"start":{"line":64,"column":31},"end":{"line":67,"column":28}},"33":{"start":{"line":68,"column":37},"end":{"line":68,"column":133}},"34":{"start":{"line":70,"column":38},"end":{"line":72,"column":45}},"35":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"36":{"start":{"line":75,"column":12},"end":{"line":75,"column":24}},"37":{"start":{"line":78,"column":21},"end":{"line":87,"column":9}},"38":{"start":{"line":88,"column":8},"end":{"line":93,"column":11}},"39":{"start":{"line":94,"column":8},"end":{"line":94,"column":20}},"40":{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},"41":{"start":{"line":101,"column":0},"end":{"line":101,"column":26}},"42":{"start":{"line":110,"column":4},"end":{"line":134,"column":5}},"43":{"start":{"line":112,"column":30},"end":{"line":112,"column":75}},"44":{"start":{"line":113,"column":8},"end":{"line":114,"column":25}},"45":{"start":{"line":114,"column":12},"end":{"line":114,"column":25}},"46":{"start":{"line":116,"column":28},"end":{"line":116,"column":78}},"47":{"start":{"line":117,"column":27},"end":{"line":117,"column":68}},"48":{"start":{"line":118,"column":28},"end":{"line":118,"column":71}},"49":{"start":{"line":119,"column":8},"end":{"line":120,"column":25}},"50":{"start":{"line":120,"column":12},"end":{"line":120,"column":25}},"51":{"start":{"line":122,"column":32},"end":{"line":122,"column":58}},"52":{"start":{"line":123,"column":8},"end":{"line":124,"column":25}},"53":{"start":{"line":124,"column":12},"end":{"line":124,"column":25}},"54":{"start":{"line":126,"column":25},"end":{"line":126,"column":50}},"55":{"start":{"line":127,"column":38},"end":{"line":127,"column":41}},"56":{"start":{"line":128,"column":8},"end":{"line":129,"column":25}},"57":{"start":{"line":129,"column":12},"end":{"line":129,"column":25}},"58":{"start":{"line":130,"column":8},"end":{"line":130,"column":20}},"59":{"start":{"line":133,"column":8},"end":{"line":133,"column":21}},"60":{"start":{"line":136,"column":0},"end":{"line":136,"column":50}},"61":{"start":{"line":145,"column":4},"end":{"line":162,"column":5}},"62":{"start":{"line":146,"column":28},"end":{"line":146,"column":78}},"63":{"start":{"line":147,"column":24},"end":{"line":147,"column":83}},"64":{"start":{"line":149,"column":33},"end":{"line":151,"column":47}},"65":{"start":{"line":153,"column":29},"end":{"line":154,"column":68}},"66":{"start":{"line":155,"column":29},"end":{"line":155,"column":63}},"67":{"start":{"line":156,"column":8},"end":{"line":158,"column":19}},"68":{"start":{"line":161,"column":8},"end":{"line":161,"column":20}},"69":{"start":{"line":164,"column":0},"end":{"line":164,"column":50}},"70":{"start":{"line":173,"column":4},"end":{"line":189,"column":5}},"71":{"start":{"line":174,"column":27},"end":{"line":174,"column":66}},"72":{"start":{"line":175,"column":33},"end":{"line":176,"column":22}},"73":{"start":{"line":178,"column":29},"end":{"line":178,"column":32}},"74":{"start":{"line":180,"column":29},"end":{"line":180,"column":32}},"75":{"start":{"line":181,"column":34},"end":{"line":181,"column":62}},"76":{"start":{"line":182,"column":31},"end":{"line":182,"column":65}},"77":{"start":{"line":183,"column":35},"end":{"line":183,"column":94}},"78":{"start":{"line":184,"column":35},"end":{"line":184,"column":69}},"79":{"start":{"line":185,"column":8},"end":{"line":185,"column":71}},"80":{"start":{"line":188,"column":8},"end":{"line":188,"column":19}},"81":{"start":{"line":191,"column":0},"end":{"line":191,"column":54}},"82":{"start":{"line":198,"column":19},"end":{"line":198,"column":29}},"83":{"start":{"line":199,"column":4},"end":{"line":210,"column":6}},"84":{"start":{"line":212,"column":0},"end":{"line":212,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"planJit","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":16}},"loc":{"start":{"line":25,"column":61},"end":{"line":100,"column":1}},"line":25},"2":{"name":"isViableOpportunity","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":28}},"loc":{"start":{"line":109,"column":62},"end":{"line":135,"column":1}},"line":109},"3":{"name":"quickProfitEstimate","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":28}},"loc":{"start":{"line":144,"column":62},"end":{"line":163,"column":1}},"line":144},"4":{"name":"calculatePositionSize","decl":{"start":{"line":172,"column":9},"end":{"line":172,"column":30}},"loc":{"start":{"line":172,"column":65},"end":{"line":190,"column":1}},"line":172},"5":{"name":"loadStrategyConfig","decl":{"start":{"line":197,"column":9},"end":{"line":197,"column":27}},"loc":{"start":{"line":197,"column":40},"end":{"line":211,"column":1}},"line":197}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":30,"column":28},"end":{"line":30,"column":93}},"type":"binary-expr","locations":[{"start":{"line":30,"column":28},"end":{"line":30,"column":66}},{"start":{"line":30,"column":70},"end":{"line":30,"column":93}}],"line":30},"4":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{},"end":{}}],"line":31},"5":{"loc":{"start":{"line":36,"column":30},"end":{"line":36,"column":79}},"type":"cond-expr","locations":[{"start":{"line":36,"column":66},"end":{"line":36,"column":70}},{"start":{"line":36,"column":73},"end":{"line":36,"column":79}}],"line":36},"6":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{},"end":{}}],"line":60},"7":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{},"end":{}}],"line":74},"8":{"loc":{"start":{"line":113,"column":8},"end":{"line":114,"column":25}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":114,"column":25}},{"start":{},"end":{}}],"line":113},"9":{"loc":{"start":{"line":118,"column":28},"end":{"line":118,"column":71}},"type":"binary-expr","locations":[{"start":{"line":118,"column":28},"end":{"line":118,"column":66}},{"start":{"line":118,"column":70},"end":{"line":118,"column":71}}],"line":118},"10":{"loc":{"start":{"line":119,"column":8},"end":{"line":120,"column":25}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":120,"column":25}},{"start":{},"end":{}}],"line":119},"11":{"loc":{"start":{"line":123,"column":8},"end":{"line":124,"column":25}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":124,"column":25}},{"start":{},"end":{}}],"line":123},"12":{"loc":{"start":{"line":128,"column":8},"end":{"line":129,"column":25}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":129,"column":25}},{"start":{},"end":{}}],"line":128},"13":{"loc":{"start":{"line":156,"column":15},"end":{"line":158,"column":18}},"type":"cond-expr","locations":[{"start":{"line":157,"column":14},"end":{"line":157,"column":37}},{"start":{"line":158,"column":14},"end":{"line":158,"column":18}}],"line":156}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":1,"83":1,"84":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[1,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/strategy/jit_planner.ts","sources":["/home/runner/work/jit/jit/src/strategy/jit_planner.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\nimport { PoolState } from '../sim/pool_state';\nimport { JitPlan, SwapEvent, PriceFeed } from '../sim/execution_sim';\nimport { selectRange } from './range_selection';\nimport { estimateInclusionProbability, scorePlan } from './scoring';\nimport { liquidityForAmounts, getAmountsFromLiquidity } from '../math/liquidity_math';\nimport { calculateUsdValue } from '../math/price_utils';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Strategy configuration loaded from config file\n */\nexport interface StrategyConfig {\n  /** Minimum swap USD value by fee tier */\n  minSwapUsdByFeeTier: Record<string, number>;\n  /** Minimum net profit in USD */\n  minNetProfitUsd: number;\n  /** Gas estimate in USD */\n  gasEstimateUsd: number;\n  /** Default capture fraction */\n  captureFractionDefault: number;\n  /** Default inclusion probability */\n  inclusionProbabilityDefault: number;\n  /** Default tick width settings */\n  tickWidthDefaults: {\n    narrow: number;\n    medium: number;\n    wide: number;\n  };\n  /** Flashloan fee in basis points */\n  flashloanFeeBps: number;\n  /** Maximum slippage in basis points */\n  maxSlippageBps: number;\n  /** Competition factor multiplier */\n  competitionFactor: number;\n  /** Risk adjustment factor */\n  riskAdjustmentFactor: number;\n}\n\n/**\n * Swap size estimation from mempool transaction\n */\nexport interface SwapEstimate {\n  /** Estimated USD size of the swap */\n  swapSizeUsd: string;\n  /** Estimated amount in */\n  amountIn: string;\n  /** Token being swapped in */\n  tokenIn: 'token0' | 'token1';\n  /** Estimated gas price */\n  gasPriceGwei: number;\n  /** Priority fee for inclusion */\n  priorityFeeGwei: number;\n  /** Block deadline for the swap */\n  blockDeadline: number;\n}\n\n/**\n * Core JIT planning logic\n * @param poolState Current pool state\n * @param swapEstimate Candidate swap details\n * @param priceFeed Current token prices\n * @param config Strategy configuration\n * @returns JIT plan if profitable, null otherwise\n */\nexport function planJit(\n  poolState: PoolState,\n  swapEstimate: SwapEstimate,\n  priceFeed: PriceFeed,\n  config: StrategyConfig\n): JitPlan | null {\n  try {\n    // 1. Check minimum swap size requirements\n    const swapSizeUsd = new Decimal(swapEstimate.swapSizeUsd);\n    const feeTierStr = (poolState.config.fee / 10000).toString(); // Convert from bps to decimal string\n    const minSwapSize = config.minSwapUsdByFeeTier[feeTierStr] || Number.MAX_SAFE_INTEGER;\n    \n    if (swapSizeUsd.lt(minSwapSize)) {\n      return null; // Swap too small for this fee tier\n    }\n\n    // 2. Determine optimal tick range using range selection\n    const currentTick = poolState.slot0.tick;\n    const swapDirection = swapEstimate.tokenIn === 'token0' ? 'up' : 'down'; // Simplification\n    \n    const { lowerTick, upperTick } = selectRange(\n      currentTick,\n      poolState.config.tickSpacing,\n      swapSizeUsd.toString(),\n      poolState.liquidity,\n      swapDirection\n    );\n\n    // 3. Calculate required liquidity for target capture fraction\n    const targetCapture = config.captureFractionDefault;\n    const currentLiquidity = new Decimal(poolState.liquidity);\n    \n    // To capture X% of fees: L_jit / (L_current + L_jit) = X\n    // Solving: L_jit = X * L_current / (1 - X)\n    const requiredLiquidity = currentLiquidity\n      .mul(targetCapture)\n      .div(new Decimal(1).sub(targetCapture));\n\n    // 4. Calculate token amounts needed for the liquidity\n    const { amount0, amount1 } = getAmountsFromLiquidity(\n      requiredLiquidity.toString(),\n      poolState.slot0.sqrtPriceX96,\n      poolState.slot0.sqrtPriceX96,\n      poolState.slot0.sqrtPriceX96\n    );\n\n    // 5. Calculate costs\n    const providedUsd = calculateUsdValue(\n      amount0,\n      amount1,\n      poolState.config.decimals0,\n      poolState.config.decimals1,\n      priceFeed.token0PriceUsd,\n      priceFeed.token1PriceUsd\n    );\n\n    const gasCostUsd = config.gasEstimateUsd;\n    const flashloanCostUsd = new Decimal(providedUsd)\n      .mul(config.flashloanFeeBps)\n      .div(10000);\n    const totalCostUsd = new Decimal(gasCostUsd).add(flashloanCostUsd);\n\n    // 6. Estimate fee capture\n    const feeTier = new Decimal(poolState.config.fee).div(1000000); // Convert from bps to decimal\n    const estimatedFeesUsd = swapSizeUsd.mul(feeTier).mul(targetCapture);\n\n    const netProfitUsd = estimatedFeesUsd.sub(totalCostUsd);\n\n    // 7. Check minimum profit requirement\n    if (netProfitUsd.lt(config.minNetProfitUsd)) {\n      return null;\n    }\n\n    // 8. Estimate inclusion probability\n    const priorityFeeUsd = new Decimal(swapEstimate.priorityFeeGwei)\n      .mul(21000) // Approximate gas for priority\n      .mul(priceFeed.token0PriceUsd) // Assuming ETH price in token0PriceUsd\n      .div(1000000000); // Convert from gwei to ETH\n\n    const inclusionProbability = estimateInclusionProbability(\n      priorityFeeUsd.toString(),\n      config.competitionFactor\n    );\n\n    // Apply risk adjustment to expected profits\n    const riskAdjustedProfitUsd = netProfitUsd\n      .mul(inclusionProbability)\n      .mul(config.riskAdjustmentFactor);\n\n    // Final profit check with risk adjustment\n    if (riskAdjustedProfitUsd.lt(config.minNetProfitUsd)) {\n      return null;\n    }\n\n    // 9. Calculate final score\n    const plan: JitPlan = {\n      lowerTick,\n      upperTick,\n      amount0,\n      amount1,\n      liquidity: requiredLiquidity.toString(),\n      expectedFeeUsd: estimatedFeesUsd.toString(),\n      expectedNetUsd: riskAdjustedProfitUsd.toString(),\n      score: 0, // Will be calculated next\n    };\n\n    plan.score = scorePlan(plan, {\n      swapSizeUsd: swapEstimate.swapSizeUsd,\n      inclusionProbability,\n      gasCompetition: config.competitionFactor,\n      poolLiquidity: poolState.liquidity,\n    });\n\n    return plan;\n\n  } catch (error) {\n    // Log error in production, return null for now\n    return null;\n  }\n}\n\n/**\n * Validates if a JIT opportunity meets basic criteria\n * @param poolState Current pool state\n * @param swapEstimate Swap details\n * @param config Strategy configuration\n * @returns True if opportunity is worth evaluating\n */\nexport function isViableOpportunity(\n  poolState: PoolState,\n  swapEstimate: SwapEstimate,\n  config: StrategyConfig\n): boolean {\n  try {\n    // Check pool has enough liquidity for meaningful JIT\n    const poolLiquidity = new Decimal(poolState.liquidity);\n    if (poolLiquidity.lte(0)) return false;\n\n    // Check swap size meets minimum\n    const swapSizeUsd = new Decimal(swapEstimate.swapSizeUsd);\n    const feeTierStr = (poolState.config.fee / 10000).toString();\n    const minSwapSize = config.minSwapUsdByFeeTier[feeTierStr] || 0;\n    \n    if (swapSizeUsd.lt(minSwapSize)) return false;\n\n    // Check we have enough time to execute (rough heuristic)\n    const blocksRemaining = swapEstimate.blockDeadline;\n    if (blocksRemaining < 1) return false; // Need at least 1 block\n\n    // Check gas price isn't too high (would eat profits)\n    const gasPrice = swapEstimate.gasPriceGwei;\n    const maxProfitableGasPrice = 200; // Conservative limit in gwei\n    if (gasPrice > maxProfitableGasPrice) return false;\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Quick profit estimation without full planning\n * @param poolState Current pool state\n * @param swapEstimate Swap details\n * @param config Strategy configuration\n * @returns Estimated profit in USD, or null if not profitable\n */\nexport function quickProfitEstimate(\n  poolState: PoolState,\n  swapEstimate: SwapEstimate,\n  config: StrategyConfig\n): string | null {\n  try {\n    const swapSizeUsd = new Decimal(swapEstimate.swapSizeUsd);\n    const feeTier = new Decimal(poolState.config.fee).div(1000000);\n    \n    // Estimate fees with default capture fraction\n    const estimatedFeesUsd = swapSizeUsd\n      .mul(feeTier)\n      .mul(config.captureFractionDefault);\n\n    // Rough cost estimate\n    const totalCostUsd = new Decimal(config.gasEstimateUsd)\n      .add(swapSizeUsd.mul(config.flashloanFeeBps).div(10000));\n\n    const netProfitUsd = estimatedFeesUsd.sub(totalCostUsd);\n\n    return netProfitUsd.gte(config.minNetProfitUsd) \n      ? netProfitUsd.toString() \n      : null;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Determines the optimal position size based on available capital\n * @param maxCapitalUsd Maximum capital available\n * @param poolState Current pool state  \n * @param config Strategy configuration\n * @returns Recommended position multiplier (0-1)\n */\nexport function calculatePositionSize(\n  maxCapitalUsd: string,\n  poolState: PoolState,\n  config: StrategyConfig\n): number {\n  try {\n    const maxCapital = new Decimal(maxCapitalUsd);\n    const poolLiquidityUsd = new Decimal(poolState.liquidity)\n      .mul(1000); // Rough conversion, would need proper price calculation\n    \n    // Don't risk more than 10% of capital on single position\n    const maxRiskRatio = 0.1;\n    \n    // Don't add more than 50% of current pool liquidity\n    const maxPoolRatio = 0.5;\n    \n    const capitalConstraint = maxCapital.mul(maxRiskRatio);\n    const poolConstraint = poolLiquidityUsd.mul(maxPoolRatio);\n    \n    const recommendedCapital = Decimal.min(capitalConstraint, poolConstraint);\n    const positionMultiplier = recommendedCapital.div(maxCapital);\n    \n    return Math.min(1, Math.max(0, positionMultiplier.toNumber()));\n  } catch {\n    return 0.1; // Conservative default\n  }\n}\n\n/**\n * Loads strategy configuration from JSON\n * @param configPath Path to strategy config file\n * @returns Parsed strategy configuration\n */\nexport function loadStrategyConfig(configData: unknown): StrategyConfig {\n  const config = configData as Record<string, unknown>;\n  \n  return {\n    minSwapUsdByFeeTier: config.minSwapUsdByFeeTier as Record<string, number>,\n    minNetProfitUsd: config.minNetProfitUsd as number,\n    gasEstimateUsd: config.gasEstimateUsd as number,\n    captureFractionDefault: config.captureFractionDefault as number,\n    inclusionProbabilityDefault: config.inclusionProbabilityDefault as number,\n    tickWidthDefaults: config.tickWidthDefaults as {\n      narrow: number;\n      medium: number;\n      wide: number;\n    },\n    flashloanFeeBps: config.flashloanFeeBps as number,\n    maxSlippageBps: config.maxSlippageBps as number,\n    competitionFactor: config.competitionFactor as number,\n    riskAdjustmentFactor: config.riskAdjustmentFactor as number,\n  };\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"18035e2c42c33bfa52c0f954e2ae20d0c342135f"},"/home/runner/work/jit/jit/src/strategy/range_selection.ts":{"path":"/home/runner/work/jit/jit/src/strategy/range_selection.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":87}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":48}},"6":{"start":{"line":10,"column":0},"end":{"line":13,"column":3}},"7":{"start":{"line":17,"column":28},"end":{"line":21,"column":1}},"8":{"start":{"line":32,"column":21},"end":{"line":32,"column":58}},"9":{"start":{"line":33,"column":22},"end":{"line":33,"column":62}},"10":{"start":{"line":35,"column":26},"end":{"line":35,"column":69}},"11":{"start":{"line":37,"column":22},"end":{"line":37,"column":66}},"12":{"start":{"line":39,"column":26},"end":{"line":39,"column":93}},"13":{"start":{"line":41,"column":37},"end":{"line":41,"column":107}},"14":{"start":{"line":43,"column":23},"end":{"line":43,"column":94}},"15":{"start":{"line":44,"column":4},"end":{"line":49,"column":6}},"16":{"start":{"line":51,"column":0},"end":{"line":51,"column":34}},"17":{"start":{"line":57,"column":29},"end":{"line":57,"column":52}},"18":{"start":{"line":59,"column":4},"end":{"line":67,"column":5}},"19":{"start":{"line":60,"column":8},"end":{"line":60,"column":24}},"20":{"start":{"line":62,"column":9},"end":{"line":67,"column":5}},"21":{"start":{"line":63,"column":8},"end":{"line":63,"column":24}},"22":{"start":{"line":66,"column":8},"end":{"line":66,"column":22}},"23":{"start":{"line":73,"column":23},"end":{"line":73,"column":52}},"24":{"start":{"line":74,"column":4},"end":{"line":74,"column":36}},"25":{"start":{"line":80,"column":27},"end":{"line":80,"column":30}},"26":{"start":{"line":82,"column":4},"end":{"line":85,"column":5}},"27":{"start":{"line":84,"column":8},"end":{"line":84,"column":32}},"28":{"start":{"line":87,"column":22},"end":{"line":87,"column":45}},"29":{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},"30":{"start":{"line":90,"column":8},"end":{"line":90,"column":32}},"31":{"start":{"line":92,"column":9},"end":{"line":95,"column":5}},"32":{"start":{"line":94,"column":8},"end":{"line":94,"column":32}},"33":{"start":{"line":97,"column":31},"end":{"line":97,"column":64}},"34":{"start":{"line":98,"column":4},"end":{"line":101,"column":5}},"35":{"start":{"line":100,"column":8},"end":{"line":100,"column":32}},"36":{"start":{"line":102,"column":4},"end":{"line":102,"column":52}},"37":{"start":{"line":110,"column":4},"end":{"line":125,"column":5}},"38":{"start":{"line":112,"column":8},"end":{"line":112,"column":57}},"39":{"start":{"line":113,"column":8},"end":{"line":113,"column":57}},"40":{"start":{"line":115,"column":9},"end":{"line":125,"column":5}},"41":{"start":{"line":117,"column":8},"end":{"line":117,"column":57}},"42":{"start":{"line":118,"column":8},"end":{"line":118,"column":57}},"43":{"start":{"line":122,"column":26},"end":{"line":122,"column":47}},"44":{"start":{"line":123,"column":8},"end":{"line":123,"column":43}},"45":{"start":{"line":124,"column":8},"end":{"line":124,"column":43}},"46":{"start":{"line":127,"column":4},"end":{"line":127,"column":75}},"47":{"start":{"line":128,"column":4},"end":{"line":128,"column":75}},"48":{"start":{"line":130,"column":21},"end":{"line":130,"column":36}},"49":{"start":{"line":131,"column":4},"end":{"line":138,"column":5}},"50":{"start":{"line":132,"column":27},"end":{"line":132,"column":79}},"51":{"start":{"line":133,"column":8},"end":{"line":133,"column":32}},"52":{"start":{"line":134,"column":8},"end":{"line":134,"column":32}},"53":{"start":{"line":136,"column":8},"end":{"line":136,"column":79}},"54":{"start":{"line":137,"column":8},"end":{"line":137,"column":79}},"55":{"start":{"line":139,"column":4},"end":{"line":139,"column":36}},"56":{"start":{"line":145,"column":21},"end":{"line":145,"column":24}},"57":{"start":{"line":147,"column":27},"end":{"line":151,"column":5}},"58":{"start":{"line":152,"column":4},"end":{"line":152,"column":42}},"59":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"60":{"start":{"line":155,"column":8},"end":{"line":155,"column":26}},"61":{"start":{"line":158,"column":22},"end":{"line":158,"column":45}},"62":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"63":{"start":{"line":160,"column":8},"end":{"line":160,"column":26}},"64":{"start":{"line":162,"column":9},"end":{"line":164,"column":5}},"65":{"start":{"line":163,"column":8},"end":{"line":163,"column":26}},"66":{"start":{"line":166,"column":27},"end":{"line":166,"column":73}},"67":{"start":{"line":167,"column":4},"end":{"line":167,"column":47}},"68":{"start":{"line":169,"column":4},"end":{"line":169,"column":53}},"69":{"start":{"line":180,"column":24},"end":{"line":180,"column":25}},"70":{"start":{"line":181,"column":24},"end":{"line":181,"column":25}},"71":{"start":{"line":182,"column":22},"end":{"line":182,"column":23}},"72":{"start":{"line":183,"column":24},"end":{"line":183,"column":25}},"73":{"start":{"line":184,"column":27},"end":{"line":184,"column":35}},"74":{"start":{"line":185,"column":4},"end":{"line":196,"column":5}},"75":{"start":{"line":186,"column":22},"end":{"line":186,"column":116}},"76":{"start":{"line":187,"column":23},"end":{"line":187,"column":43}},"77":{"start":{"line":188,"column":8},"end":{"line":188,"column":50}},"78":{"start":{"line":189,"column":8},"end":{"line":189,"column":50}},"79":{"start":{"line":190,"column":8},"end":{"line":190,"column":51}},"80":{"start":{"line":191,"column":8},"end":{"line":191,"column":30}},"81":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"82":{"start":{"line":194,"column":12},"end":{"line":194,"column":46}},"83":{"start":{"line":197,"column":4},"end":{"line":200,"column":5}},"84":{"start":{"line":199,"column":8},"end":{"line":199,"column":89}},"85":{"start":{"line":201,"column":23},"end":{"line":201,"column":111}},"86":{"start":{"line":202,"column":23},"end":{"line":202,"column":111}},"87":{"start":{"line":203,"column":28},"end":{"line":203,"column":55}},"88":{"start":{"line":204,"column":4},"end":{"line":209,"column":6}},"89":{"start":{"line":211,"column":0},"end":{"line":211,"column":58}},"90":{"start":{"line":220,"column":4},"end":{"line":246,"column":5}},"91":{"start":{"line":222,"column":8},"end":{"line":223,"column":25}},"92":{"start":{"line":223,"column":12},"end":{"line":223,"column":25}},"93":{"start":{"line":225,"column":8},"end":{"line":226,"column":25}},"94":{"start":{"line":226,"column":12},"end":{"line":226,"column":25}},"95":{"start":{"line":227,"column":8},"end":{"line":228,"column":25}},"96":{"start":{"line":228,"column":12},"end":{"line":228,"column":25}},"97":{"start":{"line":230,"column":25},"end":{"line":230,"column":40}},"98":{"start":{"line":231,"column":8},"end":{"line":232,"column":25}},"99":{"start":{"line":232,"column":12},"end":{"line":232,"column":25}},"100":{"start":{"line":234,"column":28},"end":{"line":234,"column":45}},"101":{"start":{"line":235,"column":8},"end":{"line":236,"column":25}},"102":{"start":{"line":236,"column":12},"end":{"line":236,"column":25}},"103":{"start":{"line":237,"column":8},"end":{"line":238,"column":25}},"104":{"start":{"line":238,"column":12},"end":{"line":238,"column":25}},"105":{"start":{"line":240,"column":8},"end":{"line":241,"column":25}},"106":{"start":{"line":241,"column":12},"end":{"line":241,"column":25}},"107":{"start":{"line":242,"column":8},"end":{"line":242,"column":20}},"108":{"start":{"line":245,"column":8},"end":{"line":245,"column":21}},"109":{"start":{"line":248,"column":0},"end":{"line":248,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"selectRange","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":20}},"loc":{"start":{"line":31,"column":98},"end":{"line":50,"column":1}},"line":31},"2":{"name":"determineRangeCategory","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":31}},"loc":{"start":{"line":55,"column":53},"end":{"line":68,"column":1}},"line":55},"3":{"name":"getBaseTickWidth","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":25}},"loc":{"start":{"line":72,"column":49},"end":{"line":75,"column":1}},"line":72},"4":{"name":"adjustWidthForConditions","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":33}},"loc":{"start":{"line":79,"column":77},"end":{"line":103,"column":1}},"line":79},"5":{"name":"calculateTickBounds","decl":{"start":{"line":107,"column":9},"end":{"line":107,"column":28}},"loc":{"start":{"line":107,"column":72},"end":{"line":140,"column":1}},"line":107},"6":{"name":"calculateRangeConfidence","decl":{"start":{"line":144,"column":9},"end":{"line":144,"column":33}},"loc":{"start":{"line":144,"column":76},"end":{"line":170,"column":1}},"line":144},"7":{"name":"selectRangeForScenarios","decl":{"start":{"line":178,"column":9},"end":{"line":178,"column":32}},"loc":{"start":{"line":178,"column":85},"end":{"line":210,"column":1}},"line":178},"8":{"name":"validateRange","decl":{"start":{"line":219,"column":9},"end":{"line":219,"column":22}},"loc":{"start":{"line":219,"column":55},"end":{"line":247,"column":1}},"line":219}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":31,"column":75},"end":{"line":31,"column":96}},"type":"default-arg","locations":[{"start":{"line":31,"column":87},"end":{"line":31,"column":96}}],"line":31},"4":{"loc":{"start":{"line":59,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":67,"column":5}},{"start":{"line":62,"column":9},"end":{"line":67,"column":5}}],"line":59},"5":{"loc":{"start":{"line":62,"column":9},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":9},"end":{"line":67,"column":5}},{"start":{"line":65,"column":9},"end":{"line":67,"column":5}}],"line":62},"6":{"loc":{"start":{"line":82,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":85,"column":5}},{"start":{},"end":{}}],"line":82},"7":{"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":50}},"type":"binary-expr","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":26}},{"start":{"line":82,"column":30},"end":{"line":82,"column":50}}],"line":82},"8":{"loc":{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},{"start":{"line":92,"column":9},"end":{"line":95,"column":5}}],"line":88},"9":{"loc":{"start":{"line":92,"column":9},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":9},"end":{"line":95,"column":5}},{"start":{},"end":{}}],"line":92},"10":{"loc":{"start":{"line":98,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":98},"11":{"loc":{"start":{"line":110,"column":4},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":125,"column":5}},{"start":{"line":115,"column":9},"end":{"line":125,"column":5}}],"line":110},"12":{"loc":{"start":{"line":115,"column":9},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":115,"column":9},"end":{"line":125,"column":5}},{"start":{"line":120,"column":9},"end":{"line":125,"column":5}}],"line":115},"13":{"loc":{"start":{"line":131,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":138,"column":5}},{"start":{},"end":{}}],"line":131},"14":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{},"end":{}}],"line":154},"15":{"loc":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},{"start":{"line":162,"column":9},"end":{"line":164,"column":5}}],"line":159},"16":{"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":47}},"type":"binary-expr","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":26}},{"start":{"line":159,"column":30},"end":{"line":159,"column":47}}],"line":159},"17":{"loc":{"start":{"line":162,"column":9},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":162,"column":9},"end":{"line":164,"column":5}},{"start":{},"end":{}}],"line":162},"18":{"loc":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},{"start":{},"end":{}}],"line":193},"19":{"loc":{"start":{"line":197,"column":4},"end":{"line":200,"column":5}},"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":200,"column":5}},{"start":{},"end":{}}],"line":197},"20":{"loc":{"start":{"line":222,"column":8},"end":{"line":223,"column":25}},"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":223,"column":25}},{"start":{},"end":{}}],"line":222},"21":{"loc":{"start":{"line":225,"column":8},"end":{"line":226,"column":25}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":226,"column":25}},{"start":{},"end":{}}],"line":225},"22":{"loc":{"start":{"line":227,"column":8},"end":{"line":228,"column":25}},"type":"if","locations":[{"start":{"line":227,"column":8},"end":{"line":228,"column":25}},{"start":{},"end":{}}],"line":227},"23":{"loc":{"start":{"line":231,"column":8},"end":{"line":232,"column":25}},"type":"if","locations":[{"start":{"line":231,"column":8},"end":{"line":232,"column":25}},{"start":{},"end":{}}],"line":231},"24":{"loc":{"start":{"line":235,"column":8},"end":{"line":236,"column":25}},"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":236,"column":25}},{"start":{},"end":{}}],"line":235},"25":{"loc":{"start":{"line":237,"column":8},"end":{"line":238,"column":25}},"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":238,"column":25}},{"start":{},"end":{}}],"line":237},"26":{"loc":{"start":{"line":240,"column":8},"end":{"line":241,"column":25}},"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":241,"column":25}},{"start":{},"end":{}}],"line":240},"27":{"loc":{"start":{"line":240,"column":12},"end":{"line":240,"column":56}},"type":"binary-expr","locations":[{"start":{"line":240,"column":12},"end":{"line":240,"column":32}},{"start":{"line":240,"column":36},"end":{"line":240,"column":56}}],"line":240}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/strategy/range_selection.ts","sources":["/home/runner/work/jit/jit/src/strategy/range_selection.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\nimport { nearestUsableTick } from '../math/tick_math';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Range selection result\n */\nexport interface RangeSelection {\n  /** Lower tick of the range */\n  lowerTick: number;\n  /** Upper tick of the range */\n  upperTick: number;\n  /** Range width category */\n  category: 'narrow' | 'medium' | 'wide';\n  /** Confidence score for this range */\n  confidence: number;\n}\n\n/**\n * Swap direction for range selection\n */\nexport type SwapDirection = 'up' | 'down' | 'neutral';\n\n/**\n * Liquidity depth information\n */\nexport interface LiquidityDepth {\n  /** Current pool liquidity */\n  currentLiquidity: string;\n  /** Liquidity within 1% price range */\n  liquidityNear: string;\n  /** Liquidity within 5% price range */\n  liquidityMedium: string;\n  /** Average tick spacing utilization */\n  utilizationRatio: number;\n}\n\n/**\n * Default tick width configurations\n */\nconst DEFAULT_TICK_WIDTHS = {\n  narrow: 10,\n  medium: 20,\n  wide: 40,\n};\n\n/**\n * Selects optimal tick range for JIT strategy\n * @param centerTick Current tick to center range around\n * @param tickSpacing Pool tick spacing\n * @param swapSizeUsd Size of incoming swap in USD\n * @param liquidityDepth Current liquidity depth information\n * @param direction Expected price movement direction\n * @returns Optimal tick range selection\n */\nexport function selectRange(\n  centerTick: number,\n  tickSpacing: number,\n  swapSizeUsd: string,\n  liquidityDepth: string,\n  direction: SwapDirection = 'neutral'\n): RangeSelection {\n  const swapSize = new Decimal(swapSizeUsd);\n  const liquidity = new Decimal(liquidityDepth);\n\n  // 1. Determine range width based on swap size and liquidity\n  const rangeCategory = determineRangeCategory(swapSize, liquidity);\n  \n  // 2. Calculate base tick width\n  const baseWidth = getBaseTickWidth(rangeCategory, tickSpacing);\n  \n  // 3. Adjust width based on direction and market conditions\n  const adjustedWidth = adjustWidthForConditions(\n    baseWidth,\n    direction,\n    swapSize,\n    liquidity\n  );\n  \n  // 4. Calculate tick range bounds\n  const { lowerTick, upperTick } = calculateTickBounds(\n    centerTick,\n    adjustedWidth,\n    tickSpacing,\n    direction\n  );\n  \n  // 5. Calculate confidence score\n  const confidence = calculateRangeConfidence(\n    rangeCategory,\n    swapSize,\n    liquidity,\n    direction\n  );\n\n  return {\n    lowerTick,\n    upperTick,\n    category: rangeCategory,\n    confidence,\n  };\n}\n\n/**\n * Determines range category based on swap size and liquidity\n */\nfunction determineRangeCategory(\n  swapSize: Decimal,\n  liquidity: Decimal\n): 'narrow' | 'medium' | 'wide' {\n  // Calculate liquidity utilization ratio\n  const utilizationRatio = swapSize.div(liquidity);\n  \n  // Thresholds for range categorization\n  if (utilizationRatio.lt(0.01)) {\n    return 'narrow'; // Small swap relative to liquidity - tight range\n  } else if (utilizationRatio.lt(0.05)) {\n    return 'medium'; // Medium swap - balanced range\n  } else {\n    return 'wide'; // Large swap - wider range for price impact\n  }\n}\n\n/**\n * Gets base tick width for range category\n */\nfunction getBaseTickWidth(\n  category: 'narrow' | 'medium' | 'wide',\n  tickSpacing: number\n): number {\n  const multiplier = DEFAULT_TICK_WIDTHS[category];\n  return multiplier * tickSpacing;\n}\n\n/**\n * Adjusts tick width based on market conditions\n */\nfunction adjustWidthForConditions(\n  baseWidth: number,\n  direction: SwapDirection,\n  swapSize: Decimal,\n  liquidity: Decimal\n): number {\n  let adjustmentFactor = 1.0;\n\n  // 1. Direction-based adjustment\n  if (direction === 'up' || direction === 'down') {\n    // Narrower range for directional moves (higher concentration)\n    adjustmentFactor *= 0.8;\n  }\n\n  // 2. Size-based adjustment\n  const sizeRatio = swapSize.div(liquidity);\n  if (sizeRatio.gt(0.1)) {\n    // Wider range for very large swaps\n    adjustmentFactor *= 1.5;\n  } else if (sizeRatio.lt(0.005)) {\n    // Tighter range for very small swaps\n    adjustmentFactor *= 0.7;\n  }\n\n  // 3. Liquidity-based adjustment\n  const liquidityThreshold = new Decimal(1000000); // $1M threshold\n  if (liquidity.lt(liquidityThreshold)) {\n    // Wider range in shallow pools\n    adjustmentFactor *= 1.2;\n  }\n\n  return Math.round(baseWidth * adjustmentFactor);\n}\n\n/**\n * Calculates actual tick bounds for the range\n */\nfunction calculateTickBounds(\n  centerTick: number,\n  width: number,\n  tickSpacing: number,\n  direction: SwapDirection\n): { lowerTick: number; upperTick: number } {\n  let lowerTick: number;\n  let upperTick: number;\n\n  if (direction === 'up') {\n    // Bias range upward for expected price increase\n    lowerTick = centerTick - Math.round(width * 0.3);\n    upperTick = centerTick + Math.round(width * 0.7);\n  } else if (direction === 'down') {\n    // Bias range downward for expected price decrease\n    lowerTick = centerTick - Math.round(width * 0.7);\n    upperTick = centerTick + Math.round(width * 0.3);\n  } else {\n    // Symmetric range for neutral direction\n    const halfWidth = Math.round(width / 2);\n    lowerTick = centerTick - halfWidth;\n    upperTick = centerTick + halfWidth;\n  }\n\n  // Align to tick spacing\n  lowerTick = nearestUsableTick(lowerTick, tickSpacing);\n  upperTick = nearestUsableTick(upperTick, tickSpacing);\n\n  // Ensure minimum range width\n  const minWidth = tickSpacing * 2;\n  if (upperTick - lowerTick < minWidth) {\n    const adjustment = Math.round((minWidth - (upperTick - lowerTick)) / 2);\n    lowerTick -= adjustment;\n    upperTick += adjustment;\n    \n    // Re-align after adjustment\n    lowerTick = nearestUsableTick(lowerTick, tickSpacing);\n    upperTick = nearestUsableTick(upperTick, tickSpacing);\n  }\n\n  return { lowerTick, upperTick };\n}\n\n/**\n * Calculates confidence score for range selection\n */\nfunction calculateRangeConfidence(\n  category: 'narrow' | 'medium' | 'wide',\n  swapSize: Decimal,\n  liquidity: Decimal,\n  direction: SwapDirection\n): number {\n  let confidence = 0.5; // Base confidence\n\n  // 1. Category-based confidence\n  const categoryScores = {\n    narrow: 0.8, // High confidence for focused ranges\n    medium: 0.7, // Good confidence for balanced ranges\n    wide: 0.6,   // Lower confidence for wide ranges\n  };\n  confidence = categoryScores[category];\n\n  // 2. Direction confidence adjustment\n  if (direction === 'neutral') {\n    confidence *= 0.9; // Slightly lower for uncertain direction\n  }\n\n  // 3. Size-to-liquidity ratio adjustment\n  const sizeRatio = swapSize.div(liquidity);\n  if (sizeRatio.gt(0.02) && sizeRatio.lt(0.1)) {\n    confidence *= 1.1; // Sweet spot for JIT\n  } else if (sizeRatio.gt(0.2)) {\n    confidence *= 0.8; // Very large swaps are riskier\n  }\n\n  // 4. Liquidity depth adjustment\n  const liquidityScore = Math.min(1, liquidity.div(1000000).toNumber()); // Normalize to $1M\n  confidence *= (0.7 + 0.3 * liquidityScore);\n\n  // Clamp confidence between 0.1 and 0.95\n  return Math.max(0.1, Math.min(0.95, confidence));\n}\n\n/**\n * Analyzes optimal range for multiple swap scenarios\n * @param centerTick Current tick\n * @param tickSpacing Pool tick spacing\n * @param scenarios Array of potential swap scenarios\n * @returns Best range selection across scenarios\n */\nexport function selectRangeForScenarios(\n  centerTick: number,\n  tickSpacing: number,\n  scenarios: Array<{\n    swapSizeUsd: string;\n    direction: SwapDirection;\n    probability: number;\n  }>,\n  liquidityDepth: string\n): RangeSelection {\n  // Weight each scenario by probability and calculate optimal range\n  let weightedLower = 0;\n  let weightedUpper = 0;\n  let totalWeight = 0;\n  let avgConfidence = 0;\n  let dominantCategory: 'narrow' | 'medium' | 'wide' = 'medium';\n\n  for (const scenario of scenarios) {\n    const range = selectRange(\n      centerTick,\n      tickSpacing,\n      scenario.swapSizeUsd,\n      liquidityDepth,\n      scenario.direction\n    );\n\n    const weight = scenario.probability;\n    weightedLower += range.lowerTick * weight;\n    weightedUpper += range.upperTick * weight;\n    avgConfidence += range.confidence * weight;\n    totalWeight += weight;\n\n    // Track dominant category\n    if (weight > totalWeight * 0.4) {\n      dominantCategory = range.category;\n    }\n  }\n\n  if (totalWeight === 0) {\n    // Fallback to neutral scenario\n    return selectRange(centerTick, tickSpacing, '100000', liquidityDepth, 'neutral');\n  }\n\n  const finalLower = nearestUsableTick(Math.round(weightedLower / totalWeight), tickSpacing);\n  const finalUpper = nearestUsableTick(Math.round(weightedUpper / totalWeight), tickSpacing);\n  const finalConfidence = avgConfidence / totalWeight;\n\n  return {\n    lowerTick: finalLower,\n    upperTick: finalUpper,\n    category: dominantCategory,\n    confidence: finalConfidence,\n  };\n}\n\n/**\n * Validates if a range selection is reasonable\n * @param range Range to validate\n * @param centerTick Current tick\n * @param tickSpacing Pool tick spacing\n * @returns True if range is valid\n */\nexport function validateRange(\n  range: RangeSelection,\n  centerTick: number,\n  tickSpacing: number\n): boolean {\n  try {\n    // Check basic validity\n    if (range.lowerTick >= range.upperTick) return false;\n    \n    // Check tick alignment\n    if (range.lowerTick % tickSpacing !== 0) return false;\n    if (range.upperTick % tickSpacing !== 0) return false;\n    \n    // Check minimum width\n    const minWidth = tickSpacing * 2;\n    if (range.upperTick - range.lowerTick < minWidth) return false;\n    \n    // Check reasonable distance from center\n    const maxDistance = tickSpacing * 200; // Reasonable max distance\n    if (Math.abs(range.lowerTick - centerTick) > maxDistance) return false;\n    if (Math.abs(range.upperTick - centerTick) > maxDistance) return false;\n    \n    // Check confidence is reasonable\n    if (range.confidence < 0 || range.confidence > 1) return false;\n    \n    return true;\n  } catch {\n    return false;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"634d25e816fd3bd7f4f6bae7d77c04960fb1442c"},"/home/runner/work/jit/jit/src/strategy/scoring.ts":{"path":"/home/runner/work/jit/jit/src/strategy/scoring.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":214}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":0},"end":{"line":12,"column":3}},"6":{"start":{"line":16,"column":32},"end":{"line":21,"column":1}},"7":{"start":{"line":30,"column":4},"end":{"line":46,"column":5}},"8":{"start":{"line":31,"column":28},"end":{"line":31,"column":68}},"9":{"start":{"line":32,"column":28},"end":{"line":32,"column":81}},"10":{"start":{"line":35,"column":30},"end":{"line":35,"column":58}},"11":{"start":{"line":36,"column":27},"end":{"line":36,"column":66}},"12":{"start":{"line":38,"column":25},"end":{"line":38,"column":57}},"13":{"start":{"line":39,"column":24},"end":{"line":39,"column":42}},"14":{"start":{"line":40,"column":28},"end":{"line":41,"column":68}},"15":{"start":{"line":42,"column":8},"end":{"line":42,"column":53}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":37}},"17":{"start":{"line":48,"column":0},"end":{"line":48,"column":68}},"18":{"start":{"line":56,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":58,"column":35},"end":{"line":58,"column":77}},"20":{"start":{"line":60,"column":26},"end":{"line":60,"column":59}},"21":{"start":{"line":62,"column":31},"end":{"line":62,"column":69}},"22":{"start":{"line":64,"column":33},"end":{"line":64,"column":73}},"23":{"start":{"line":66,"column":31},"end":{"line":69,"column":35}},"24":{"start":{"line":71,"column":39},"end":{"line":71,"column":84}},"25":{"start":{"line":73,"column":8},"end":{"line":73,"column":72}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":17}},"27":{"start":{"line":79,"column":0},"end":{"line":79,"column":30}},"28":{"start":{"line":84,"column":24},"end":{"line":84,"column":69}},"29":{"start":{"line":85,"column":21},"end":{"line":85,"column":66}},"30":{"start":{"line":87,"column":25},"end":{"line":87,"column":50}},"31":{"start":{"line":89,"column":29},"end":{"line":89,"column":51}},"32":{"start":{"line":90,"column":18},"end":{"line":90,"column":66}},"33":{"start":{"line":91,"column":4},"end":{"line":91,"column":43}},"34":{"start":{"line":97,"column":20},"end":{"line":97,"column":23}},"35":{"start":{"line":99,"column":26},"end":{"line":99,"column":66}},"36":{"start":{"line":100,"column":26},"end":{"line":100,"column":73}},"37":{"start":{"line":101,"column":27},"end":{"line":101,"column":59}},"38":{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},"39":{"start":{"line":103,"column":8},"end":{"line":103,"column":25}},"40":{"start":{"line":105,"column":9},"end":{"line":107,"column":5}},"41":{"start":{"line":106,"column":8},"end":{"line":106,"column":25}},"42":{"start":{"line":109,"column":23},"end":{"line":109,"column":54}},"43":{"start":{"line":110,"column":4},"end":{"line":115,"column":5}},"44":{"start":{"line":111,"column":8},"end":{"line":111,"column":25}},"45":{"start":{"line":113,"column":9},"end":{"line":115,"column":5}},"46":{"start":{"line":114,"column":8},"end":{"line":114,"column":25}},"47":{"start":{"line":117,"column":21},"end":{"line":117,"column":66}},"48":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"49":{"start":{"line":119,"column":8},"end":{"line":119,"column":25}},"50":{"start":{"line":122,"column":4},"end":{"line":125,"column":5}},"51":{"start":{"line":123,"column":28},"end":{"line":123,"column":85}},"52":{"start":{"line":124,"column":8},"end":{"line":124,"column":33}},"53":{"start":{"line":126,"column":4},"end":{"line":126,"column":47}},"54":{"start":{"line":132,"column":25},"end":{"line":132,"column":28}},"55":{"start":{"line":134,"column":4},"end":{"line":134,"column":51}},"56":{"start":{"line":136,"column":27},"end":{"line":136,"column":49}},"57":{"start":{"line":137,"column":4},"end":{"line":142,"column":5}},"58":{"start":{"line":138,"column":8},"end":{"line":138,"column":30}},"59":{"start":{"line":140,"column":9},"end":{"line":142,"column":5}},"60":{"start":{"line":141,"column":8},"end":{"line":141,"column":30}},"61":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"62":{"start":{"line":147,"column":26},"end":{"line":147,"column":78}},"63":{"start":{"line":148,"column":8},"end":{"line":148,"column":46}},"64":{"start":{"line":150,"column":4},"end":{"line":150,"column":52}},"65":{"start":{"line":156,"column":27},"end":{"line":156,"column":30}},"66":{"start":{"line":158,"column":24},"end":{"line":158,"column":69}},"67":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"68":{"start":{"line":160,"column":8},"end":{"line":160,"column":32}},"69":{"start":{"line":162,"column":9},"end":{"line":164,"column":5}},"70":{"start":{"line":163,"column":8},"end":{"line":163,"column":33}},"71":{"start":{"line":166,"column":21},"end":{"line":166,"column":66}},"72":{"start":{"line":167,"column":4},"end":{"line":172,"column":5}},"73":{"start":{"line":168,"column":8},"end":{"line":168,"column":32}},"74":{"start":{"line":170,"column":9},"end":{"line":172,"column":5}},"75":{"start":{"line":171,"column":8},"end":{"line":171,"column":32}},"76":{"start":{"line":174,"column":26},"end":{"line":174,"column":73}},"77":{"start":{"line":175,"column":31},"end":{"line":175,"column":65}},"78":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"79":{"start":{"line":177,"column":8},"end":{"line":177,"column":32}},"80":{"start":{"line":179,"column":4},"end":{"line":179,"column":54}},"81":{"start":{"line":188,"column":24},"end":{"line":188,"column":69}},"82":{"start":{"line":189,"column":26},"end":{"line":189,"column":54}},"83":{"start":{"line":190,"column":22},"end":{"line":190,"column":55}},"84":{"start":{"line":192,"column":26},"end":{"line":192,"column":71}},"85":{"start":{"line":193,"column":4},"end":{"line":193,"column":36}},"86":{"start":{"line":195,"column":0},"end":{"line":195,"column":56}},"87":{"start":{"line":204,"column":19},"end":{"line":204,"column":44}},"88":{"start":{"line":205,"column":19},"end":{"line":205,"column":44}},"89":{"start":{"line":206,"column":4},"end":{"line":206,"column":44}},"90":{"start":{"line":208,"column":0},"end":{"line":208,"column":36}},"91":{"start":{"line":217,"column":4},"end":{"line":223,"column":43}},"92":{"start":{"line":218,"column":22},"end":{"line":221,"column":5}},"93":{"start":{"line":222,"column":24},"end":{"line":222,"column":46}},"94":{"start":{"line":223,"column":24},"end":{"line":223,"column":41}},"95":{"start":{"line":225,"column":0},"end":{"line":225,"column":48}},"96":{"start":{"line":232,"column":4},"end":{"line":234,"column":5}},"97":{"start":{"line":233,"column":8},"end":{"line":233,"column":39}},"98":{"start":{"line":236,"column":24},"end":{"line":236,"column":93}},"99":{"start":{"line":236,"column":51},"end":{"line":236,"column":61}},"100":{"start":{"line":237,"column":4},"end":{"line":240,"column":6}},"101":{"start":{"line":242,"column":0},"end":{"line":242,"column":58}},"102":{"start":{"line":251,"column":20},"end":{"line":256,"column":5}},"103":{"start":{"line":258,"column":4},"end":{"line":261,"column":5}},"104":{"start":{"line":259,"column":8},"end":{"line":259,"column":28}},"105":{"start":{"line":260,"column":8},"end":{"line":260,"column":37}},"106":{"start":{"line":263,"column":4},"end":{"line":267,"column":5}},"107":{"start":{"line":264,"column":8},"end":{"line":264,"column":33}},"108":{"start":{"line":265,"column":8},"end":{"line":265,"column":35}},"109":{"start":{"line":266,"column":8},"end":{"line":266,"column":37}},"110":{"start":{"line":269,"column":18},"end":{"line":269,"column":71}},"111":{"start":{"line":269,"column":60},"end":{"line":269,"column":67}},"112":{"start":{"line":270,"column":4},"end":{"line":272,"column":7}},"113":{"start":{"line":271,"column":8},"end":{"line":271,"column":30}},"114":{"start":{"line":273,"column":4},"end":{"line":273,"column":19}},"115":{"start":{"line":275,"column":0},"end":{"line":275,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"estimateInclusionProbability","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":37}},"loc":{"start":{"line":29,"column":116},"end":{"line":47,"column":1}},"line":29},"2":{"name":"scorePlan","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":18}},"loc":{"start":{"line":55,"column":34},"end":{"line":78,"column":1}},"line":55},"3":{"name":"calculateProfitabilityScore","decl":{"start":{"line":83,"column":9},"end":{"line":83,"column":36}},"loc":{"start":{"line":83,"column":52},"end":{"line":92,"column":1}},"line":83},"4":{"name":"calculateRiskScore","decl":{"start":{"line":96,"column":9},"end":{"line":96,"column":27}},"loc":{"start":{"line":96,"column":43},"end":{"line":127,"column":1}},"line":96},"5":{"name":"calculateExecutionScore","decl":{"start":{"line":131,"column":9},"end":{"line":131,"column":32}},"loc":{"start":{"line":131,"column":48},"end":{"line":151,"column":1}},"line":131},"6":{"name":"calculateCompetitionScore","decl":{"start":{"line":155,"column":9},"end":{"line":155,"column":34}},"loc":{"start":{"line":155,"column":50},"end":{"line":180,"column":1}},"line":155},"7":{"name":"calculateExpectedValue","decl":{"start":{"line":187,"column":9},"end":{"line":187,"column":31}},"loc":{"start":{"line":187,"column":47},"end":{"line":194,"column":1}},"line":187},"8":{"name":"comparePlans","decl":{"start":{"line":203,"column":9},"end":{"line":203,"column":21}},"loc":{"start":{"line":203,"column":45},"end":{"line":207,"column":1}},"line":203},"9":{"name":"filterAndRankPlans","decl":{"start":{"line":216,"column":9},"end":{"line":216,"column":27}},"loc":{"start":{"line":216,"column":59},"end":{"line":224,"column":1}},"line":216},"10":{"name":"(anonymous_10)","decl":{"start":{"line":218,"column":13},"end":{"line":218,"column":14}},"loc":{"start":{"line":218,"column":22},"end":{"line":221,"column":5}},"line":218},"11":{"name":"(anonymous_11)","decl":{"start":{"line":222,"column":16},"end":{"line":222,"column":17}},"loc":{"start":{"line":222,"column":24},"end":{"line":222,"column":46}},"line":222},"12":{"name":"(anonymous_12)","decl":{"start":{"line":223,"column":14},"end":{"line":223,"column":15}},"loc":{"start":{"line":223,"column":24},"end":{"line":223,"column":41}},"line":223},"13":{"name":"calibrateInclusionModel","decl":{"start":{"line":231,"column":9},"end":{"line":231,"column":32}},"loc":{"start":{"line":231,"column":49},"end":{"line":241,"column":1}},"line":231},"14":{"name":"(anonymous_14)","decl":{"start":{"line":236,"column":46},"end":{"line":236,"column":47}},"loc":{"start":{"line":236,"column":51},"end":{"line":236,"column":61}},"line":236},"15":{"name":"getAdaptiveWeights","decl":{"start":{"line":249,"column":9},"end":{"line":249,"column":27}},"loc":{"start":{"line":249,"column":53},"end":{"line":274,"column":1}},"line":249},"16":{"name":"(anonymous_16)","decl":{"start":{"line":269,"column":48},"end":{"line":269,"column":49}},"loc":{"start":{"line":269,"column":60},"end":{"line":269,"column":67}},"line":269},"17":{"name":"(anonymous_17)","decl":{"start":{"line":270,"column":33},"end":{"line":270,"column":34}},"loc":{"start":{"line":270,"column":40},"end":{"line":272,"column":5}},"line":270}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":29,"column":83},"end":{"line":29,"column":114}},"type":"default-arg","locations":[{"start":{"line":29,"column":91},"end":{"line":29,"column":114}}],"line":29},"4":{"loc":{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},{"start":{"line":105,"column":9},"end":{"line":107,"column":5}}],"line":102},"5":{"loc":{"start":{"line":105,"column":9},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":9},"end":{"line":107,"column":5}},{"start":{},"end":{}}],"line":105},"6":{"loc":{"start":{"line":110,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":115,"column":5}},{"start":{"line":113,"column":9},"end":{"line":115,"column":5}}],"line":110},"7":{"loc":{"start":{"line":113,"column":9},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":9},"end":{"line":115,"column":5}},{"start":{},"end":{}}],"line":113},"8":{"loc":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},{"start":{},"end":{}}],"line":118},"9":{"loc":{"start":{"line":122,"column":4},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":125,"column":5}},{"start":{},"end":{}}],"line":122},"10":{"loc":{"start":{"line":137,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":142,"column":5}},{"start":{"line":140,"column":9},"end":{"line":142,"column":5}}],"line":137},"11":{"loc":{"start":{"line":140,"column":9},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":9},"end":{"line":142,"column":5}},{"start":{},"end":{}}],"line":140},"12":{"loc":{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":149,"column":5}},{"start":{},"end":{}}],"line":146},"13":{"loc":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},{"start":{"line":162,"column":9},"end":{"line":164,"column":5}}],"line":159},"14":{"loc":{"start":{"line":162,"column":9},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":162,"column":9},"end":{"line":164,"column":5}},{"start":{},"end":{}}],"line":162},"15":{"loc":{"start":{"line":167,"column":4},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":172,"column":5}},{"start":{"line":170,"column":9},"end":{"line":172,"column":5}}],"line":167},"16":{"loc":{"start":{"line":170,"column":9},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":9},"end":{"line":172,"column":5}},{"start":{},"end":{}}],"line":170},"17":{"loc":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},{"start":{},"end":{}}],"line":176},"18":{"loc":{"start":{"line":206,"column":11},"end":{"line":206,"column":43}},"type":"cond-expr","locations":[{"start":{"line":206,"column":30},"end":{"line":206,"column":35}},{"start":{"line":206,"column":38},"end":{"line":206,"column":43}}],"line":206},"19":{"loc":{"start":{"line":216,"column":44},"end":{"line":216,"column":57}},"type":"default-arg","locations":[{"start":{"line":216,"column":55},"end":{"line":216,"column":57}}],"line":216},"20":{"loc":{"start":{"line":232,"column":4},"end":{"line":234,"column":5}},"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":234,"column":5}},{"start":{},"end":{}}],"line":232},"21":{"loc":{"start":{"line":258,"column":4},"end":{"line":261,"column":5}},"type":"if","locations":[{"start":{"line":258,"column":4},"end":{"line":261,"column":5}},{"start":{},"end":{}}],"line":258},"22":{"loc":{"start":{"line":263,"column":4},"end":{"line":267,"column":5}},"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":267,"column":5}},{"start":{},"end":{}}],"line":263}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0],"20":[0,0],"21":[0,0],"22":[0,0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/strategy/scoring.ts","sources":["/home/runner/work/jit/jit/src/strategy/scoring.ts"],"names":[],"mappings":"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","sourcesContent":["import Decimal from 'decimal.js';\nimport { JitPlan } from '../sim/execution_sim';\n\n// Configure decimal.js for high precision\nDecimal.config({\n  precision: 50,\n  rounding: Decimal.ROUND_DOWN,\n});\n\n/**\n * Scoring context for plan evaluation\n */\nexport interface ScoringContext {\n  /** USD size of the target swap */\n  swapSizeUsd: string;\n  /** Estimated inclusion probability */\n  inclusionProbability: number;\n  /** Gas competition factor */\n  gasCompetition: number;\n  /** Current pool liquidity */\n  poolLiquidity: string;\n  /** Historical success rate (optional) */\n  historicalSuccessRate?: number;\n  /** MEV competition level (optional) */\n  mevCompetition?: number;\n}\n\n/**\n * Inclusion probability model parameters\n */\ninterface InclusionModel {\n  /** Base inclusion probability */\n  baseProbability: number;\n  /** Priority fee sensitivity */\n  feeSensitivity: number;\n  /** Competition adjustment factor */\n  competitionFactor: number;\n  /** Maximum achievable probability */\n  maxProbability: number;\n}\n\n/**\n * Default inclusion model parameters (tuned from backtesting)\n */\nconst DEFAULT_INCLUSION_MODEL: InclusionModel = {\n  baseProbability: 0.3,\n  feeSensitivity: 0.15,\n  competitionFactor: 1.2,\n  maxProbability: 0.85,\n};\n\n/**\n * Estimates the probability of JIT transaction inclusion\n * @param priorityFeeUsd Priority fee offered in USD\n * @param historicalCompetitionFactor Historical competition level\n * @param model Inclusion model parameters\n * @returns Estimated inclusion probability (0-1)\n */\nexport function estimateInclusionProbability(\n  priorityFeeUsd: string,\n  historicalCompetitionFactor: number,\n  model: InclusionModel = DEFAULT_INCLUSION_MODEL\n): number {\n  try {\n    const priorityFee = new Decimal(priorityFeeUsd);\n    const competition = new Decimal(historicalCompetitionFactor);\n    \n    // Logistic model for inclusion probability\n    // P = base + (max - base) * (1 / (1 + exp(-sensitivity * (fee - competition))))\n    \n    const feeAdjustment = priorityFee.sub(competition);\n    const logitInput = feeAdjustment.mul(model.feeSensitivity);\n    \n    // Approximate exp(-x) for reasonable range\n    const expValue = Math.exp(-logitInput.toNumber());\n    const sigmoid = 1 / (1 + expValue);\n    \n    const probability = model.baseProbability + \n      (model.maxProbability - model.baseProbability) * sigmoid;\n    \n    return Math.max(0, Math.min(1, probability));\n  } catch {\n    return model.baseProbability;\n  }\n}\n\n/**\n * Calculates comprehensive score for a JIT plan\n * @param plan JIT plan to score\n * @param context Scoring context\n * @returns Numerical score (higher is better)\n */\nexport function scorePlan(\n  plan: JitPlan,\n  context: ScoringContext\n): number {\n  try {\n    // 1. Profitability Score (40% weight)\n    const profitabilityScore = calculateProfitabilityScore(plan, context);\n    \n    // 2. Risk Score (25% weight)\n    const riskScore = calculateRiskScore(plan, context);\n    \n    // 3. Execution Score (20% weight)\n    const executionScore = calculateExecutionScore(plan, context);\n    \n    // 4. Competition Score (15% weight)\n    const competitionScore = calculateCompetitionScore(plan, context);\n    \n    // Weighted composite score\n    const compositeScore = \n      profitabilityScore * 0.40 +\n      riskScore * 0.25 +\n      executionScore * 0.20 +\n      competitionScore * 0.15;\n    \n    // Apply inclusion probability adjustment\n    const inclusionAdjustedScore = compositeScore * context.inclusionProbability;\n    \n    // Scale to 0-100 range\n    return Math.max(0, Math.min(100, inclusionAdjustedScore * 100));\n  } catch {\n    return 0;\n  }\n}\n\n/**\n * Calculates profitability component of score\n */\nfunction calculateProfitabilityScore(\n  plan: JitPlan,\n  context: ScoringContext\n): number {\n  const expectedNet = new Decimal(plan.expectedNetUsd);\n  const swapSize = new Decimal(context.swapSizeUsd);\n  \n  // Profitability as percentage of swap size\n  const profitMargin = expectedNet.div(swapSize);\n  \n  // Sigmoid scaling for profitability score\n  const normalizedMargin = profitMargin.mul(1000); // Scale for typical values\n  const score = 1 / (1 + Math.exp(-normalizedMargin.toNumber()));\n  \n  return Math.max(0, Math.min(1, score));\n}\n\n/**\n * Calculates risk component of score\n */\nfunction calculateRiskScore(\n  plan: JitPlan,\n  context: ScoringContext\n): number {\n  let riskScore = 1.0; // Start with perfect score\n  \n  // 1. Liquidity risk - how much of pool liquidity we're adding\n  const planLiquidity = new Decimal(plan.liquidity);\n  const poolLiquidity = new Decimal(context.poolLiquidity);\n  const liquidityRatio = planLiquidity.div(poolLiquidity);\n  \n  if (liquidityRatio.gt(0.5)) {\n    riskScore *= 0.6; // High risk if adding >50% of pool\n  } else if (liquidityRatio.gt(0.2)) {\n    riskScore *= 0.8; // Medium risk if adding >20% of pool\n  }\n  \n  // 2. Range risk - how wide is our range\n  const rangeTicks = plan.upperTick - plan.lowerTick;\n  if (rangeTicks < 60) {\n    riskScore *= 0.9; // Narrow ranges are riskier but more profitable\n  } else if (rangeTicks > 300) {\n    riskScore *= 0.7; // Very wide ranges dilute fees\n  }\n  \n  // 3. Size risk - very large positions are riskier\n  const netValue = new Decimal(plan.expectedNetUsd);\n  if (netValue.gt(1000)) {\n    riskScore *= 0.8; // Large positions have higher risk\n  }\n  \n  // 4. Historical success rate adjustment\n  if (context.historicalSuccessRate !== undefined) {\n    const successRate = Math.max(0.1, Math.min(1, context.historicalSuccessRate));\n    riskScore *= successRate;\n  }\n  \n  return Math.max(0, Math.min(1, riskScore));\n}\n\n/**\n * Calculates execution feasibility score\n */\nfunction calculateExecutionScore(\n  plan: JitPlan,\n  context: ScoringContext\n): number {\n  let executionScore = 1.0;\n  \n  // 1. Inclusion probability factor (already considered in main score)\n  executionScore *= context.inclusionProbability;\n  \n  // 2. Gas competition factor\n  const gasCompetition = context.gasCompetition;\n  if (gasCompetition > 2.0) {\n    executionScore *= 0.6; // High gas competition\n  } else if (gasCompetition > 1.5) {\n    executionScore *= 0.8; // Medium gas competition\n  }\n  \n  // 3. Plan complexity (simpler plans execute more reliably)\n  // For now, all plans have same complexity, but could expand\n  \n  // 4. MEV competition adjustment\n  if (context.mevCompetition !== undefined) {\n    const mevFactor = Math.max(0.5, Math.min(1.5, context.mevCompetition));\n    executionScore *= (2 - mevFactor) / 2; // Inverse relationship\n  }\n  \n  return Math.max(0, Math.min(1, executionScore));\n}\n\n/**\n * Calculates competition-based score adjustment\n */\nfunction calculateCompetitionScore(\n  plan: JitPlan,\n  context: ScoringContext\n): number {\n  let competitionScore = 1.0;\n  \n  // 1. Profit attractiveness - higher profits attract more competition\n  const expectedNet = new Decimal(plan.expectedNetUsd);\n  if (expectedNet.gt(500)) {\n    competitionScore *= 0.7; // High-profit opportunities have more competition\n  } else if (expectedNet.gt(100)) {\n    competitionScore *= 0.85; // Medium-profit opportunities\n  }\n  \n  // 2. Swap size attractiveness\n  const swapSize = new Decimal(context.swapSizeUsd);\n  if (swapSize.gt(1000000)) {\n    competitionScore *= 0.6; // Large swaps attract MEV bots\n  } else if (swapSize.gt(100000)) {\n    competitionScore *= 0.8; // Medium swaps\n  }\n  \n  // 3. Pool liquidity factor - less liquid pools have less competition\n  const poolLiquidity = new Decimal(context.poolLiquidity);\n  const liquidityThreshold = new Decimal(10000000); // $10M threshold\n  if (poolLiquidity.lt(liquidityThreshold)) {\n    competitionScore *= 1.2; // Less competition in smaller pools\n  }\n  \n  return Math.max(0, Math.min(1, competitionScore));\n}\n\n/**\n * Calculates expected value of a plan considering all risks\n * @param plan JIT plan\n * @param context Scoring context\n * @returns Expected value in USD\n */\nexport function calculateExpectedValue(\n  plan: JitPlan,\n  context: ScoringContext\n): string {\n  const expectedNet = new Decimal(plan.expectedNetUsd);\n  const inclusionProb = context.inclusionProbability;\n  const riskScore = calculateRiskScore(plan, context);\n  \n  // Expected value = profit * inclusion_probability * risk_adjustment\n  const expectedValue = expectedNet.mul(inclusionProb).mul(riskScore);\n  \n  return expectedValue.toString();\n}\n\n/**\n * Compares two JIT plans and returns the better one\n * @param plan1 First plan\n * @param plan2 Second plan\n * @param context Scoring context\n * @returns The plan with higher score\n */\nexport function comparePlans(\n  plan1: JitPlan,\n  plan2: JitPlan,\n  context: ScoringContext\n): JitPlan {\n  const score1 = scorePlan(plan1, context);\n  const score2 = scorePlan(plan2, context);\n  \n  return score1 >= score2 ? plan1 : plan2;\n}\n\n/**\n * Filters plans that meet minimum score threshold\n * @param plans Array of plans to filter\n * @param context Scoring context\n * @param minScore Minimum acceptable score\n * @returns Filtered and sorted plans\n */\nexport function filterAndRankPlans(\n  plans: JitPlan[],\n  context: ScoringContext,\n  minScore: number = 50\n): JitPlan[] {\n  return plans\n    .map(plan => ({\n      ...plan,\n      score: scorePlan(plan, context)\n    }))\n    .filter(plan => plan.score >= minScore)\n    .sort((a, b) => b.score - a.score);\n}\n\n/**\n * Calibrates inclusion model based on historical data\n * @param historicalData Array of historical attempts with outcomes\n * @returns Calibrated inclusion model\n */\nexport function calibrateInclusionModel(\n  historicalData: Array<{\n    priorityFeeUsd: string;\n    included: boolean;\n    competitionFactor: number;\n  }>\n): InclusionModel {\n  if (historicalData.length < 10) {\n    return DEFAULT_INCLUSION_MODEL; // Need minimum data for calibration\n  }\n  \n  // Simple calibration - in production would use proper regression\n  const successRate = historicalData.filter(d => d.included).length / historicalData.length;\n  \n  return {\n    ...DEFAULT_INCLUSION_MODEL,\n    baseProbability: Math.max(0.1, Math.min(0.9, successRate)),\n  };\n}\n\n/**\n * Dynamic scoring weights based on market conditions\n * @param volatility Market volatility measure\n * @param competition Competition level\n * @returns Adjusted scoring weights\n */\nexport function getAdaptiveWeights(\n  volatility: number,\n  competition: number\n): { profitability: number; risk: number; execution: number; competition: number } {\n  // Default weights\n  const weights = {\n    profitability: 0.40,\n    risk: 0.25,\n    execution: 0.20,\n    competition: 0.15,\n  };\n  \n  // High volatility - increase risk weight\n  if (volatility > 1.5) {\n    weights.risk *= 1.3;\n    weights.profitability *= 0.9;\n  }\n  \n  // High competition - increase execution weight\n  if (competition > 2.0) {\n    weights.execution *= 1.4;\n    weights.competition *= 1.2;\n    weights.profitability *= 0.8;\n  }\n  \n  // Normalize weights to sum to 1\n  const total = Object.values(weights).reduce((sum, w) => sum + w, 0);\n  Object.keys(weights).forEach(key => {\n    weights[key as keyof typeof weights] /= total;\n  });\n  \n  return weights;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"777fb32e96cf27d17f8d90808347ac395a03db29"},"/home/runner/work/jit/jit/src/modules/logger.ts":{"path":"/home/runner/work/jit/jit/src/modules/logger.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":117}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":11,"column":23},"end":{"line":24,"column":1}},"6":{"start":{"line":31,"column":28},"end":{"line":31,"column":60}},"7":{"start":{"line":32,"column":27},"end":{"line":39,"column":9}},"8":{"start":{"line":41,"column":8},"end":{"line":50,"column":9}},"9":{"start":{"line":42,"column":12},"end":{"line":49,"column":14}},"10":{"start":{"line":52,"column":8},"end":{"line":73,"column":9}},"11":{"start":{"line":53,"column":12},"end":{"line":72,"column":14}},"12":{"start":{"line":74,"column":8},"end":{"line":74,"column":54}},"13":{"start":{"line":80,"column":8},"end":{"line":80,"column":40}},"14":{"start":{"line":86,"column":8},"end":{"line":86,"column":40}},"15":{"start":{"line":92,"column":8},"end":{"line":97,"column":9}},"16":{"start":{"line":93,"column":12},"end":{"line":93,"column":55}},"17":{"start":{"line":96,"column":12},"end":{"line":96,"column":46}},"18":{"start":{"line":103,"column":8},"end":{"line":103,"column":41}},"19":{"start":{"line":109,"column":8},"end":{"line":109,"column":41}},"20":{"start":{"line":115,"column":8},"end":{"line":120,"column":9}},"21":{"start":{"line":116,"column":12},"end":{"line":116,"column":55}},"22":{"start":{"line":119,"column":12},"end":{"line":119,"column":46}},"23":{"start":{"line":126,"column":28},"end":{"line":126,"column":40}},"24":{"start":{"line":127,"column":8},"end":{"line":127,"column":57}},"25":{"start":{"line":128,"column":8},"end":{"line":128,"column":27}},"26":{"start":{"line":134,"column":8},"end":{"line":137,"column":11}},"27":{"start":{"line":143,"column":22},"end":{"line":143,"column":52}},"28":{"start":{"line":144,"column":8},"end":{"line":147,"column":59}},"29":{"start":{"line":153,"column":22},"end":{"line":153,"column":62}},"30":{"start":{"line":154,"column":8},"end":{"line":157,"column":34}},"31":{"start":{"line":163,"column":8},"end":{"line":171,"column":11}},"32":{"start":{"line":177,"column":8},"end":{"line":185,"column":11}},"33":{"start":{"line":191,"column":8},"end":{"line":194,"column":11}},"34":{"start":{"line":200,"column":8},"end":{"line":203,"column":11}},"35":{"start":{"line":209,"column":8},"end":{"line":209,"column":27}},"36":{"start":{"line":215,"column":0},"end":{"line":215,"column":27}},"37":{"start":{"line":220,"column":4},"end":{"line":220,"column":30}},"38":{"start":{"line":222,"column":0},"end":{"line":222,"column":36}},"39":{"start":{"line":227,"column":4},"end":{"line":245,"column":6}},"40":{"start":{"line":228,"column":22},"end":{"line":228,"column":32}},"41":{"start":{"line":230,"column":8},"end":{"line":233,"column":11}},"42":{"start":{"line":235,"column":29},"end":{"line":235,"column":33}},"43":{"start":{"line":236,"column":8},"end":{"line":243,"column":10}},"44":{"start":{"line":237,"column":29},"end":{"line":237,"column":47}},"45":{"start":{"line":238,"column":12},"end":{"line":241,"column":15}},"46":{"start":{"line":242,"column":12},"end":{"line":242,"column":27}},"47":{"start":{"line":244,"column":8},"end":{"line":244,"column":15}},"48":{"start":{"line":247,"column":0},"end":{"line":247,"column":50}},"49":{"start":{"line":252,"column":4},"end":{"line":256,"column":7}},"50":{"start":{"line":258,"column":0},"end":{"line":258,"column":32}},"51":{"start":{"line":263,"column":4},"end":{"line":267,"column":7}},"52":{"start":{"line":269,"column":0},"end":{"line":269,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":29},"end":{"line":75,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":24},"end":{"line":81,"column":5}},"line":79},"3":{"name":"(anonymous_3)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":24},"end":{"line":87,"column":5}},"line":85},"4":{"name":"(anonymous_4)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":26},"end":{"line":98,"column":5}},"line":91},"5":{"name":"(anonymous_5)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":25},"end":{"line":104,"column":5}},"line":102},"6":{"name":"(anonymous_6)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":25},"end":{"line":110,"column":5}},"line":108},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":26},"end":{"line":121,"column":5}},"line":114},"8":{"name":"(anonymous_8)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":20},"end":{"line":129,"column":5}},"line":125},"9":{"name":"(anonymous_9)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":24},"end":{"line":138,"column":5}},"line":133},"10":{"name":"(anonymous_10)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":23},"end":{"line":148,"column":5}},"line":142},"11":{"name":"(anonymous_11)","decl":{"start":{"line":152,"column":4},"end":{"line":152,"column":5}},"loc":{"start":{"line":152,"column":24},"end":{"line":158,"column":5}},"line":152},"12":{"name":"(anonymous_12)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":34},"end":{"line":172,"column":5}},"line":162},"13":{"name":"(anonymous_13)","decl":{"start":{"line":176,"column":4},"end":{"line":176,"column":5}},"loc":{"start":{"line":176,"column":25},"end":{"line":186,"column":5}},"line":176},"14":{"name":"(anonymous_14)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":25},"end":{"line":195,"column":5}},"line":190},"15":{"name":"(anonymous_15)","decl":{"start":{"line":199,"column":4},"end":{"line":199,"column":5}},"loc":{"start":{"line":199,"column":30},"end":{"line":204,"column":5}},"line":199},"16":{"name":"(anonymous_16)","decl":{"start":{"line":208,"column":4},"end":{"line":208,"column":5}},"loc":{"start":{"line":208,"column":20},"end":{"line":210,"column":5}},"line":208},"17":{"name":"createLogger","decl":{"start":{"line":219,"column":9},"end":{"line":219,"column":21}},"loc":{"start":{"line":219,"column":35},"end":{"line":221,"column":1}},"line":219},"18":{"name":"createRequestLogger","decl":{"start":{"line":226,"column":9},"end":{"line":226,"column":28}},"loc":{"start":{"line":226,"column":31},"end":{"line":246,"column":1}},"line":226},"19":{"name":"(anonymous_19)","decl":{"start":{"line":227,"column":11},"end":{"line":227,"column":12}},"loc":{"start":{"line":227,"column":31},"end":{"line":245,"column":5}},"line":227},"20":{"name":"(anonymous_20)","decl":{"start":{"line":236,"column":15},"end":{"line":236,"column":16}},"loc":{"start":{"line":236,"column":21},"end":{"line":243,"column":9}},"line":236},"21":{"name":"logStartup","decl":{"start":{"line":251,"column":9},"end":{"line":251,"column":19}},"loc":{"start":{"line":251,"column":28},"end":{"line":257,"column":1}},"line":251},"22":{"name":"logShutdown","decl":{"start":{"line":262,"column":9},"end":{"line":262,"column":20}},"loc":{"start":{"line":262,"column":29},"end":{"line":268,"column":1}},"line":262}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":42}},"type":"binary-expr","locations":[{"start":{"line":12,"column":11},"end":{"line":12,"column":32}},{"start":{"line":12,"column":36},"end":{"line":12,"column":42}}],"line":12},"4":{"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":27}},"type":"default-arg","locations":[{"start":{"line":30,"column":25},"end":{"line":30,"column":27}}],"line":30},"5":{"loc":{"start":{"line":41,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":50,"column":9}},{"start":{},"end":{}}],"line":41},"6":{"loc":{"start":{"line":52,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":73,"column":9}},{"start":{},"end":{}}],"line":52},"7":{"loc":{"start":{"line":55,"column":24},"end":{"line":63,"column":31}},"type":"cond-expr","locations":[{"start":{"line":55,"column":50},"end":{"line":63,"column":26}},{"start":{"line":63,"column":29},"end":{"line":63,"column":31}}],"line":55},"8":{"loc":{"start":{"line":92,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":97,"column":9}},{"start":{"line":95,"column":13},"end":{"line":97,"column":9}}],"line":92},"9":{"loc":{"start":{"line":115,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":120,"column":9}},{"start":{"line":118,"column":13},"end":{"line":120,"column":9}}],"line":115},"10":{"loc":{"start":{"line":143,"column":22},"end":{"line":143,"column":52}},"type":"cond-expr","locations":[{"start":{"line":143,"column":37},"end":{"line":143,"column":43}},{"start":{"line":143,"column":46},"end":{"line":143,"column":52}}],"line":143},"11":{"loc":{"start":{"line":147,"column":18},"end":{"line":147,"column":55}},"type":"cond-expr","locations":[{"start":{"line":147,"column":33},"end":{"line":147,"column":44}},{"start":{"line":147,"column":47},"end":{"line":147,"column":55}}],"line":147},"12":{"loc":{"start":{"line":153,"column":22},"end":{"line":153,"column":62}},"type":"cond-expr","locations":[{"start":{"line":153,"column":46},"end":{"line":153,"column":52}},{"start":{"line":153,"column":55},"end":{"line":153,"column":62}}],"line":153},"13":{"loc":{"start":{"line":162,"column":20},"end":{"line":162,"column":32}},"type":"default-arg","locations":[{"start":{"line":162,"column":30},"end":{"line":162,"column":32}}],"line":162},"14":{"loc":{"start":{"line":219,"column":22},"end":{"line":219,"column":33}},"type":"default-arg","locations":[{"start":{"line":219,"column":31},"end":{"line":219,"column":33}}],"line":219}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1,"13":11,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1},"f":{"0":1,"1":1,"2":11,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[1],"5":[0,1],"6":[0,1],"7":[0,0],"8":[0,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0],"14":[0]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/modules/logger.ts","sources":["/home/runner/work/jit/jit/src/modules/logger.ts"],"names":[],"mappings":"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","sourcesContent":["import pino from 'pino';\n\n/**\n * Logger configuration\n */\nexport interface LoggerConfig {\n  /** Log level */\n  level: string;\n  /** Pretty print for development */\n  prettyPrint: boolean;\n  /** Log file path (optional) */\n  logFile?: string;\n  /** Redact sensitive fields */\n  redactFields: string[];\n  /** Include timestamp */\n  timestamp: boolean;\n}\n\n/**\n * Default logger configuration\n */\nconst DEFAULT_CONFIG: LoggerConfig = {\n  level: process.env.LOG_LEVEL || 'info',\n  prettyPrint: process.env.NODE_ENV === 'development',\n  redactFields: [\n    'privateKey',\n    'mnemonic',\n    'password',\n    'secret',\n    'token',\n    'apiKey',\n    'authorization',\n  ],\n  timestamp: true,\n};\n\n/**\n * Structured logger using pino\n */\nclass Logger {\n  private logger: pino.Logger;\n\n  constructor(config: Partial<LoggerConfig> = {}) {\n    const finalConfig = { ...DEFAULT_CONFIG, ...config };\n    \n    const pinoConfig: pino.LoggerOptions = {\n      level: finalConfig.level,\n      timestamp: finalConfig.timestamp,\n      redact: {\n        paths: finalConfig.redactFields,\n        censor: '[REDACTED]',\n      },\n    };\n\n    // Pretty print for development\n    if (finalConfig.prettyPrint) {\n      pinoConfig.transport = {\n        target: 'pino-pretty',\n        options: {\n          colorize: true,\n          translateTime: 'yyyy-mm-dd HH:MM:ss',\n          ignore: 'pid,hostname',\n        },\n      };\n    }\n\n    // File logging if specified\n    if (finalConfig.logFile) {\n      pinoConfig.transport = {\n        targets: [\n          ...(finalConfig.prettyPrint ? [{\n            target: 'pino-pretty',\n            level: finalConfig.level,\n            options: {\n              colorize: true,\n              translateTime: 'yyyy-mm-dd HH:MM:ss',\n              ignore: 'pid,hostname',\n            },\n          }] : []),\n          {\n            target: 'pino/file',\n            level: finalConfig.level,\n            options: {\n              destination: finalConfig.logFile,\n            },\n          },\n        ],\n      };\n    }\n\n    this.logger = pino(pinoConfig);\n  }\n\n  /**\n   * Log info message\n   */\n  info(message: string, data?: Record<string, unknown>): void {\n    this.logger.info(data, message);\n  }\n\n  /**\n   * Log warning message\n   */\n  warn(message: string, data?: Record<string, unknown>): void {\n    this.logger.warn(data, message);\n  }\n\n  /**\n   * Log error message\n   */\n  error(message: string, error?: Error | Record<string, unknown>): void {\n    if (error instanceof Error) {\n      this.logger.error({ err: error }, message);\n    } else {\n      this.logger.error(error, message);\n    }\n  }\n\n  /**\n   * Log debug message\n   */\n  debug(message: string, data?: Record<string, unknown>): void {\n    this.logger.debug(data, message);\n  }\n\n  /**\n   * Log trace message\n   */\n  trace(message: string, data?: Record<string, unknown>): void {\n    this.logger.trace(data, message);\n  }\n\n  /**\n   * Log fatal message\n   */\n  fatal(message: string, error?: Error | Record<string, unknown>): void {\n    if (error instanceof Error) {\n      this.logger.fatal({ err: error }, message);\n    } else {\n      this.logger.fatal(error, message);\n    }\n  }\n\n  /**\n   * Create child logger with additional context\n   */\n  child(bindings: Record<string, unknown>): Logger {\n    const childLogger = new Logger();\n    childLogger.logger = this.logger.child(bindings);\n    return childLogger;\n  }\n\n  /**\n   * Log JIT attempt\n   */\n  logJitAttempt(data: {\n    poolAddress: string;\n    swapSizeUsd: string;\n    expectedProfitUsd: string;\n    gasPrice: number;\n    blockNumber?: number;\n  }): void {\n    this.info('JIT attempt initiated', {\n      type: 'jit_attempt',\n      ...data,\n    });\n  }\n\n  /**\n   * Log JIT result\n   */\n  logJitResult(data: {\n    poolAddress: string;\n    success: boolean;\n    actualProfitUsd: string;\n    feesCaptured: string;\n    gasUsed?: number;\n    txHash?: string;\n  }): void {\n    const level = data.success ? 'info' : 'warn';\n    this.logger[level]({\n      type: 'jit_result',\n      ...data,\n    }, `JIT ${data.success ? 'succeeded' : 'failed'}`);\n  }\n\n  /**\n   * Log pool health update\n   */\n  logPoolHealth(data: {\n    poolAddress: string;\n    healthScore: number;\n    liquidity: string;\n    issues: string[];\n  }): void {\n    const level = data.healthScore < 50 ? 'warn' : 'debug';\n    this.logger[level]({\n      type: 'pool_health',\n      ...data,\n    }, 'Pool health updated');\n  }\n\n  /**\n   * Log error with context\n   */\n  logError(error: Error, context: Record<string, unknown> = {}): void {\n    this.error('Error occurred', {\n      type: 'error',\n      error: {\n        name: error.name,\n        message: error.message,\n        stack: error.stack,\n      },\n      ...context,\n    });\n  }\n\n  /**\n   * Log transaction details\n   */\n  logTransaction(data: {\n    type: 'mint' | 'burn' | 'swap';\n    poolAddress: string;\n    amount0?: string;\n    amount1?: string;\n    gasEstimate: number;\n    txHash?: string;\n    status?: 'pending' | 'confirmed' | 'failed';\n  }): void {\n    this.info(`Transaction ${data.type}`, {\n      transaction_type: data.type,\n      pool_address: data.poolAddress,\n      amount0: data.amount0,\n      amount1: data.amount1,\n      gas_estimate: data.gasEstimate,\n      tx_hash: data.txHash,\n      status: data.status,\n    });\n  }\n\n  /**\n   * Log performance metrics\n   */\n  logPerformance(data: {\n    operation: string;\n    duration: number;\n    success: boolean;\n    metadata?: Record<string, unknown>;\n  }): void {\n    this.debug('Performance metric', {\n      type: 'performance',\n      ...data,\n    });\n  }\n\n  /**\n   * Log strategy decision\n   */\n  logStrategyDecision(data: {\n    poolAddress: string;\n    decision: 'execute' | 'skip' | 'defer';\n    reason: string;\n    score?: number;\n    profitEstimate?: string;\n  }): void {\n    this.info('Strategy decision', {\n      type: 'strategy_decision',\n      ...data,\n    });\n  }\n\n  /**\n   * Get the underlying pino logger\n   */\n  getPinoLogger(): pino.Logger {\n    return this.logger;\n  }\n}\n\n/**\n * Default logger instance\n */\nexport const log = new Logger();\n\n/**\n * Create a new logger instance with custom configuration\n */\nexport function createLogger(config: Partial<LoggerConfig> = {}): Logger {\n  return new Logger(config);\n}\n\n/**\n * Middleware function for request logging\n */\nexport function createRequestLogger() {\n  return (req: unknown, res: unknown, next: () => void): void => {\n    const start = Date.now();\n    \n    // Log request\n    log.debug('Request started', {\n      type: 'request',\n      // Add request details as needed\n    });\n\n    // Mock response end handler\n    const originalNext = next;\n    next = () => {\n      const duration = Date.now() - start;\n      log.debug('Request completed', {\n        type: 'request_complete',\n        duration,\n      });\n      originalNext();\n    };\n\n    next();\n  };\n}\n\n/**\n * Log system startup\n */\nexport function logStartup(config: {\n  version: string;\n  environment: string;\n  nodeEnv: string;\n  logLevel: string;\n}): void {\n  log.info('JIT Bot starting up', {\n    type: 'startup',\n    ...config,\n    timestamp: new Date().toISOString(),\n  });\n}\n\n/**\n * Log system shutdown\n */\nexport function logShutdown(reason: string): void {\n  log.info('JIT Bot shutting down', {\n    type: 'shutdown',\n    reason,\n    timestamp: new Date().toISOString(),\n  });\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"348867f755d26b410847361ecc38cbe00388e7d7"},"/home/runner/work/jit/jit/src/config/index.ts":{"path":"/home/runner/work/jit/jit/src/config/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":77}},"26":{"start":{"line":27,"column":14},"end":{"line":27,"column":28}},"27":{"start":{"line":28,"column":15},"end":{"line":28,"column":46}},"28":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"29":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"30":{"start":{"line":33,"column":23},"end":{"line":36,"column":3}},"31":{"start":{"line":37,"column":21},"end":{"line":60,"column":2}},"32":{"start":{"line":46,"column":8},"end":{"line":47,"column":22}},"33":{"start":{"line":47,"column":12},"end":{"line":47,"column":22}},"34":{"start":{"line":48,"column":8},"end":{"line":53,"column":9}},"35":{"start":{"line":49,"column":12},"end":{"line":49,"column":57}},"36":{"start":{"line":52,"column":12},"end":{"line":52,"column":58}},"37":{"start":{"line":61,"column":13},"end":{"line":61,"column":17}},"38":{"start":{"line":63,"column":4},"end":{"line":64,"column":22}},"39":{"start":{"line":64,"column":8},"end":{"line":64,"column":22}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":34}},"41":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"42":{"start":{"line":68,"column":8},"end":{"line":68,"column":67}},"43":{"start":{"line":70,"column":19},"end":{"line":70,"column":42}},"44":{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},"45":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"46":{"start":{"line":74,"column":12},"end":{"line":74,"column":65}},"47":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"48":{"start":{"line":77,"column":12},"end":{"line":77,"column":82}},"49":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"50":{"start":{"line":82,"column":8},"end":{"line":82,"column":98}},"51":{"start":{"line":84,"column":4},"end":{"line":84,"column":20}},"52":{"start":{"line":85,"column":4},"end":{"line":85,"column":18}},"53":{"start":{"line":87,"column":0},"end":{"line":87,"column":32}},"54":{"start":{"line":89,"column":4},"end":{"line":89,"column":18}},"55":{"start":{"line":91,"column":0},"end":{"line":91,"column":34}},"56":{"start":{"line":93,"column":19},"end":{"line":93,"column":31}},"57":{"start":{"line":94,"column":4},"end":{"line":107,"column":6}},"58":{"start":{"line":109,"column":0},"end":{"line":109,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":46},"end":{"line":45,"column":47}},"loc":{"start":{"line":45,"column":53},"end":{"line":54,"column":5}},"line":45},"7":{"name":"loadConfig","decl":{"start":{"line":62,"column":9},"end":{"line":62,"column":19}},"loc":{"start":{"line":62,"column":22},"end":{"line":86,"column":1}},"line":62},"8":{"name":"resetConfig","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":20}},"loc":{"start":{"line":88,"column":23},"end":{"line":90,"column":1}},"line":88},"9":{"name":"getConfigSummary","decl":{"start":{"line":92,"column":9},"end":{"line":92,"column":25}},"loc":{"start":{"line":92,"column":28},"end":{"line":108,"column":1}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{},"end":{}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{},"end":{}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{},"end":{}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{},"end":{}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{},"end":{}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"type":"if","locations":[{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},{"start":{},"end":{}}],"line":30},"17":{"loc":{"start":{"line":46,"column":8},"end":{"line":47,"column":22}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":47,"column":22}},{"start":{},"end":{}}],"line":46},"18":{"loc":{"start":{"line":63,"column":4},"end":{"line":64,"column":22}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":64,"column":22}},{"start":{},"end":{}}],"line":63},"19":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":67},"20":{"loc":{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":72},"21":{"loc":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},{"start":{},"end":{}}],"line":73},"22":{"loc":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},{"start":{},"end":{}}],"line":76},"23":{"loc":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},{"start":{},"end":{}}],"line":81},"24":{"loc":{"start":{"line":81,"column":8},"end":{"line":81,"column":96}},"type":"binary-expr","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":32}},{"start":{"line":81,"column":37},"end":{"line":81,"column":58}},{"start":{"line":81,"column":62},"end":{"line":81,"column":95}}],"line":81},"25":{"loc":{"start":{"line":98,"column":22},"end":{"line":98,"column":55}},"type":"binary-expr","locations":[{"start":{"line":98,"column":22},"end":{"line":98,"column":50}},{"start":{"line":98,"column":54},"end":{"line":98,"column":55}}],"line":98}},"s":{"0":1,"1":7,"2":7,"3":7,"4":7,"5":7,"6":1,"7":7,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":7,"21":7,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":2,"33":0,"34":2,"35":2,"36":1,"37":1,"38":10,"39":1,"40":9,"41":9,"42":9,"43":9,"44":8,"45":3,"46":1,"47":2,"48":1,"49":6,"50":1,"51":5,"52":5,"53":1,"54":9,"55":1,"56":1,"57":1,"58":1},"f":{"0":7,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":10,"8":9,"9":1},"b":{"0":[1,1,1],"1":[1,0],"2":[7,0],"3":[7,0],"4":[7,7],"5":[0,7],"6":[7,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[7,0],"15":[7,7],"16":[1,0],"17":[0,2],"18":[1,9],"19":[9,0],"20":[3,5],"21":[1,2],"22":[1,1],"23":[1,5],"24":[6,2,1],"25":[1,1]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/config/index.ts","sources":["/home/runner/work/jit/jit/src/config/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\nimport * as dotenv from 'dotenv';\n\n// Load environment variables early (only in entrypoint)\nif (process.env.NODE_ENV !== 'test') {\n  dotenv.config();\n}\n\nconst rpcArraySchema = z.array(z.object({\n  url: z.string().url(),\n  weight: z.number().int().positive().default(1)\n}));\n\nconst configSchema = z.object({\n  DRY_RUN: z.boolean().default(true),\n  NETWORK: z.enum(['mainnet','goerli','sepolia']).default('mainnet'),\n  PRIVATE_KEY: z.string().optional(),\n  PRIMARY_RPC_HTTP: z.string().url().optional(),\n  FALLBACK_RPC_HTTP: z.string().url().optional(),\n  ERIGON_RPC_HTTP: z.string().url().optional(),\n  WS_RPC_URL: z.string().url().optional(),\n  RPC_PROVIDERS: z.string().transform(val => {\n    if (!val) return [];\n    try { \n      return rpcArraySchema.parse(JSON.parse(val)); \n    } catch { \n      throw new Error('Invalid RPC_PROVIDERS JSON'); \n    }\n  }).optional(),\n  MIN_PROFIT_USD: z.coerce.number().min(0).default(0),\n  MIN_PROFIT_ETH: z.coerce.number().min(0).default(0),\n  MAX_PRIORITY_FEE_GWEI: z.coerce.number().min(0).optional(),\n  LOG_LEVEL: z.enum(['debug','info','warn','error']).default('info'),\n  HEALTH_PORT: z.coerce.number().int().min(1).max(65535).default(9090),\n});\n\nexport type AppConfig = z.infer<typeof configSchema>;\n\nlet cached: AppConfig | null = null;\n\nexport function loadConfig(): AppConfig {\n  if (cached) return cached;\n  \n  const raw: Record<string, unknown> = { ...process.env };\n  \n  // Normalize booleans\n  if ('DRY_RUN' in raw) {\n    raw.DRY_RUN = String(raw.DRY_RUN).toLowerCase() === 'true';\n  }\n\n  const parsed = configSchema.parse(raw);\n  \n  // Validation rules for live mode\n  if (!parsed.DRY_RUN) {\n    if (!parsed.PRIVATE_KEY) {\n      throw new Error('PRIVATE_KEY required in live mode');\n    }\n    if (!/^0x[0-9a-fA-F]{64}$/.test(parsed.PRIVATE_KEY)) {\n      throw new Error('PRIVATE_KEY malformed (expected 0x + 64 hex chars)');\n    }\n  }\n  \n  // Require at least one RPC provider\n  if (!parsed.PRIMARY_RPC_HTTP && (!parsed.RPC_PROVIDERS || parsed.RPC_PROVIDERS.length === 0)) {\n    throw new Error('At least one RPC provider required (PRIMARY_RPC_HTTP or RPC_PROVIDERS)');\n  }\n  \n  cached = parsed;\n  return parsed;\n}\n\nexport function resetConfig(): void {\n  cached = null;\n}\n\nexport function getConfigSummary(): Record<string, unknown> {\n  const config = loadConfig();\n  return {\n    dryRun: config.DRY_RUN,\n    network: config.NETWORK,\n    hasPrivateKey: !!config.PRIVATE_KEY,\n    rpcProviders: config.RPC_PROVIDERS?.length || 0,\n    hasPrimaryRpc: !!config.PRIMARY_RPC_HTTP,\n    hasFallbackRpc: !!config.FALLBACK_RPC_HTTP,\n    hasErigonRpc: !!config.ERIGON_RPC_HTTP,\n    hasWsRpc: !!config.WS_RPC_URL,\n    minProfitUsd: config.MIN_PROFIT_USD,\n    minProfitEth: config.MIN_PROFIT_ETH,\n    logLevel: config.LOG_LEVEL,\n    healthPort: config.HEALTH_PORT\n  };\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7771ff2d723f714c30d8b4911eea4b4710a9d493"},"/home/runner/work/jit/jit/src/execution/gas_estimator.ts":{"path":"/home/runner/work/jit/jit/src/execution/gas_estimator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":88}},"2":{"start":{"line":5,"column":18},"end":{"line":5,"column":55}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":74}},"5":{"start":{"line":9,"column":20},"end":{"line":9,"column":39}},"6":{"start":{"line":10,"column":25},"end":{"line":10,"column":84}},"7":{"start":{"line":11,"column":24},"end":{"line":13,"column":22}},"8":{"start":{"line":14,"column":33},"end":{"line":14,"column":88}},"9":{"start":{"line":16,"column":30},"end":{"line":16,"column":87}},"10":{"start":{"line":17,"column":25},"end":{"line":17,"column":84}},"11":{"start":{"line":18,"column":4},"end":{"line":22,"column":6}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}},"13":{"start":{"line":26,"column":23},"end":{"line":26,"column":58}},"14":{"start":{"line":27,"column":28},"end":{"line":27,"column":95}},"15":{"start":{"line":28,"column":4},"end":{"line":31,"column":6}},"16":{"start":{"line":33,"column":0},"end":{"line":33,"column":44}},"17":{"start":{"line":35,"column":24},"end":{"line":35,"column":54}},"18":{"start":{"line":36,"column":28},"end":{"line":36,"column":71}},"19":{"start":{"line":37,"column":23},"end":{"line":37,"column":58}},"20":{"start":{"line":38,"column":4},"end":{"line":38,"column":108}},"21":{"start":{"line":40,"column":0},"end":{"line":40,"column":46}}},"fnMap":{"0":{"name":"estimateGasFees","decl":{"start":{"line":4,"column":15},"end":{"line":4,"column":30}},"loc":{"start":{"line":4,"column":36},"end":{"line":23,"column":1}},"line":4},"1":{"name":"calculateGasCost","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":25}},"loc":{"start":{"line":25,"column":49},"end":{"line":32,"column":1}},"line":25},"2":{"name":"formatGasEstimate","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":26}},"loc":{"start":{"line":34,"column":37},"end":{"line":39,"column":1}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{},"end":{}}],"line":6},"1":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":38}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":14}},{"start":{"line":6,"column":18},"end":{"line":6,"column":38}}],"line":6},"2":{"loc":{"start":{"line":10,"column":44},"end":{"line":10,"column":75}},"type":"binary-expr","locations":[{"start":{"line":10,"column":44},"end":{"line":10,"column":70}},{"start":{"line":10,"column":74},"end":{"line":10,"column":75}}],"line":10},"3":{"loc":{"start":{"line":11,"column":24},"end":{"line":13,"column":22}},"type":"cond-expr","locations":[{"start":{"line":12,"column":10},"end":{"line":12,"column":58}},{"start":{"line":13,"column":10},"end":{"line":13,"column":22}}],"line":11},"4":{"loc":{"start":{"line":14,"column":33},"end":{"line":14,"column":88}},"type":"cond-expr","locations":[{"start":{"line":14,"column":62},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":88}}],"line":14},"5":{"loc":{"start":{"line":16,"column":49},"end":{"line":16,"column":78}},"type":"binary-expr","locations":[{"start":{"line":16,"column":49},"end":{"line":16,"column":73}},{"start":{"line":16,"column":77},"end":{"line":16,"column":78}}],"line":16}},"s":{"0":1,"1":1,"2":4,"3":4,"4":1,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":4,"1":1,"2":1},"b":{"0":[1,3],"1":[4,4],"2":[3,2],"3":[1,2],"4":[1,2],"5":[3,2]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/execution/gas_estimator.ts","sources":["/home/runner/work/jit/jit/src/execution/gas_estimator.ts"],"names":[],"mappings":";;;AAgBO,KAAK,UAAU,eAAe,CAAC,GAAuB;IAC3D,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACpD,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QACnC,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IACpE,CAAC;IAED,MAAM,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC;IACpC,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,sBAAsB,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACjF,MAAM,WAAW,GAAG,GAAG,CAAC,kBAAkB;QACxC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC,CAAC;QAClD,CAAC,CAAC,YAAY,CAAC;IAEjB,MAAM,oBAAoB,GAAG,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC;IAErF,2EAA2E;IAC3E,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,oBAAoB,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACpF,MAAM,YAAY,GAAG,CAAC,OAAO,GAAG,iBAAiB,CAAC,GAAG,IAAI,GAAG,oBAAoB,CAAC;IAEjF,OAAO;QACL,OAAO;QACP,oBAAoB;QACpB,YAAY;KACb,CAAC;AACJ,CAAC;AAvBD,0CAuBC;AAED,SAAgB,gBAAgB,CAAC,WAAwB,EAAE,QAAgB;IAIzE,MAAM,UAAU,GAAG,WAAW,CAAC,YAAY,GAAG,QAAQ,CAAC;IACvD,MAAM,eAAe,GAAG,CAAC,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,oBAAoB,CAAC,GAAG,QAAQ,CAAC;IAE5F,OAAO;QACL,UAAU;QACV,eAAe;KAChB,CAAC;AACJ,CAAC;AAXD,4CAWC;AAED,SAAgB,iBAAiB,CAAC,QAAqB;IACrD,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;IACnD,MAAM,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,GAAG,CAAC;IACpE,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC;IAEvD,OAAO,QAAQ,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;AAC1G,CAAC;AAND,8CAMC","sourcesContent":["import { ethers } from 'ethers';\n\nexport interface GasEstimate {\n  maxFeePerGas: bigint;\n  maxPriorityFeePerGas: bigint;\n  baseFee: bigint;\n  gasLimit?: bigint;\n}\n\nexport interface GasEstimatorConfig {\n  provider: ethers.JsonRpcProvider;\n  priorityFeeCapGwei?: number;\n  defaultPriorityFeeGwei?: number;\n  maxBaseFeeMultiplier?: number;\n}\n\nexport async function estimateGasFees(cfg: GasEstimatorConfig): Promise<GasEstimate> {\n  const block = await cfg.provider.getBlock('latest');\n  if (!block || !block.baseFeePerGas) {\n    throw new Error('Base fee unavailable - not an EIP-1559 network');\n  }\n\n  const baseFee = block.baseFeePerGas;\n  const priorityGwei = BigInt(Math.floor((cfg.defaultPriorityFeeGwei ?? 1) * 1e9));\n  const capPriority = cfg.priorityFeeCapGwei\n    ? BigInt(Math.floor(cfg.priorityFeeCapGwei * 1e9))\n    : priorityGwei;\n\n  const maxPriorityFeePerGas = priorityGwei > capPriority ? capPriority : priorityGwei;\n  \n  // Use a multiplier for baseFee to account for potential base fee increases\n  const baseFeeMultiplier = BigInt(Math.floor((cfg.maxBaseFeeMultiplier ?? 2) * 100));\n  const maxFeePerGas = (baseFee * baseFeeMultiplier) / 100n + maxPriorityFeePerGas;\n\n  return {\n    baseFee,\n    maxPriorityFeePerGas,\n    maxFeePerGas\n  };\n}\n\nexport function calculateGasCost(gasEstimate: GasEstimate, gasLimit: bigint): {\n  maxCostWei: bigint;\n  expectedCostWei: bigint;\n} {\n  const maxCostWei = gasEstimate.maxFeePerGas * gasLimit;\n  const expectedCostWei = (gasEstimate.baseFee + gasEstimate.maxPriorityFeePerGas) * gasLimit;\n  \n  return {\n    maxCostWei,\n    expectedCostWei\n  };\n}\n\nexport function formatGasEstimate(estimate: GasEstimate): string {\n  const baseFeeGwei = Number(estimate.baseFee) / 1e9;\n  const priorityFeeGwei = Number(estimate.maxPriorityFeePerGas) / 1e9;\n  const maxFeeGwei = Number(estimate.maxFeePerGas) / 1e9;\n\n  return `Gas: ${baseFeeGwei.toFixed(2)} + ${priorityFeeGwei.toFixed(2)} = ${maxFeeGwei.toFixed(2)} gwei`;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0ac7f805f6d3c6081cca024c14c7201ec4a578dc"},"/home/runner/work/jit/jit/src/execution/profit_guard.ts":{"path":"/home/runner/work/jit/jit/src/execution/profit_guard.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":63}},"2":{"start":{"line":5,"column":19},"end":{"line":5,"column":66}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":66}},"4":{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":14,"column":10}},"6":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"7":{"start":{"line":18,"column":8},"end":{"line":23,"column":10}},"8":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"9":{"start":{"line":27,"column":8},"end":{"line":32,"column":10}},"10":{"start":{"line":34,"column":4},"end":{"line":38,"column":6}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":40}},"12":{"start":{"line":42,"column":60},"end":{"line":42,"column":68}},"13":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":44,"column":8},"end":{"line":44,"column":98}},"15":{"start":{"line":47,"column":8},"end":{"line":47,"column":104}},"16":{"start":{"line":50,"column":0},"end":{"line":50,"column":52}}},"fnMap":{"0":{"name":"evaluateProfit","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":23}},"loc":{"start":{"line":4,"column":34},"end":{"line":39,"column":1}},"line":4},"1":{"name":"formatProfitDecision","decl":{"start":{"line":41,"column":9},"end":{"line":41,"column":29}},"loc":{"start":{"line":41,"column":40},"end":{"line":49,"column":1}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":41}},"type":"binary-expr","locations":[{"start":{"line":5,"column":20},"end":{"line":5,"column":36}},{"start":{"line":5,"column":40},"end":{"line":5,"column":41}}],"line":5},"1":{"loc":{"start":{"line":5,"column":46},"end":{"line":5,"column":65}},"type":"binary-expr","locations":[{"start":{"line":5,"column":46},"end":{"line":5,"column":60}},{"start":{"line":5,"column":64},"end":{"line":5,"column":65}}],"line":5},"2":{"loc":{"start":{"line":6,"column":20},"end":{"line":6,"column":41}},"type":"binary-expr","locations":[{"start":{"line":6,"column":20},"end":{"line":6,"column":36}},{"start":{"line":6,"column":40},"end":{"line":6,"column":41}}],"line":6},"3":{"loc":{"start":{"line":6,"column":46},"end":{"line":6,"column":65}},"type":"binary-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":60}},{"start":{"line":6,"column":64},"end":{"line":6,"column":65}}],"line":6},"4":{"loc":{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},{"start":{},"end":{}}],"line":8},"5":{"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":57}},"type":"binary-expr","locations":[{"start":{"line":8,"column":8},"end":{"line":8,"column":28}},{"start":{"line":8,"column":32},"end":{"line":8,"column":57}}],"line":8},"6":{"loc":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},{"start":{},"end":{}}],"line":17},"7":{"loc":{"start":{"line":17,"column":8},"end":{"line":17,"column":57}},"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":57}}],"line":17},"8":{"loc":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":26},"9":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":19}},{"start":{"line":26,"column":23},"end":{"line":26,"column":34}}],"line":26},"10":{"loc":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},{"start":{"line":46,"column":9},"end":{"line":48,"column":5}}],"line":43}},"s":{"0":1,"1":1,"2":7,"3":7,"4":7,"5":2,"6":5,"7":1,"8":4,"9":2,"10":2,"11":1,"12":2,"13":2,"14":1,"15":1,"16":1},"f":{"0":7,"1":2},"b":{"0":[7,2],"1":[7,2],"2":[7,5],"3":[7,5],"4":[2,5],"5":[7,4],"6":[1,4],"7":[5,2],"8":[2,2],"9":[4,2],"10":[1,1]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/execution/profit_guard.ts","sources":["/home/runner/work/jit/jit/src/execution/profit_guard.ts"],"names":[],"mappings":";;;AAoBA,SAAgB,cAAc,CAAC,GAAkB,EAAE,GAAsB;IACvE,MAAM,MAAM,GAAG,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;IAC/D,MAAM,MAAM,GAAG,CAAC,GAAG,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC;IAE/D,6BAA6B;IAC7B,IAAI,GAAG,CAAC,YAAY,GAAG,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;QACtD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,0BAA0B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,YAAY,GAAG;YAC5E,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,MAAM;SACrB,CAAC;IACJ,CAAC;IAED,6BAA6B;IAC7B,IAAI,GAAG,CAAC,YAAY,GAAG,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;QACtD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,0BAA0B,MAAM,MAAM,GAAG,CAAC,YAAY,GAAG;YACjE,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,MAAM;SACrB,CAAC;IACJ,CAAC;IAED,uCAAuC;IACvC,IAAI,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC;QAC/B,OAAO;YACL,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,4BAA4B;YACpC,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,MAAM;SACrB,CAAC;IACJ,CAAC;IAED,OAAO;QACL,OAAO,EAAE,IAAI;QACb,YAAY,EAAE,MAAM;QACpB,YAAY,EAAE,MAAM;KACrB,CAAC;AACJ,CAAC;AAvCD,wCAuCC;AAED,SAAgB,oBAAoB,CAAC,QAAkB;IACrD,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC;IAEjE,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,sBAAsB,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5F,CAAC;SAAM,CAAC;QACN,OAAO,UAAU,MAAM,WAAW,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;IAClG,CAAC;AACH,CAAC;AARD,oDAQC","sourcesContent":["export interface ProfitContext {\n  estProfitUsd?: number;\n  estProfitEth?: number;\n  gasCostUsd?: number;\n  gasCostEth?: number;\n  reason?: string;\n}\n\nexport interface ProfitGuardConfig {\n  minProfitUsd: number;\n  minProfitEth: number;\n}\n\nexport interface Decision {\n  execute: boolean;\n  reason?: string;\n  netProfitUsd?: number;\n  netProfitEth?: number;\n}\n\nexport function evaluateProfit(ctx: ProfitContext, cfg: ProfitGuardConfig): Decision {\n  const netUsd = (ctx.estProfitUsd ?? 0) - (ctx.gasCostUsd ?? 0);\n  const netEth = (ctx.estProfitEth ?? 0) - (ctx.gasCostEth ?? 0);\n\n  // Check USD profit threshold\n  if (cfg.minProfitUsd > 0 && netUsd < cfg.minProfitUsd) {\n    return { \n      execute: false, \n      reason: `netUsd < minProfitUsd (${netUsd.toFixed(2)} < ${cfg.minProfitUsd})`, \n      netProfitUsd: netUsd, \n      netProfitEth: netEth \n    };\n  }\n\n  // Check ETH profit threshold\n  if (cfg.minProfitEth > 0 && netEth < cfg.minProfitEth) {\n    return { \n      execute: false, \n      reason: `netEth < minProfitEth (${netEth} < ${cfg.minProfitEth})`, \n      netProfitUsd: netUsd, \n      netProfitEth: netEth \n    };\n  }\n\n  // Check for non-positive profitability\n  if (netUsd <= 0 && netEth <= 0) {\n    return { \n      execute: false, \n      reason: 'non-positive profitability', \n      netProfitUsd: netUsd, \n      netProfitEth: netEth \n    };\n  }\n\n  return { \n    execute: true, \n    netProfitUsd: netUsd, \n    netProfitEth: netEth \n  };\n}\n\nexport function formatProfitDecision(decision: Decision): string {\n  const { execute, reason, netProfitUsd, netProfitEth } = decision;\n  \n  if (execute) {\n    return `EXECUTE - Profit: $${netProfitUsd?.toFixed(2)} / ${netProfitEth?.toFixed(6)} ETH`;\n  } else {\n    return `SKIP - ${reason} (Net: $${netProfitUsd?.toFixed(2)} / ${netProfitEth?.toFixed(6)} ETH)`;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87f6d1b28fbd8126bd866c04df47427ed873390d"},"/home/runner/work/jit/jit/src/runtime/retry/backoff.ts":{"path":"/home/runner/work/jit/jit/src/runtime/retry/backoff.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":15}},"3":{"start":{"line":8,"column":8},"end":{"line":14,"column":10}},"4":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"5":{"start":{"line":18,"column":12},"end":{"line":18,"column":90}},"6":{"start":{"line":20,"column":20},"end":{"line":20,"column":108}},"7":{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},"8":{"start":{"line":22,"column":26},"end":{"line":22,"column":51}},"9":{"start":{"line":23,"column":12},"end":{"line":23,"column":58}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":19}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":28}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":52}},"14":{"start":{"line":37,"column":0},"end":{"line":37,"column":26}},"15":{"start":{"line":39,"column":20},"end":{"line":39,"column":40}},"16":{"start":{"line":41,"column":4},"end":{"line":53,"column":5}},"17":{"start":{"line":42,"column":8},"end":{"line":52,"column":9}},"18":{"start":{"line":43,"column":12},"end":{"line":43,"column":30}},"19":{"start":{"line":46,"column":12},"end":{"line":46,"column":82}},"20":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"21":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"22":{"start":{"line":50,"column":26},"end":{"line":50,"column":40}},"23":{"start":{"line":51,"column":12},"end":{"line":51,"column":69}},"24":{"start":{"line":51,"column":41},"end":{"line":51,"column":67}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":20}},"26":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":30},"end":{"line":15,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":11},"end":{"line":26,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":5}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":17},"end":{"line":32,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":22},"end":{"line":35,"column":5}},"line":33},"5":{"name":"withRetry","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":24}},"loc":{"start":{"line":38,"column":43},"end":{"line":55,"column":1}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":30},"end":{"line":51,"column":31}},"loc":{"start":{"line":51,"column":41},"end":{"line":51,"column":67}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":28}},"type":"default-arg","locations":[{"start":{"line":7,"column":26},"end":{"line":7,"column":28}}],"line":7},"1":{"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":41}},"type":"binary-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":34}},{"start":{"line":9,"column":38},"end":{"line":9,"column":41}}],"line":9},"2":{"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":41}},"type":"binary-expr","locations":[{"start":{"line":10,"column":19},"end":{"line":10,"column":32}},{"start":{"line":10,"column":36},"end":{"line":10,"column":41}}],"line":10},"3":{"loc":{"start":{"line":11,"column":20},"end":{"line":11,"column":39}},"type":"binary-expr","locations":[{"start":{"line":11,"column":20},"end":{"line":11,"column":34}},{"start":{"line":11,"column":38},"end":{"line":11,"column":39}}],"line":11},"4":{"loc":{"start":{"line":12,"column":20},"end":{"line":12,"column":42}},"type":"binary-expr","locations":[{"start":{"line":12,"column":20},"end":{"line":12,"column":34}},{"start":{"line":12,"column":38},"end":{"line":12,"column":42}}],"line":12},"5":{"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":71}},"type":"binary-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":44}},{"start":{"line":13,"column":48},"end":{"line":13,"column":71}}],"line":13},"6":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{},"end":{}}],"line":17},"7":{"loc":{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},{"start":{},"end":{}}],"line":21},"8":{"loc":{"start":{"line":38,"column":29},"end":{"line":38,"column":41}},"type":"default-arg","locations":[{"start":{"line":38,"column":39},"end":{"line":38,"column":41}}],"line":38},"9":{"loc":{"start":{"line":46,"column":24},"end":{"line":46,"column":81}},"type":"cond-expr","locations":[{"start":{"line":46,"column":49},"end":{"line":46,"column":54}},{"start":{"line":46,"column":57},"end":{"line":46,"column":81}}],"line":46},"10":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{},"end":{}}],"line":47}},"s":{"0":1,"1":1,"2":9,"3":9,"4":21,"5":1,"6":20,"7":20,"8":11,"9":11,"10":9,"11":1,"12":3,"13":11,"14":1,"15":3,"16":3,"17":6,"18":6,"19":4,"20":4,"21":0,"22":4,"23":4,"24":4,"25":1,"26":1},"f":{"0":9,"1":21,"2":1,"3":3,"4":11,"5":3,"6":4},"b":{"0":[1],"1":[9,3],"2":[9,8],"3":[9,7],"4":[9,5],"5":[9,6],"6":[1,20],"7":[11,9],"8":[1],"9":[4,0],"10":[0,4]},"inputSourceMap":{"version":3,"file":"/home/runner/work/jit/jit/src/runtime/retry/backoff.ts","sources":["/home/runner/work/jit/jit/src/runtime/retry/backoff.ts"],"names":[],"mappings":";;;AAQA,MAAa,OAAO;IACV,OAAO,GAAG,CAAC,CAAC;IACH,IAAI,CAA2B;IAEhD,YAAY,UAA0B,EAAE;QACtC,IAAI,CAAC,IAAI,GAAG;YACV,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,GAAG;YAC7B,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,KAAM;YAC9B,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,CAAC;YAC3B,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,IAAI;YAC9B,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,MAAM,CAAC,gBAAgB;SAC5D,CAAC;IACJ,CAAC;IAED,IAAI;QACF,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,2BAA2B,IAAI,CAAC,IAAI,CAAC,WAAW,YAAY,CAAC,CAAC;QAChF,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAErG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACrB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;YACxC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;QAChD,CAAC;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;IAC9C,CAAC;CACF;AAxCD,0BAwCC;AAEM,KAAK,UAAU,SAAS,CAC7B,EAAoB,EACpB,UAA0B,EAAE;IAE5B,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;IACrC,IAAI,SAAgB,CAAC;IAErB,OAAO,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;QACjC,IAAI,CAAC;YACH,OAAO,MAAM,EAAE,EAAE,CAAC;QACpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,SAAS,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAEtE,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;gBAC/B,MAAM;YACR,CAAC;YAED,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;YAC7B,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,MAAM,SAAU,CAAC;AACnB,CAAC;AAvBD,8BAuBC","sourcesContent":["export interface BackoffOptions {\n  baseMs?: number;\n  maxMs?: number;\n  factor?: number;\n  jitter?: boolean;\n  maxAttempts?: number;\n}\n\nexport class Backoff {\n  private attempt = 0;\n  private readonly opts: Required<BackoffOptions>;\n\n  constructor(options: BackoffOptions = {}) {\n    this.opts = {\n      baseMs: options.baseMs ?? 500,\n      maxMs: options.maxMs ?? 30_000,\n      factor: options.factor ?? 2,\n      jitter: options.jitter ?? true,\n      maxAttempts: options.maxAttempts ?? Number.MAX_SAFE_INTEGER\n    };\n  }\n\n  next(): number {\n    if (this.attempt >= this.opts.maxAttempts) {\n      throw new Error(`Maximum retry attempts (${this.opts.maxAttempts}) exceeded`);\n    }\n\n    const raw = Math.min(this.opts.maxMs, this.opts.baseMs * Math.pow(this.opts.factor, this.attempt++));\n    \n    if (this.opts.jitter) {\n      const delta = Math.random() * raw * 0.3;\n      return Math.floor(raw - (raw * 0.15) + delta);\n    }\n    \n    return raw;\n  }\n\n  reset(): void { \n    this.attempt = 0; \n  }\n\n  getAttempt(): number {\n    return this.attempt;\n  }\n\n  hasMoreAttempts(): boolean {\n    return this.attempt < this.opts.maxAttempts;\n  }\n}\n\nexport async function withRetry<T>(\n  fn: () => Promise<T>,\n  options: BackoffOptions = {}\n): Promise<T> {\n  const backoff = new Backoff(options);\n  let lastError: Error;\n\n  while (backoff.hasMoreAttempts()) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error instanceof Error ? error : new Error(String(error));\n      \n      if (!backoff.hasMoreAttempts()) {\n        break;\n      }\n\n      const delay = backoff.next();\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n\n  throw lastError!;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1dfbb0636eeba7fee8f19e55af7cb32e086efd67"}}